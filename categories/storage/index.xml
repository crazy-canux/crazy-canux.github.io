<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Storage on Morgoth</title>
    <link>https://canuxcheng.com/categories/storage/</link>
    <description>Recent content in Storage on Morgoth</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Apr 2021 22:02:31 +0000</lastBuildDate>
    <atom:link href="https://canuxcheng.com/categories/storage/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Storage</title>
      <link>https://canuxcheng.com/post/aws_storage/</link>
      <pubDate>Fri, 23 Apr 2021 22:02:31 +0000</pubDate>
      <guid>https://canuxcheng.com/post/aws_storage/</guid>
      <description>&lt;h1 id=&#34;aws-storage&#34;&gt;AWS Storage&lt;/h1&gt;&#xA;&lt;h2 id=&#34;s3&#34;&gt;S3&lt;/h2&gt;&#xA;&lt;p&gt;Simple Storage Service.&lt;/p&gt;&#xA;&lt;p&gt;S3分类：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;S3标准&lt;/li&gt;&#xA;&lt;li&gt;S3标准-IA&lt;/li&gt;&#xA;&lt;li&gt;S3单区-IA&lt;/li&gt;&#xA;&lt;li&gt;S3智能分层&lt;/li&gt;&#xA;&lt;li&gt;S3 Glacier&lt;/li&gt;&#xA;&lt;li&gt;S3 Glacire Deep Archive&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;特点:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;无限存储&lt;/li&gt;&#xA;&lt;li&gt;单个对象达到5Tb&lt;/li&gt;&#xA;&lt;li&gt;一次写入，多次读取&lt;/li&gt;&#xA;&lt;li&gt;99%持久性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;s3-glacier&#34;&gt;S3 Glacier&lt;/h2&gt;&#xA;&lt;p&gt;用于存放归档文件，按照访问量收费。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ebs&#34;&gt;EBS&lt;/h2&gt;&#xA;&lt;p&gt;Elastic Block Store.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/aws-ebs-csi-driver&#34;&gt;https://github.com/kubernetes-sigs/aws-ebs-csi-driver&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;EBS可以连接到EC2实例，可用区级资源，需要位于同一可用区中才能连接到EC2实例，卷不会自动扩展。&lt;/p&gt;&#xA;&lt;p&gt;EBS只能被单个EC2实例访问。&lt;/p&gt;&#xA;&lt;p&gt;特点:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;大小高达16Tb&lt;/li&gt;&#xA;&lt;li&gt;EC2实例终止后仍然存在&lt;/li&gt;&#xA;&lt;li&gt;默认情况下为固态(SSD)&lt;/li&gt;&#xA;&lt;li&gt;提供IOPS SSD和HDD选项&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;efs&#34;&gt;EFS&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/aws-efs-csi-driver&#34;&gt;https://github.com/kubernetes-sigs/aws-efs-csi-driver&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Elastic File System 是linux的NFS服务.&lt;/p&gt;&#xA;&lt;p&gt;EFS是区域性服务，将数据存储在多个可用区中。可以被上千个EC2实例同时访问。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;完全托管的NFS文件系统&lt;/li&gt;&#xA;&lt;li&gt;为linux负载而设计&lt;/li&gt;&#xA;&lt;li&gt;支持PB级别数据&lt;/li&gt;&#xA;&lt;li&gt;可以跨多个区域存储数据&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;EFS提供两种存储类型(StorageClass): Standard, Infrequent access.&lt;/p&gt;&#xA;&lt;h2 id=&#34;fsx&#34;&gt;FSx&lt;/h2&gt;&#xA;&lt;p&gt;FSx是windows File Server服务.&lt;/p&gt;&#xA;&lt;h2 id=&#34;storage-gateway&#34;&gt;Storage Gateway&lt;/h2&gt;&#xA;&lt;p&gt;支持三种类型:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tape gateway&lt;/li&gt;&#xA;&lt;li&gt;Volume gateway&lt;/li&gt;&#xA;&lt;li&gt;File Gateway&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;aws-backup&#34;&gt;AWS Backup&lt;/h2&gt;&#xA;&lt;h2 id=&#34;aws-edr&#34;&gt;AWS EDR&lt;/h2&gt;&#xA;&lt;p&gt;Elastic Disaster Recovery.&lt;/p&gt;</description>
    </item>
    <item>
      <title>K8S CSI</title>
      <link>https://canuxcheng.com/post/k8s_csi/</link>
      <pubDate>Wed, 25 Mar 2020 20:55:52 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_csi/</guid>
      <description>&lt;h1 id=&#34;csi&#34;&gt;CSI&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/container-storage-interface/spec&#34;&gt;https://github.com/container-storage-interface/spec&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rook&lt;/li&gt;&#xA;&lt;li&gt;cubefs&lt;/li&gt;&#xA;&lt;li&gt;longhorn&lt;/li&gt;&#xA;&lt;li&gt;ceph&lt;/li&gt;&#xA;&lt;li&gt;minio&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;卷volume&#34;&gt;卷Volume&lt;/h2&gt;&#xA;&lt;p&gt;和docker中的一样。&lt;/p&gt;&#xA;&lt;p&gt;volume支持的卷类型有: awsEBS, azureDisk, azureFile, gcePD, secret, configMap, emptyDir, hostPath, local, nfs等.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apiVersion: v1&#xA;kind: Pod&#xA;metadata:&#xA;  name: test-ebs&#xA;spec:&#xA;  containers:&#xA;  - image: k8s.gcr.io/test-webserver&#xA;    name: test-container&#xA;    volumeMounts:&#xA;    - mountPath: /test-ebs&#xA;      name: test-volume&#xA;  volumes:&#xA;  - name: test-volume&#xA;    # 此 AWS EBS 卷必须已经存在&#xA;    awsElasticBlockStore:&#xA;      volumeID: &amp;quot;&amp;lt;volume-id&amp;gt;&amp;quot;&#xA;      fsType: ext4&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;AWS的EBS和EFS需要安装驱动:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/aws-ebs-csi-driver&#34;&gt;https://github.com/kubernetes-sigs/aws-ebs-csi-driver&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/kubernetes-sigs/aws-efs-csi-driver&#34;&gt;https://github.com/kubernetes-sigs/aws-efs-csi-driver&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;存储类storageclass&#34;&gt;存储类StorageClass&lt;/h2&gt;&#xA;&lt;p&gt;storageclass没有namespace.&lt;/p&gt;&#xA;&lt;p&gt;每个存储类包含provisioner, parameters和reclaimPolicy.&lt;/p&gt;&#xA;&lt;p&gt;内置provisioner的卷插件:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;awsEBS&lt;/li&gt;&#xA;&lt;li&gt;azureFile&lt;/li&gt;&#xA;&lt;li&gt;azureDisk&lt;/li&gt;&#xA;&lt;li&gt;gcePD&lt;/li&gt;&#xA;&lt;li&gt;openstack cinder&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;没有provisioner的卷类型可以使用外部插件或者自己开发.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner&#34;&gt;https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Image</title>
      <link>https://canuxcheng.com/post/cncf_image/</link>
      <pubDate>Tue, 03 Dec 2019 21:50:47 +0800</pubDate>
      <guid>https://canuxcheng.com/post/cncf_image/</guid>
      <description>&lt;h1 id=&#34;image&#34;&gt;image&lt;/h1&gt;&#xA;&lt;p&gt;容器镜像&lt;/p&gt;&#xA;&lt;p&gt;docker image driver: aufs, btrfs, devicemapper, overlay.&lt;/p&gt;&#xA;&lt;h2 id=&#34;multi-platform-images&#34;&gt;multi-platform images&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/build/building/multi-platform/&#34;&gt;https://docs.docker.com/build/building/multi-platform/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;qemu&#34;&gt;qemu&lt;/h3&gt;&#xA;&lt;p&gt;使用qume:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 安装bitfmt&#xA;docker run --privileged --rm tonistiigi/binfmt --install all&#xA;&#xA;// 查看支持的平台&#xA;ls -l /proc/sys/fs/binfmt_misc/qemu-*&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;multiple-native-nodes&#34;&gt;multiple native nodes&lt;/h3&gt;&#xA;&lt;p&gt;安装&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// linux&#xA;sudo apt install docker-buildx-plugin&#xA;&#xA;// mac&#xA;brew install docker-buildx&#xA;mkdir -p ~/.docker/cli-plugins&#xA;ln -sfn $(which docker-buildx) ~/.docker/cli-plugins/docker-buildx&#xA;docker buildx install&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;查看版本&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;docker buildx version&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;管理builder instance&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;docker buildx create&#xA;--append 添加node到builder实例。&#xA;--leave 从builder实例删除node&#xA;--driver Driver to use(&amp;quot;docker&amp;quot;, &amp;quot;docker-container&amp;quot;, &amp;quot;kubernetes&amp;quot;)&#xA;--name&#xA;--use&#xA;--node&#xA;--platform &#xA;--bootstrap 启动实例（以容器的形式启动）&#xA;&#xA;// 以本地是amd64为例，创建一个实例.&#xA;docker buildx create --use --bootstrap --platform linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/arm64,linux/arm/v7,linux/arm/v6 --name canux-builder&#xA;&#xA;// 如果没有qumu，可以把不同平台的远程机器加到builder实例.&#xA;docker buildx create \&#xA;--name local_remote_builder \&#xA;--append --node &amp;lt;my-arm-server&amp;gt; \&#xA;--platform linux/arm64,linux/riscv64,linux/ppc64le,linux/s390x,linux/mips64le,linux/mips64,linux/arm/v7,linux/arm/v6 \&#xA;ssh://user@&amp;lt;my-arm-server&amp;gt; &#xA;&#xA;docker buildx rm&#xA;&#xA;docker buildx stop&#xA;&#xA;docker buildx inspect&#xA;&#xA;docker buildx use&#xA;&#xA;// 查看当前可用的builders&#xA;docker buildx ls&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;构建多平台镜像&lt;/p&gt;</description>
    </item>
    <item>
      <title>Command</title>
      <link>https://canuxcheng.com/post/storage_command/</link>
      <pubDate>Sun, 31 Mar 2019 21:51:25 +0000</pubDate>
      <guid>https://canuxcheng.com/post/storage_command/</guid>
      <description>&lt;h1 id=&#34;sysstat&#34;&gt;sysstat:&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;# &amp;lt;https://github.com/sysstat/sysstat&amp;gt;&#xA;$ sudo apt-get install sysstat&#xA;# 包括 iostat/mpstat/pidstat/tapestat/cifsiostat&#xA;&#xA;iostat -d -x -k 1 10&#xA;&#xA;pidstat -d -p pid&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;iotop&#34;&gt;iotop&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 查看进程的diskio&#xA;$ sudo apt-get install iotop&#xA;$ sudo iotop&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;df&#34;&gt;df&lt;/h1&gt;&#xA;&lt;p&gt;df计算文件系统磁盘空间使用:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;df&#xA;$ df -h&#xA;&#xA;# 查看目录信息(读写哪个设备)&#xA;$ df /path/folder&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;dd&#34;&gt;dd&lt;/h1&gt;&#xA;&lt;p&gt;dd转化并拷贝文件:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;dd&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;fsck&#34;&gt;fsck&lt;/h1&gt;&#xA;&lt;p&gt;fsck检查并修复文件系统:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;fsck&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;fdisk&#34;&gt;fdisk&lt;/h1&gt;&#xA;&lt;p&gt;支持msdos，支持2T以下的磁盘.&lt;/p&gt;&#xA;&lt;p&gt;fdisk管理磁盘分区表:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;fdisk&#xA;fdisk -l&#xA;&#xA;fdisk /dev/sda # 可以创建新的磁盘分区&#xA;&amp;gt; n ...    创建新的分区&#xA;&amp;gt; t (8e表示linux LVM), 修改分区类型&#xA;&amp;gt; w 保存修改&#xA;partprobe /dev/sda # 在不重启的情况下保存分区&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;parted&#34;&gt;parted&lt;/h1&gt;&#xA;&lt;p&gt;支持gpt分区表，支持2T以上的大磁盘.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Swarm CSI</title>
      <link>https://canuxcheng.com/post/swarm_csi/</link>
      <pubDate>Thu, 05 Apr 2018 22:02:31 +0000</pubDate>
      <guid>https://canuxcheng.com/post/swarm_csi/</guid>
      <description>&lt;h1 id=&#34;csi&#34;&gt;CSI&lt;/h1&gt;&#xA;&lt;p&gt;CSI: Container Storage Interface&lt;/p&gt;&#xA;&lt;p&gt;CSI提供容器的数据持久化服务.&lt;/p&gt;&#xA;&lt;p&gt;容器管理数据的两种方式：&lt;/p&gt;&#xA;&lt;p&gt;数据卷(Volumes)&lt;/p&gt;&#xA;&lt;p&gt;挂载主机目录(bind mounts)&lt;/p&gt;&#xA;&lt;p&gt;临时文件系统(tmpfs)&lt;/p&gt;&#xA;&lt;h2 id=&#34;数据存储原理&#34;&gt;数据存储原理&lt;/h2&gt;&#xA;&lt;p&gt;如果container上目录不存在，docker会自动创建&lt;/p&gt;&#xA;&lt;p&gt;如果container目录存在且有内容，会被host上的目录覆盖掉，但不会被删除.&lt;/p&gt;&#xA;&lt;h2 id=&#34;volumes&#34;&gt;Volumes&lt;/h2&gt;&#xA;&lt;p&gt;如果host上目录不存在，docker会自动创建&lt;/p&gt;&#xA;&lt;p&gt;volumes是被设计用来持久化数据的，它的生命周期独立于容器.数据卷通过docker volume命令管理的，位于/var/lib/docker/volumes/下面.&lt;/p&gt;&#xA;&lt;p&gt;Docker不会在容器被删除后自动删除 数据卷，并且也不存在垃圾回收这样的机制来处理没有任何容器引用的 数据卷。&lt;/p&gt;&#xA;&lt;p&gt;创建:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ docker volume create &amp;lt;volume-name&amp;gt;&#xA;$ docker volume rm &amp;lt;volume-name&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;使用：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ docker run -v/--volume myvolume:/var/lib/app ...&#xA;$ docker run --mount source=myvolume,target=/var/lib/app ...&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;bind-mount&#34;&gt;Bind mount&lt;/h2&gt;&#xA;&lt;p&gt;如果host上目录不存在会报错，需要提前创建.&lt;/p&gt;&#xA;&lt;p&gt;bind mount就是直接将host路径挂在到docker．&lt;/p&gt;&#xA;&lt;p&gt;source和target都是文件，即可挂载单个文件.&lt;/p&gt;&#xA;&lt;p&gt;使用:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ docker run -v/--volume /opt/app:/var/lib/app:ro ...&#xA;$ docker run --mount type=bind,source=/opt/app,target=/var/lib/app,readonly ...&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;tmpfs&#34;&gt;tmpfs&lt;/h2&gt;&#xA;&lt;p&gt;tmpfs是临时文件系统，也叫内存文件系统，就是将数据存在内存上。&lt;/p&gt;&#xA;&lt;p&gt;tmpfs只能用于linux, 多个容器也不能共享，容器停止数据就销毁。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monitoring</title>
      <link>https://canuxcheng.com/post/storage_monitoring/</link>
      <pubDate>Thu, 05 Apr 2018 21:47:54 +0000</pubDate>
      <guid>https://canuxcheng.com/post/storage_monitoring/</guid>
      <description>&lt;h1 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h1&gt;&#xA;&lt;h2 id=&#34;diskio&#34;&gt;diskio&lt;/h2&gt;&#xA;&lt;p&gt;IOPS: Input/Output Per Second. 每秒输入输出量，也叫TPS.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;SELECT non_negative_derivative(mean(reads),1s) as &amp;quot;read&amp;quot; FROM &amp;quot;diskio&amp;quot;&#xA;SELECT non_negative_derivative(mean(writes),1s) as &amp;quot;write&amp;quot; FROM &amp;quot;diskio&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;throughput:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;SELECT non_negative_derivative(mean(read_bytes),1s) as &amp;quot;read&amp;quot; FROM &amp;quot;diskio&amp;quot;&#xA;SELECT non_negative_derivative(mean(write_bytes),1s) as &amp;quot;write&amp;quot; FROM &amp;quot;diskio&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Utilization:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;SELECT non_negative_derivative(last(&amp;quot;io_time&amp;quot;),1ms)&#xA;FROM &amp;quot;diskio&amp;quot;&#xA;WHERE &amp;quot;name&amp;quot; =~ /^(v|s|)d(a|b|c|d)$/&#xA;GROUP BY &amp;quot;host&amp;quot;,&amp;quot;name&amp;quot;,time(_interval)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Queue length:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;SELECT non_negative_derivative(last(&amp;quot;weighted_io_time&amp;quot;,1ms))&#xA;FROM &amp;quot;diskio&amp;quot;&#xA;WHERE &amp;quot;name&amp;quot; =~ /^(v|s|)d(a|b|c|d)$/&#xA;GROUP BY &amp;quot;host&amp;quot;,&amp;quot;name&amp;quot;,time(_interval)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Storage</title>
      <link>https://canuxcheng.com/post/storage/</link>
      <pubDate>Thu, 05 Apr 2018 21:47:54 +0000</pubDate>
      <guid>https://canuxcheng.com/post/storage/</guid>
      <description>&lt;h1 id=&#34;storage&#34;&gt;Storage&lt;/h1&gt;&#xA;&lt;h1 id=&#34;raid&#34;&gt;RAID&lt;/h1&gt;&#xA;&lt;p&gt;RAID: redundant array of independent disks, 独立磁盘冗余数组．&lt;/p&gt;&#xA;&lt;h1 id=&#34;存储方式&#34;&gt;存储方式&lt;/h1&gt;&#xA;&lt;p&gt;DAS: direct attached storage, 直连式存储，通过SCSI或FC连接服务器．&lt;/p&gt;&#xA;&lt;p&gt;NAS: network attached storage，网络接入存储，通过IP(NFS/CIFS/..).&lt;/p&gt;&#xA;&lt;p&gt;SAN: storage area network, 存储区域网络，有IP或FC两种方式．&lt;/p&gt;&#xA;&lt;h1 id=&#34;存储接口&#34;&gt;存储接口&lt;/h1&gt;&#xA;&lt;p&gt;SCSI&lt;/p&gt;&#xA;&lt;p&gt;iSCSI&lt;/p&gt;&#xA;&lt;p&gt;SAS&lt;/p&gt;&#xA;&lt;p&gt;SATA&lt;/p&gt;&#xA;&lt;p&gt;FC&lt;/p&gt;&#xA;&lt;p&gt;FCoE&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
  </channel>
</rss>
