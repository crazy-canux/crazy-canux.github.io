<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Container on Morgoth</title>
    <link>http://canuxcheng.com/categories/container/</link>
    <description>Recent content in Container on Morgoth</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 05 Apr 2018 22:02:31 +0000</lastBuildDate>
    
	<atom:link href="http://canuxcheng.com/categories/container/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CNI</title>
      <link>http://canuxcheng.com/post/cni/</link>
      <pubDate>Thu, 05 Apr 2018 22:02:31 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/cni/</guid>
      <description>CNI CNI: Container Network Intarface 单台host上的container通信: none host bridge 多台host之间的container通信: overlay macvlan 提供overlay/macvlan的网</description>
    </item>
    
    <item>
      <title>CSI</title>
      <link>http://canuxcheng.com/post/csi/</link>
      <pubDate>Thu, 05 Apr 2018 22:02:31 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/csi/</guid>
      <description>CSI CSI: Container Storage Interface CSI提供容器的数据持久化服务. 容器管理数据的两种方式： 数据卷(Volumes) 挂载主机目录(bind mounts) 临时文件系统(tmpfs)</description>
    </item>
    
    <item>
      <title>Container</title>
      <link>http://canuxcheng.com/post/container/</link>
      <pubDate>Thu, 05 Apr 2018 22:02:31 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/container/</guid>
      <description>Container OCI: Open Container Initiative: runc
CRI: Container Runtime Interface: docker-containerd, rkt
CNI: Container Network Interface.
CSI: Container Storage Interface.</description>
    </item>
    
    <item>
      <title>Docker</title>
      <link>http://canuxcheng.com/post/docker/</link>
      <pubDate>Thu, 05 Apr 2018 22:02:31 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/docker/</guid>
      <description>Docker https://store.docker.com/ https://hub.docker.com/ https://github.com/docker https://github.com/moby/moby Docker是一个容器引擎, 分为社区版CE, 和企业版EE, Docker不是虚拟机, 也不依赖虚拟化技术． Docker包括三个基本概念</description>
    </item>
    
    <item>
      <title>Harbor</title>
      <link>http://canuxcheng.com/post/harbor/</link>
      <pubDate>Thu, 05 Apr 2018 22:02:31 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/harbor/</guid>
      <description>Harbor https://github.com/goharbor/harbor Habor是由VMWare中国团队开源的容器镜像仓库, 用于存储和分发docker镜像的registry服务器. 安装步骤: 下载并解压安装包</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>http://canuxcheng.com/post/kubernetes/</link>
      <pubDate>Thu, 05 Apr 2018 22:02:31 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/kubernetes/</guid>
      <description>Kubernetes https://github.com/kubernetes/kubernetes https://github.com/kubernetes/kubeadm https://github.com/kubernetes/kops https://github.com/kubernetes-sigs/kubespray kubernetes简称k8s, 是开源的容器编排工具。 安装单机版k8s: minikube 安装k8s集群: kubeadm (k8s内置的，类似于docker swarm.) kops</description>
    </item>
    
    <item>
      <title>Swarm</title>
      <link>http://canuxcheng.com/post/swarm/</link>
      <pubDate>Thu, 05 Apr 2018 22:02:31 +0000</pubDate>
      
      <guid>http://canuxcheng.com/post/swarm/</guid>
      <description>Swarm docker swarm 是 docker内置的容器编排工具。 直接在manager上通过compose文件运行服务，通过service-name调用服务，所有no</description>
    </item>
    
  </channel>
</rss>