<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Network on Morgoth</title>
    <link>https://canuxcheng.com/categories/network/</link>
    <description>Recent content in Network on Morgoth</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 23 Apr 2021 22:02:31 +0000</lastBuildDate>
    <atom:link href="https://canuxcheng.com/categories/network/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS Network</title>
      <link>https://canuxcheng.com/post/aws_network/</link>
      <pubDate>Fri, 23 Apr 2021 22:02:31 +0000</pubDate>
      <guid>https://canuxcheng.com/post/aws_network/</guid>
      <description>&lt;h1 id=&#34;aws-network&#34;&gt;AWS Network&lt;/h1&gt;&#xA;&lt;h2 id=&#34;vpc&#34;&gt;VPC&lt;/h2&gt;&#xA;&lt;p&gt;Virtual Private Cloud.&lt;/p&gt;&#xA;&lt;p&gt;EC2的私有内部网络.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;subnets&lt;/li&gt;&#xA;&lt;li&gt;route tables&lt;/li&gt;&#xA;&lt;li&gt;internet gateways&lt;/li&gt;&#xA;&lt;li&gt;nat gateways&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;ENI: Elastic network interfaces.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://canuxcheng.com/images/vpc.png&#34;&gt;pic&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;elb&#34;&gt;ELB&lt;/h2&gt;&#xA;&lt;p&gt;ELB: Elastic Load Balancing&lt;/p&gt;&#xA;&lt;p&gt;弹性负载均衡，可以和EC2,ECS和lambda集成.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://aws.amazon.com/cn/elasticloadbalancing/features/&#34;&gt;https://aws.amazon.com/cn/elasticloadbalancing/features/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;支持四种负载均衡器：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Classic Load Balancer(默认)&lt;/li&gt;&#xA;&lt;li&gt;Gateway Load Balancer&lt;/li&gt;&#xA;&lt;li&gt;Application Load Balancer(ALB)&lt;/li&gt;&#xA;&lt;li&gt;Network Load Balancer(NLB)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/aws-load-balancer-controller.html&#34;&gt;https://docs.aws.amazon.com/zh_cn/eks/latest/userguide/aws-load-balancer-controller.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以使用aws默认自带的NLB controller.也可以通过安装aws-load-balancer-controller。推荐后者。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/aws-load-balancer-controller&#34;&gt;https://github.com/kubernetes-sigs/aws-load-balancer-controller&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;需要给vpc上的node的subnet打tag:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;kubernetes.io/role/elb: 1&#xA;kubernetes.io/role/internal-elb: 1&#xA;kubernetes.io/cluster/${cluster-name}: owned/shared&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;route-53&#34;&gt;Route 53&lt;/h2&gt;&#xA;&lt;p&gt;DNS服务.&lt;/p&gt;&#xA;&lt;p&gt;在route 53创建托管区(hosted zones)之后，可以在ACM申请证书。&lt;/p&gt;&#xA;&lt;p&gt;申请好了证书，需要在route 53创建记录.&lt;/p&gt;&#xA;&lt;p&gt;可以通过external-DNS 自动同步eks上的service和ingress到dns。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;aws route53 list-hosted-zones&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;cloudfront&#34;&gt;CloudFront&lt;/h2&gt;&#xA;&lt;p&gt;CDN服务.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;direct-connect&#34;&gt;Direct Connect&lt;/h2&gt;&#xA;&lt;p&gt;提供数据中心和AWS直连。&lt;/p&gt;</description>
    </item>
    <item>
      <title>K8S CNI</title>
      <link>https://canuxcheng.com/post/k8s_cni/</link>
      <pubDate>Thu, 26 Mar 2020 20:55:52 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_cni/</guid>
      <description>&lt;h1 id=&#34;network-add-ons&#34;&gt;Network add-ons&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/containernetworking&#34;&gt;https://github.com/containernetworking&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;flannel&lt;/li&gt;&#xA;&lt;li&gt;cilium&lt;/li&gt;&#xA;&lt;li&gt;calico&lt;/li&gt;&#xA;&lt;li&gt;vpc-cni (aws)&lt;/li&gt;&#xA;&lt;li&gt;kube-router&lt;/li&gt;&#xA;&lt;li&gt;weavenet&lt;/li&gt;&#xA;&lt;li&gt;antrea&lt;/li&gt;&#xA;&lt;li&gt;romana&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;cilium&#34;&gt;cilium&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cilium/cilium&#34;&gt;https://github.com/cilium/cilium&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;flannel&#34;&gt;Flannel&lt;/h2&gt;&#xA;&lt;p&gt;flannel是k8s最常用的网络插件.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coreos/flannel&#34;&gt;https://github.com/coreos/flannel&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;在所有node上部署cni-plugin:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/containernetworking/plugins/releases&#34;&gt;https://github.com/containernetworking/plugins/releases&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo mkdir -p /opt/cni/bin&#xA;// 下载并解压所有插件命令到该目录.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;network-addon(master上操作即可):&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;veryfy:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get nodes&#xA;$ kubectl get pod --all-namespaces&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;删除插件:&lt;/p&gt;&#xA;&lt;p&gt;删除插件会影响已经部署的pod.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 删除flannel &#xA;$ kubectl delete -f X.yml  &#xA;$ sudo systemctl stop kubelet docker&#xA;&#xA;// 第二步，在node节点清理flannel网络留下的文件&#xA;ifconfig cni0 down&#xA;ip link delete cni0 &#xA;ifconfig flannel.1 down&#xA;ip link delete flannel.1 &#xA;rm -rf /var/lib/cni /etc/cni /run/flannel&#xA;$ sudo rm -rf /var/lib/kubelet /var/lib/etcd&#xA;&#xA;// 重启kubelet&#xA;$ sudo systemctl start kubelet docker&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;修改配置:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Command</title>
      <link>https://canuxcheng.com/post/network_command/</link>
      <pubDate>Sun, 31 Mar 2019 21:51:25 +0000</pubDate>
      <guid>https://canuxcheng.com/post/network_command/</guid>
      <description>&lt;h1 id=&#34;network-command&#34;&gt;network command&lt;/h1&gt;&#xA;&lt;p&gt;network related command&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;net-tools&#34;&gt;net-tools&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ecki/net-tools&#34;&gt;https://github.com/ecki/net-tools&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install net-tools&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;ifconfig&#34;&gt;ifconfig&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;ifconfig # 查看up的interface&#xA;ifconfig -a  # 查看所有的interface&#xA;ifconfig &amp;lt;bridge&amp;gt;/&amp;lt;interface&amp;gt; up/down&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;netstat&#34;&gt;netstat&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;netstat&#xA;-a, --all, --listening # 显示所有socket, 默认只显示connected&#xA;-l, --listening  # 显示listening&#xA;-n, --numeric&#xA;-p, --programs # 显示pid或程序名称&#xA;# socket选项:&#xA;-t, --tcp&#xA;-u, --udp&#xA;-w, --raw&#xA;-x, --unix&#xA;--ax25&#xA;--ipx&#xA;--netrom&#xA;&#xA;# 常用&#xA;netstat -anp    # 查看哪些端口是打开的．&#xA;sudo netstat -anp | grep port # 查看端口是否被使用&#xA;sudo netstat -tulnp # 查看tcp&amp;amp;udp端口是否被监听&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;arp&#34;&gt;arp&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;arp # 用于确定IP地址的网卡物理地址&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;rarp&#34;&gt;rarp&lt;/h3&gt;&#xA;&lt;h3 id=&#34;hostname&#34;&gt;hostname&lt;/h3&gt;&#xA;&lt;h3 id=&#34;domainname&#34;&gt;domainname&lt;/h3&gt;&#xA;&lt;h3 id=&#34;dnsdomainname&#34;&gt;dnsdomainname&lt;/h3&gt;&#xA;&lt;h3 id=&#34;route&#34;&gt;route&lt;/h3&gt;&#xA;&lt;p&gt;Flags:&lt;/p&gt;</description>
    </item>
    <item>
      <title>HA</title>
      <link>https://canuxcheng.com/post/ha/</link>
      <pubDate>Sat, 28 Jul 2018 16:08:54 +0000</pubDate>
      <guid>https://canuxcheng.com/post/ha/</guid>
      <description>&lt;h1 id=&#34;haproxy&#34;&gt;HAProxy&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.haproxy.com/&#34;&gt;https://www.haproxy.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;安装:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install haproxy&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;配置:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/haproxy/haproxy.cfg&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;global:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;    log /dev/log    local0&#xA;    log /dev/log    local1 notice&#xA;    chroot /var/lib/haproxy&#xA;    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners&#xA;    stats timeout 30s&#xA;    user haproxy&#xA;    group haproxy&#xA;    daemon&#xA;&#xA;    # Default SSL material locations&#xA;    ca-base /etc/ssl/certs&#xA;    crt-base /etc/ssl/private&#xA;&#xA;    # Default ciphers to use on SSL-enabled listening sockets.&#xA;    # For more information, see ciphers(1SSL). This list is from:&#xA;    #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/&#xA;    # An alternative list with additional directives can be obtained from&#xA;    #  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy&#xA;    ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS&#xA;    ssl-default-bind-options no-sslv3&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;defaults:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restful</title>
      <link>https://canuxcheng.com/post/rest/</link>
      <pubDate>Sat, 07 Jul 2018 16:43:15 +0000</pubDate>
      <guid>https://canuxcheng.com/post/rest/</guid>
      <description>&lt;h1 id=&#34;rest&#34;&gt;REST&lt;/h1&gt;&#xA;&lt;p&gt;REST: REpresentational State Transfer．&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;restclient&#34;&gt;restclient&lt;/h1&gt;&#xA;&lt;p&gt;一个是firefox的插件．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/chao/RESTClient&#34;&gt;https://github.com/chao/RESTClient&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;另一个是java开发的application.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/wiztools/rest-client&#34;&gt;https://github.com/wiztools/rest-client&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;postman&#34;&gt;postman&lt;/h1&gt;&#xA;&lt;p&gt;postman是一个application,同时也可以从chrome启动.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/postmanlabs&#34;&gt;https://github.com/postmanlabs&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;soupui&#34;&gt;soupui&lt;/h1&gt;&#xA;&lt;p&gt;一个用于SOAP和REST的application.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SmartBear/soapui&#34;&gt;https://github.com/SmartBear/soapui&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Webhook</title>
      <link>https://canuxcheng.com/post/webhook/</link>
      <pubDate>Sat, 07 Jul 2018 16:43:15 +0000</pubDate>
      <guid>https://canuxcheng.com/post/webhook/</guid>
      <description>&lt;h1 id=&#34;webhook&#34;&gt;WebHook&lt;/h1&gt;&#xA;&lt;p&gt;用于server和server之间通讯．&lt;/p&gt;</description>
    </item>
    <item>
      <title>WebService</title>
      <link>https://canuxcheng.com/post/webservice/</link>
      <pubDate>Sat, 07 Jul 2018 16:43:15 +0000</pubDate>
      <guid>https://canuxcheng.com/post/webservice/</guid>
      <description>&lt;h1 id=&#34;webservice&#34;&gt;webservice&lt;/h1&gt;&#xA;&lt;p&gt;webservice用于server和browser之间通讯．&lt;/p&gt;&#xA;&lt;p&gt;webservice是基于http的，无状态的．&lt;/p&gt;&#xA;&lt;p&gt;webservice一般分为soap webservice和http webservice.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;soap&#34;&gt;SOAP&lt;/h1&gt;&#xA;&lt;p&gt;Simple Object Access Protocol, 简单对象访问协议，是一个基于XML的协议．&lt;/p&gt;&#xA;&lt;p&gt;简单来说SOAP的思想就是通过http + XML来在server和browser之间交换信息．&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;soupui&#34;&gt;soupui&lt;/h1&gt;&#xA;&lt;p&gt;一个用于SOAP和REST的application.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SmartBear/soapui&#34;&gt;https://github.com/SmartBear/soapui&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dns</title>
      <link>https://canuxcheng.com/post/dns/</link>
      <pubDate>Thu, 03 May 2018 14:46:19 +0000</pubDate>
      <guid>https://canuxcheng.com/post/dns/</guid>
      <description>&lt;h1 id=&#34;dns&#34;&gt;DNS&lt;/h1&gt;&#xA;&lt;p&gt;Domain Name System: 域名系统&lt;/p&gt;</description>
    </item>
    <item>
      <title>Swarm CNI</title>
      <link>https://canuxcheng.com/post/swarm_cni/</link>
      <pubDate>Thu, 05 Apr 2018 22:02:31 +0000</pubDate>
      <guid>https://canuxcheng.com/post/swarm_cni/</guid>
      <description>&lt;h1 id=&#34;cni&#34;&gt;CNI&lt;/h1&gt;&#xA;&lt;p&gt;CNI: Container Network Intarface&lt;/p&gt;&#xA;&lt;h2 id=&#34;单台host上的container通信&#34;&gt;单台host上的container通信&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;none&lt;/li&gt;&#xA;&lt;li&gt;host&lt;/li&gt;&#xA;&lt;li&gt;bridge&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;多台host之间的container通信&#34;&gt;多台host之间的container通信&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;overlay&lt;/li&gt;&#xA;&lt;li&gt;macvlan&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;提供overlaymacvlan的网络服务&#34;&gt;提供overlay/macvlan的网络服务&lt;/h3&gt;&#xA;&lt;p&gt;vxlan encapsulated:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;canal&lt;/li&gt;&#xA;&lt;li&gt;flannel&lt;/li&gt;&#xA;&lt;li&gt;weave&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;bgp unencapsulated:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;calico&lt;/li&gt;&#xA;&lt;li&gt;romana&lt;/li&gt;&#xA;&lt;li&gt;cilium&lt;/li&gt;&#xA;&lt;li&gt;kube-router&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;docker网络管理&#34;&gt;Docker网络管理&lt;/h1&gt;&#xA;&lt;p&gt;查看:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ docker network ls # 查看所有网络&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;默认支持的三种模式:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 默认启动的容器都是桥接(docker0)，重启后容器的ip就变了。&#xA;docker run --network bridge  ...&#xA;docker run --network host ... # 容器和主机使用相同的ip&#xA;docker run --network none ... # 容器不会分配局域网的ip&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;创建:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;docker network create -d &amp;lt;driver&amp;gt; ... [name]&#xA;-d/--driver # 默认是bridge, 可选overlay/macvlan&#xA;--subnet  # CIDR格式&#xA;--gateway&#xA;--ip-range&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;使用:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Websocket</title>
      <link>https://canuxcheng.com/post/websocket/</link>
      <pubDate>Tue, 03 Apr 2018 14:46:19 +0000</pubDate>
      <guid>https://canuxcheng.com/post/websocket/</guid>
      <description>&lt;h1 id=&#34;websocket&#34;&gt;WebSocket&lt;/h1&gt;&#xA;&lt;p&gt;websocket用于server和browser之间通讯．&lt;/p&gt;&#xA;&lt;p&gt;websocket采用特殊报头，使得浏览器和服务器只需要做一个握手的动作．&lt;/p&gt;&#xA;&lt;p&gt;通讯数据以\x00开头，以\xFF结尾．&lt;/p&gt;&#xA;&lt;p&gt;url:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ws://&#xA;wss://&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;一个客户端只建立一个tcp连接&lt;/p&gt;&#xA;&lt;p&gt;服务端可以推送/push数据到web客户端&lt;/p&gt;&#xA;&lt;p&gt;有更加亲量级的头，减少数据传送．&lt;/p&gt;</description>
    </item>
    <item>
      <title>GSL_network</title>
      <link>https://canuxcheng.com/post/gsl_network/</link>
      <pubDate>Mon, 01 Jan 2018 10:49:21 +0000</pubDate>
      <guid>https://canuxcheng.com/post/gsl_network/</guid>
      <description>&lt;h1 id=&#34;net&#34;&gt;net&lt;/h1&gt;&#xA;&lt;p&gt;网络IO接口，包括TCP/IP, UDP, SOCKET, DNS&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;import &amp;quot;net&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;constants&#34;&gt;constants&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;const (&#xA;    IPv4len = 4&#xA;    IPv6len = 16&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;variables&#34;&gt;variables&lt;/h2&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;functions&lt;/h2&gt;&#xA;&lt;h2 id=&#34;addr&#34;&gt;Addr&lt;/h2&gt;&#xA;&lt;p&gt;代表一个网络终端地址．&lt;/p&gt;&#xA;&lt;p&gt;TCPAddr, UDPAddr, IPAddr, UnixAddr 都实现了该接口&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;type Addr interface {&#xA;    Network() string&#xA;    String() string&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;tcpaddr&#34;&gt;TCPAddr&lt;/h2&gt;&#xA;&lt;p&gt;function:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;func ResolveTCPAddr(net, addr string) (*TCPAddr, error)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;udpaddr&#34;&gt;UDPAddr&lt;/h2&gt;&#xA;&lt;p&gt;function:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;func ResolveUDPAddr(net, addr string) (*UDPAddr, error)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;ipaddr&#34;&gt;IPAddr&lt;/h2&gt;&#xA;&lt;p&gt;function:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;func ResolveIPAddr(net, addr string) (*IPAddr, error)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;unixaddr&#34;&gt;UnixAddr&lt;/h2&gt;&#xA;&lt;p&gt;function:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;func ResolveUnixAddr(net, addr string) (*UnixAddr, error)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;conn&#34;&gt;Conn&lt;/h2&gt;&#xA;&lt;p&gt;该接口代表通用的面向流的网络连接．&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rabbitmq</title>
      <link>https://canuxcheng.com/post/rabbitmq/</link>
      <pubDate>Mon, 25 Sep 2017 09:41:39 +0000</pubDate>
      <guid>https://canuxcheng.com/post/rabbitmq/</guid>
      <description>&lt;h1 id=&#34;amqp&#34;&gt;AMQP&lt;/h1&gt;&#xA;&lt;p&gt;AMQP: Advanced Message Queuing Protocol,高级消息队列协议&lt;/p&gt;&#xA;&lt;p&gt;常用的开源AMQP框架：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rabbitmq&#34;&gt;https://github.com/rabbitmq&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/kafka&#34;&gt;https://github.com/apache/kafka&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/activemq&#34;&gt;https://github.com/apache/activemq&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;mqtt&#34;&gt;MQTT&lt;/h1&gt;&#xA;&lt;p&gt;MQTT: Message Queuing Telemetry Transport,消息队列遥测传输协议&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;rabbitmq&#34;&gt;Rabbitmq&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rabbitmq&#34;&gt;https://github.com/rabbitmq&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;RabbitMQ是一个erlang开发的符合AMQP和MQTT的开源项目．&lt;/p&gt;&#xA;&lt;p&gt;rabbitmq-server也叫broker server&lt;/p&gt;&#xA;&lt;p&gt;rabbitmq的三个组件：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;exchange,　交换器，发送消息的实体&lt;/li&gt;&#xA;&lt;li&gt;binding, 绑定器，连接交换器和队列，并且封装消息的路由信息&lt;/li&gt;&#xA;&lt;li&gt;queue,　队列，接受消息的实体&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;workflow:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;producer(publish-message) =&amp;gt;&#xA;&#xA;rabbitmq-server =&amp;gt; exchange -&amp;gt; binding -&amp;gt; queue =&amp;gt;&#xA;&#xA;=&amp;gt; comsumer&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;producer: 生产message并且publish到rabbitmq-server.&lt;/p&gt;&#xA;&lt;p&gt;consumer: 连接到rabbitmq-server并且subscribe一些queue.&lt;/p&gt;&#xA;&lt;p&gt;connection: producer和consumer都是通过tcp连接到rabbitmq-server.&lt;/p&gt;&#xA;&lt;p&gt;channels: 建立在tcp连接中的虚拟连接，用于处理数据流动.&lt;/p&gt;&#xA;&lt;p&gt;queue:　生产者和消费者都应该创建queue.(只能通过exchange接收message)&lt;/p&gt;&#xA;&lt;p&gt;exchanges类型:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;fanout: 所有绑定到此exchange的queue都可以接收消息&lt;/li&gt;&#xA;&lt;li&gt;direct: 通过routingKey和exchange决定的那个唯一的queue可以接收消息&lt;/li&gt;&#xA;&lt;li&gt;topic：所有符合routingKey(此时可以是一个表达式)的routingKey所bind的queue可以接收消息&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;message类型:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;messages: 生产者产生的总消息数．&lt;/li&gt;&#xA;&lt;li&gt;messages_ready: 等待deliver给消费者的消息．&lt;/li&gt;&#xA;&lt;li&gt;messages_unack: 已经被consumer处理，但是没有被ack的消息．&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;virtual hosts: 本质就是一个rabbitmq server,拥有独立的exchange,queue.默认是/(%2F).&lt;/p&gt;&#xA;&lt;p&gt;round-robin dispatch: 循环分发，按顺序分发message到consumer,如果message被consumer正确接收，就会从queue中移除．&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rpc</title>
      <link>https://canuxcheng.com/post/rpc/</link>
      <pubDate>Sun, 03 Sep 2017 14:46:19 +0000</pubDate>
      <guid>https://canuxcheng.com/post/rpc/</guid>
      <description>&lt;h1 id=&#34;rpc&#34;&gt;RPC&lt;/h1&gt;&#xA;&lt;p&gt;Remote Procedure Call Protocol: 远程过程调用.&lt;/p&gt;&#xA;&lt;p&gt;google的rpc框架，支持多语言:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grpc/grpc&#34;&gt;https://github.com/grpc/grpc&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;facebook的rpc框架，贡献给了apache, 支持多语言:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/thrift&#34;&gt;https://github.com/apache/thrift&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Smtp</title>
      <link>https://canuxcheng.com/post/smtp/</link>
      <pubDate>Wed, 26 Apr 2017 09:56:04 +0000</pubDate>
      <guid>https://canuxcheng.com/post/smtp/</guid>
      <description>&lt;h1 id=&#34;email&#34;&gt;Email&lt;/h1&gt;&#xA;&lt;p&gt;MTA: Mail Transfer Agent&lt;/p&gt;&#xA;&lt;p&gt;MUA: Mail User Agent&lt;/p&gt;&#xA;&lt;p&gt;python邮件服务器MTA：smtp协议&lt;/p&gt;&#xA;&lt;p&gt;python客户端MUA：本地协议pop3, 远程协议imap&lt;/p&gt;&#xA;&lt;h2 id=&#34;mailutils&#34;&gt;mailutils:&lt;/h2&gt;&#xA;&lt;p&gt;mailutils默认安装postfix,如果已经安装其它MTA就使用已经安装的．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install mailutils&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;非交互安装mailutils:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 这里不用配置任何参数．&#xA;$ sudo debconf-set-selections &amp;lt;&amp;lt;&amp;lt; &amp;quot;postfix postfix/mailname string &amp;quot;&#xA;$ sudo debconf-set-selections &amp;lt;&amp;lt;&amp;lt; &amp;quot;postfix postfix/main_mailer_type string &#39;Internet Site&#39;&amp;quot;&#xA;$ sudo apt-get install -y mailutils&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;测试：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ echo &amp;quot;test mail body&amp;quot; | mail -s &amp;quot;test mail title&amp;quot; canuxcheng@gmail.com&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;sendmail&#34;&gt;sendmail&lt;/h1&gt;&#xA;&lt;p&gt;开源的smtp服务器．&lt;/p&gt;&#xA;&lt;p&gt;安装sendmail:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install sendmail&#xA;$ sudo apt-get install sendmail-cf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;配置：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Apache</title>
      <link>https://canuxcheng.com/post/apache/</link>
      <pubDate>Tue, 27 Sep 2016 03:25:26 +0800</pubDate>
      <guid>https://canuxcheng.com/post/apache/</guid>
      <description>&lt;h1 id=&#34;apache&#34;&gt;Apache&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/apache/httpd&#34;&gt;https://github.com/apache/httpd&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://httpd.apache.org/&#34;&gt;http://httpd.apache.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ubuntu/debian：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo aptitude install apache2&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;redhat/centos/fedora:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo yum install httpd2&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;启动服务器：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;service apache2 start&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;启动浏览器查看：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;http://localhost:80&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;apache命令&#34;&gt;apache命令&lt;/h1&gt;&#xA;&lt;p&gt;apache2ctl:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 检查配置&#xA;$ apache2ctl configtest&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;a2ensite&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 启用一个站点&#xA;$ sudo a2ensite &amp;lt;site&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;a2dissite&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo a2dissite &amp;lt;site&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;a2enmod&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 启用一个模块&#xA;$ sudo a2enmod &amp;lt;mod&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;a2dismod&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo a2dismod &amp;lt;mod&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;配置&#34;&gt;配置&lt;/h1&gt;&#xA;&lt;p&gt;配置站点site-enable/site.conf:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;VirtualHost *:8080&amp;gt;&#xA;    ServerAdmin webmaster@localhost&#xA;    DocumentRoot /opt&#xA;&#xA;    # 适合多目录&#xA;    Alias /qa /opt/qa&#xA;    Alias /dev /opt/dev&#xA;&#xA;    ErrorLog ${APACHE_LOG_DIR}/error.log&#xA;    CustomLog ${APACHE_LOG_DIR}/access.log combined&#xA;&amp;lt;/VirtualHost&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;修改权限apache2.conf:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Http</title>
      <link>https://canuxcheng.com/post/http/</link>
      <pubDate>Tue, 13 Sep 2016 01:39:34 +0000</pubDate>
      <guid>https://canuxcheng.com/post/http/</guid>
      <description>&lt;h1 id=&#34;httphttps&#34;&gt;HTTP/HTTPS&lt;/h1&gt;&#xA;&lt;p&gt;http port: 80&lt;/p&gt;&#xA;&lt;p&gt;https port: 443&lt;/p&gt;&#xA;&lt;p&gt;http/https的请求方式：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;get # 从服务器取出资源&#xA;post # 在服务器新建资源&#xA;put # 在服务器更新资源，客户端提供改变后的完整资源&#xA;delete # 从服务器删除资源&#xA;patch # 在服务器更新资源，客户端提供改变的属性&#xA;head # 获取资源的源数据&#xA;options # 获取资源的哪些信息是客户端可以改变的信息&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;URL: Uniform Resource Locator&lt;/p&gt;&#xA;&lt;p&gt;URI: Universal Resource Identifier&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;scheme&amp;gt;://&amp;lt;netloc&amp;gt;/&amp;lt;path&amp;gt;;&amp;lt;params&amp;gt;?&amp;lt;query&amp;gt;#&amp;lt;fragment&amp;gt;&#xA;scheme: http/https/ftp/file&#xA;netloc: username:password@host:port&#xA;path: /path/to/path&#xA;params: options arguments&#xA;query: connector&amp;amp;key-value&#xA;fragment:&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;http命令&#34;&gt;http命令&lt;/h1&gt;&#xA;&lt;h2 id=&#34;curl&#34;&gt;curl&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ curl [options] [URL...]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;httpie&#34;&gt;httpie&lt;/h2&gt;&#xA;&lt;p&gt;python开发的类似于curl的命令行工具，同时还有wget的功能．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jakubroztocil/httpie&#34;&gt;https://github.com/jakubroztocil/httpie&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo yum/apt-get install httpie&#xA;&#xA;$ http -a &#39;username:password&#39; GET http://google.com&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;python的http标准库&#34;&gt;python的http标准库&lt;/h1&gt;&#xA;&lt;p&gt;python2的http标准库&lt;/p&gt;</description>
    </item>
    <item>
      <title>PSL_Network</title>
      <link>https://canuxcheng.com/post/psl_network/</link>
      <pubDate>Fri, 12 Aug 2016 14:21:36 +0000</pubDate>
      <guid>https://canuxcheng.com/post/psl_network/</guid>
      <description>&lt;h1 id=&#34;internet-protocols-and-support&#34;&gt;Internet Protocols and Support&lt;/h1&gt;&#xA;&lt;p&gt;socketserver/http/ftp参考&lt;a href=&#34;https://super-devops.readthedocs.io/en/latest/&#34;&gt;https://super-devops.readthedocs.io/en/latest/&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;pop,imap/smtp参考&lt;a href=&#34;https://super-devops.readthedocs.io/en/latest/&#34;&gt;https://super-devops.readthedocs.io/en/latest/&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;urllib&#34;&gt;urllib&lt;/h2&gt;&#xA;&lt;p&gt;urllib.request&lt;/p&gt;&#xA;&lt;p&gt;urllib.respponse&lt;/p&gt;&#xA;&lt;p&gt;urllib.parse&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;from urllib.parse import urlparse&#xA;from urllib.parse import urljoin&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;urllib.error&lt;/p&gt;&#xA;&lt;p&gt;urllib.robotparser&lt;/p&gt;&#xA;&lt;h2 id=&#34;ipaddress&#34;&gt;ipaddress&lt;/h2&gt;&#xA;&lt;h2 id=&#34;webbrowser&#34;&gt;webbrowser&lt;/h2&gt;&#xA;&lt;h2 id=&#34;cgi&#34;&gt;cgi&lt;/h2&gt;&#xA;&lt;h2 id=&#34;cgitb&#34;&gt;cgitb&lt;/h2&gt;&#xA;&lt;h2 id=&#34;wsgiref&#34;&gt;wsgiref&lt;/h2&gt;&#xA;&lt;h2 id=&#34;xmlrpc&#34;&gt;xmlrpc&lt;/h2&gt;&#xA;&lt;h2 id=&#34;socketserver&#34;&gt;socketserver&lt;/h2&gt;&#xA;&lt;h2 id=&#34;nntplib&#34;&gt;nntplib&lt;/h2&gt;&#xA;&lt;p&gt;network news transfer protocol&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;import nntplib&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;telnet&#34;&gt;telnet&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;import telnetlib&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;structured-markup-processing-tools&#34;&gt;Structured Markup Processing Tools&lt;/h1&gt;&#xA;&lt;h2 id=&#34;html&#34;&gt;html&lt;/h2&gt;&#xA;&lt;h2 id=&#34;xml&#34;&gt;xml&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;internet-data-handling&#34;&gt;Internet Data Handling&lt;/h1&gt;&#xA;&lt;h2 id=&#34;json&#34;&gt;json&lt;/h2&gt;&#xA;&lt;p&gt;http api(restful)一般使用json格式的数据．&lt;/p&gt;&#xA;&lt;p&gt;python和json数据类型对应关系参考WEB/JSON.&lt;/p&gt;&#xA;&lt;p&gt;complex和class/def不能被编码.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;import json&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;classes:&lt;/p&gt;&#xA;&lt;p&gt;functions:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 将转换后的json格式写入文件&#xA;dump(obj, fp, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, encoding=&#39;utf-8&#39;, default=None, sort_keys=False, **kw)&#xA;with open(file, &#39;w&#39;) as f:&#xA;    json.dump(dict_data, f)&#xA;&#xA;# 将dict类型转换成json格式&#xA;dumps(obj, skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, cls=None, indent=None, separators=None, encoding=&#39;utf-8&#39;, default=None, sort_keys=False, **kw)&#xA;json_data = json.dumps(dict_data)&#xA;&#xA;indent=4 # 写入自动缩进４个空格&#xA;&#xA;# 将读出的文件(json格式)转换成dict&#xA;load(fp, encoding=None, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, **kw)&#xA;with open(file, &#39;r&#39;) as f:&#xA;    dict_data = json.load(f)&#xA;&#xA;# json类型变成dict类型&#xA;loads(s, encoding=None, cls=None, object_hook=None, parse_float=None, parse_int=None, parse_constant=None, object_pairs_hook=None, **kw)&#xA;response_dict = json.loads(response.content) # 使用requests获取的json数据,转化为dict类型&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;base64&#34;&gt;base64&lt;/h2&gt;&#xA;&lt;h2 id=&#34;mailcap&#34;&gt;mailcap&lt;/h2&gt;&#xA;&lt;h2 id=&#34;mailbox&#34;&gt;mailbox&lt;/h2&gt;&#xA;&lt;h2 id=&#34;minetypes&#34;&gt;minetypes&lt;/h2&gt;&#xA;&lt;h2 id=&#34;binhex&#34;&gt;binhex&lt;/h2&gt;&#xA;&lt;h2 id=&#34;binascii&#34;&gt;binascii&lt;/h2&gt;&#xA;&lt;h2 id=&#34;quopri&#34;&gt;quopri&lt;/h2&gt;&#xA;&lt;h2 id=&#34;uu&#34;&gt;uu&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Ftp</title>
      <link>https://canuxcheng.com/post/ftp/</link>
      <pubDate>Thu, 28 Jul 2016 16:08:54 +0000</pubDate>
      <guid>https://canuxcheng.com/post/ftp/</guid>
      <description>&lt;h1 id=&#34;ftp&#34;&gt;FTP&lt;/h1&gt;&#xA;&lt;p&gt;ftp服务器有很多：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;vsftpd&lt;/li&gt;&#xA;&lt;li&gt;proftpd&lt;/li&gt;&#xA;&lt;li&gt;pyftpdlib&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;vsftpd&#34;&gt;vsftpd&lt;/h1&gt;&#xA;&lt;p&gt;安装vsftpd:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install vsftpd&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;windows开启ftp服务和建立IIS站点即可。&lt;/p&gt;&#xA;&lt;p&gt;linux配置：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ vim /etc/vsftpd.conf&#xA;local_root=/home/canux/FTP&#xA;anon_root=/home/canux/FTP&#xA;local_enable=YES&#xA;anonymous_enable=YES&#xA;chroot_local_user=YES&#xA;$ sudo service vsftpd restart&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;ftp的网页浏览格式：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ftp://host/path&#xA;ftp://username:password@host:port/path&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;ftp命令&#34;&gt;ftp命令&lt;/h1&gt;&#xA;&lt;h2 id=&#34;ftp-1&#34;&gt;ftp&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ ftp [-46pinegvd] [host [port]]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;python的ftp标准库&#34;&gt;python的FTP标准库&lt;/h1&gt;&#xA;&lt;h2 id=&#34;ftplib&#34;&gt;ftplib&lt;/h2&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Ldap</title>
      <link>https://canuxcheng.com/post/ldap/</link>
      <pubDate>Thu, 28 Jul 2016 16:08:54 +0000</pubDate>
      <guid>https://canuxcheng.com/post/ldap/</guid>
      <description>&lt;h1 id=&#34;ldap&#34;&gt;LDAP&lt;/h1&gt;&#xA;&lt;p&gt;LDAP占用tcp和udp的389端口。&lt;/p&gt;&#xA;&lt;p&gt;使用SSL的LDAP占用tcp和udp的636端口。&lt;/p&gt;&#xA;&lt;p&gt;Lightweight Directory Access Protocol.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.openldap.org/&#34;&gt;http://www.openldap.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;LDAP的windows工具：LDAPSoft LDAP Browser&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Nfs</title>
      <link>https://canuxcheng.com/post/nfs/</link>
      <pubDate>Thu, 28 Jul 2016 16:08:54 +0000</pubDate>
      <guid>https://canuxcheng.com/post/nfs/</guid>
      <description>&lt;h1 id=&#34;nfs&#34;&gt;NFS&lt;/h1&gt;&#xA;&lt;p&gt;NFS: Network File System&lt;/p&gt;&#xA;&lt;p&gt;安装：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 在nfs服务器安装nfs服务&#xA;$ sudo apt-get install nfs-kernel-server&#xA;# 添加共享目录并授权&#xA;$ sudo vim /etc/exports&#xA;/home/user/share *(rw,no_root_squash)&#xA;$ sudo service nfs-kernel-server restart&#xA;&#xA;# 在nfs客户端安装nfs客户端&#xA;$ sudo apt-get install nfs-common&#xA;# 自动挂载&#xA;$ sudo vim /etc/fstab&#xA;nfs-server-ip:/home/user/share /home/user1/share nfs auto 0 0&#xA;$ sudo mount -a&#xA;# 手动挂载&#xA;$ sudo mount -t nfs nfs-server-ip:/home/user/share /home/user1/share&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;nfs-server&#34;&gt;nfs-server&lt;/h1&gt;&#xA;&lt;p&gt;配置/etc/exports&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;/etc/exports  文件格式&#xA;&amp;lt;输出目录&amp;gt; [客户端1 选项（访问权限,用户映射,其他）] [客户端2 选项（访问权限,用户映射,其他）]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;nfs-client&#34;&gt;nfs-client&lt;/h1&gt;&#xA;&lt;p&gt;配置/etc/fstab&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ntp</title>
      <link>https://canuxcheng.com/post/ntp/</link>
      <pubDate>Thu, 28 Jul 2016 16:08:54 +0000</pubDate>
      <guid>https://canuxcheng.com/post/ntp/</guid>
      <description>&lt;h1 id=&#34;ntp&#34;&gt;NTP&lt;/h1&gt;&#xA;&lt;p&gt;NFS: Network Time Protocol&lt;/p&gt;&#xA;&lt;p&gt;UTC: Coordinated Universal Time, 世界统一时间&lt;/p&gt;&#xA;&lt;p&gt;GMT: Greenwich Mean Time, 格林尼治标准时间, = UTC&lt;/p&gt;&#xA;&lt;p&gt;CET: Central European Time, 欧洲中部时间, = UTC+1, 下令时=UTC+2&lt;/p&gt;&#xA;&lt;p&gt;CST: Chinese Standard Time, 中国标准时间, = UTC+8&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;时区管理&#34;&gt;时区管理&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ timedatectl list-timezones # 查看所有时区&#xA;$ sudo timedatectl set-timezone Asia/Shanghai # 设置时区&#xA;$ sudo timedatectl set-timezone Etc/UTC&#xA;$ ls -l /etc/localtime # 应该是一个链接&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;ntp-1&#34;&gt;ntp&lt;/h1&gt;&#xA;&lt;p&gt;安装:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install ntp&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;ntpdate&#34;&gt;ntpdate&lt;/h2&gt;&#xA;&lt;p&gt;从目标服务器同步.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ntpdate -u ip&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;ntpstat&#34;&gt;ntpstat&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install ntpstat&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;chrony&#34;&gt;chrony&lt;/h1&gt;&#xA;&lt;p&gt;ntp的升级版.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ssh</title>
      <link>https://canuxcheng.com/post/ssh/</link>
      <pubDate>Thu, 28 Jul 2016 15:53:34 +0000</pubDate>
      <guid>https://canuxcheng.com/post/ssh/</guid>
      <description>&lt;h1 id=&#34;openssh&#34;&gt;OpenSSH&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.openssh.com/&#34;&gt;http://www.openssh.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;windows上支持ssh协议的客户端：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;putty&lt;/li&gt;&#xA;&lt;li&gt;xshell&lt;/li&gt;&#xA;&lt;li&gt;MobaXterm&lt;/li&gt;&#xA;&lt;li&gt;secureCRT&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;安装：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install openssh-server&#xA;$ sudo apt-get install openssh-client&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;ssh命令&#34;&gt;SSH命令&lt;/h1&gt;&#xA;&lt;p&gt;ssh是openssh协议的客户端．&lt;/p&gt;&#xA;&lt;p&gt;远程操作的命令包括ssh, scp, sftp.&lt;/p&gt;&#xA;&lt;p&gt;ssh&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ ssh&#xA;# 远程执行命令需要用双引号，不能用单引号&#xA;$ ssh username@host &amp;quot;command/script&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;scp&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ scp&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;sftp&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sftp&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;常用选项：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;-C   compression&#xA;# 不需要输入yes来交互, 或者修改/etc/ssh/ssh_config&#xA;-o StrictHostKeyChecking=no&#xA;-o UserKnownHostsFile /dev/null&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;ssh也包括一些密钥管理的命令.&lt;/p&gt;&#xA;&lt;p&gt;ssh-keygen&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -C &#39;canuxcheng@gmail.com&#39;&#xA;&#xA;# 通过将本机的公钥拷贝到远程机器实现无密码访问．&#xA;# 将本机的public-key拷贝到远程机器的authorized_keys.&#xA;$ ssh-copy-id -i ~/.ssh/id_rsa.pub user@remote&#xA;# 另外的拷贝方法&#xA;$ ssh user@host &amp;quot;cat &amp;gt;&amp;gt; ~/.ssh/authorized_keys&amp;quot; &amp;lt; ~/.ssh/id_rsa.pub&#xA;$ sudo service ssh restart # 需要重启ssh服务&#xA;&#xA;非交互式通过命令行传密码的命令：&#xA;$ sshpass -p [password]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;ssh-add&lt;/p&gt;</description>
    </item>
    <item>
      <title>Snmp</title>
      <link>https://canuxcheng.com/post/snmp/</link>
      <pubDate>Tue, 26 Apr 2016 09:56:04 +0000</pubDate>
      <guid>https://canuxcheng.com/post/snmp/</guid>
      <description>&lt;h1 id=&#34;snmp&#34;&gt;SNMP&lt;/h1&gt;&#xA;&lt;p&gt;Simple Network Management Protocol, 简单网络管理协议&lt;/p&gt;&#xA;&lt;p&gt;MIB&lt;/p&gt;&#xA;&lt;p&gt;SMI&lt;/p&gt;&#xA;&lt;p&gt;安装和配置snmp:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$sudo apt-get install snmp snmpd snmp-mibs-downloader&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;snmp命令&#34;&gt;snmp命令&lt;/h1&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Monitoring</title>
      <link>https://canuxcheng.com/post/network_monitoring/</link>
      <pubDate>Sun, 03 Apr 2016 14:46:19 +0000</pubDate>
      <guid>https://canuxcheng.com/post/network_monitoring/</guid>
      <description>&lt;h1 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h1&gt;&#xA;&lt;p&gt;network usage:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;bytes_sent(out)&#xA;bytes_recv(in)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;packets:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;packets_sent(out)&#xA;packets_recv(in)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;error_in/out:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;SELECT non_negative_derivative(mean(&amp;quot;err_in&amp;quot;), 1s) AS &amp;quot;recv&amp;quot;, non_negative_derivative(mean(&amp;quot;err_out&amp;quot;), 1s) AS &amp;quot;send&amp;quot;&#xA;FROM &amp;quot;net&amp;quot;&#xA;WHERE &amp;quot;interface&amp;quot; =~ /^(vlan|eth|ens|bond).*/ AND $timeFilter&#xA;GROUP BY time($__interval), &amp;quot;host&amp;quot;, &amp;quot;interface&amp;quot; fill(none)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;drop_in/out:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;SELECT non_negative_derivative(mean(&amp;quot;drop_in&amp;quot;), 1s) AS &amp;quot;recv&amp;quot;, non_negative_derivative(mean(&amp;quot;drop_out&amp;quot;), 1s) AS &amp;quot;send&amp;quot;&#xA;FROM &amp;quot;net&amp;quot;&#xA;WHERE &amp;quot;interface&amp;quot; =~ /^(vlan|eth|ens|bond).*/ AND $timeFilter&#xA;GROUP BY time($__interval), &amp;quot;host&amp;quot;, &amp;quot;interface&amp;quot; fill(none)&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Network</title>
      <link>https://canuxcheng.com/post/network/</link>
      <pubDate>Sun, 03 Apr 2016 14:46:19 +0000</pubDate>
      <guid>https://canuxcheng.com/post/network/</guid>
      <description>&lt;h1 id=&#34;网络基础&#34;&gt;网络基础&lt;/h1&gt;&#xA;&lt;p&gt;小端： 低字节在起始地址，高字节在高地址&lt;/p&gt;&#xA;&lt;p&gt;大端： 高字节在起始地址，低字节在高地址&lt;/p&gt;&#xA;&lt;p&gt;linux一般是小端，unix一般是大端&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.rfc-editor.org/&#34;&gt;https://www.rfc-editor.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;网络模型&#34;&gt;网络模型&lt;/h2&gt;&#xA;&lt;p&gt;OSI七层模型:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;应用层&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;表示层&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;会话层&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;传输层&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;网络层&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;链路层&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;物理层&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;TCP/IP四层模型：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;应用层&lt;/li&gt;&#xA;&lt;li&gt;传输层&lt;/li&gt;&#xA;&lt;li&gt;网络层&lt;/li&gt;&#xA;&lt;li&gt;链路层&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;应用层&#34;&gt;应用层&lt;/h3&gt;&#xA;&lt;p&gt;0-1024是系统保留端口, 1024-65535是可用自定义端口&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml&#34;&gt;https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;8443:  tcp/udp - https port&#xA;9443: tcp/udp tungsten-https&#xA;4443: tcp/udp pharos&lt;/p&gt;&#xA;&lt;p&gt;基于TCP的应用层&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;FTP: 21,&#xA;SSH: 22,&#xA;Telnet: 23,&#xA;SMTP: 25,&#xA;DNS: 53,&#xA;HTTP: 80,&#xA;HTTPS: 443,&#xA;POP3: 110,&#xA;POP3 SSL: 995&#xA;IMAP: 143,&#xA;IMAP SSL: 993,&#xA;NNTP: 119,&#xA;NNTP SSL: 563,&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;基于UDP的应用层&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;SMTP: 25,&#xA;DNS: 53,&#xA;DHCP: 67,&#xA;TFTP：69,简单文件传输协议。&#xA;NTP/SNTP: 123,&#xA;SNMP：161,简单网络管理协议。&#xA;SNMPtrap: 162,&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;查看端口&lt;/p&gt;</description>
    </item>
    <item>
      <title>Samba</title>
      <link>https://canuxcheng.com/post/samba/</link>
      <pubDate>Sun, 03 Apr 2016 14:46:19 +0000</pubDate>
      <guid>https://canuxcheng.com/post/samba/</guid>
      <description>&lt;h1 id=&#34;smbcifs&#34;&gt;SMB/CIFS&lt;/h1&gt;&#xA;&lt;p&gt;SMB/CIFS占用TCP和UDP的139和445端口。&lt;/p&gt;&#xA;&lt;p&gt;SMB: server message block.&lt;/p&gt;&#xA;&lt;p&gt;CIFS: common internet file system, 是SMB的升级版本。&lt;/p&gt;&#xA;&lt;h1 id=&#34;samba&#34;&gt;Samba&lt;/h1&gt;&#xA;&lt;p&gt;Samba: Linux/Unix上的SBM/CIFS,用于跨平台的共享。&lt;/p&gt;&#xA;&lt;p&gt;安装:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get insall samba&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;配置：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ vim /etc/samba/smb.conf&#xA;[shared]&#xA;comment = share this folder&#xA;path = /home/canux/Share&#xA;public = yes&#xA;guest ok = yes&#xA;browsable = yes&#xA;writable = no&#xA;read only = yes&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;重启：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo service smbd restart&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;windows访问：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;\\ip\folder&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;linux访问：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;connect to server -&amp;gt; smb://ip/folder&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
  </channel>
</rss>
