<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DevOps on Morgoth</title>
    <link>https://canuxcheng.com/categories/devops/</link>
    <description>Recent content in DevOps on Morgoth</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Jan 2025 09:41:39 +0000</lastBuildDate>
    <atom:link href="https://canuxcheng.com/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DevOps Metrics</title>
      <link>https://canuxcheng.com/post/devops_metrics/</link>
      <pubDate>Fri, 10 Jan 2025 09:41:39 +0000</pubDate>
      <guid>https://canuxcheng.com/post/devops_metrics/</guid>
      <description>&lt;h1 id=&#34;devops-metrics&#34;&gt;DevOps Metrics&lt;/h1&gt;&#xA;&lt;p&gt;从业务角度来看，公司希望更准确地度量其开发人员的生产力，原因如下:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Monitoring progress over time&lt;/li&gt;&#xA;&lt;li&gt;Creation of benchmarks&lt;/li&gt;&#xA;&lt;li&gt;Rewarding top performers&lt;/li&gt;&#xA;&lt;li&gt;Determining resource allocation&lt;/li&gt;&#xA;&lt;li&gt;Identification of more productive development processes&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;框架是想法、概念和关系的简单总结，因此基于您的上下文、环境和团队，您可以选择一组您可以解释的指标，以确定团队是否在它应该在的地方。&lt;/p&gt;&#xA;&lt;h2 id=&#34;dora&#34;&gt;DORA&lt;/h2&gt;&#xA;&lt;p&gt;DevOps Research and Assessment.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://getdx.com/&#34;&gt;https://getdx.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;speed-metrics&#34;&gt;Speed metrics&lt;/h3&gt;&#xA;&lt;p&gt;Deployment frequency: This measures how often a team deploys code to production.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Low performance: once per month - once per semester. (inadequate integration, lack of automation.)&lt;/li&gt;&#xA;&lt;li&gt;Medium performance: once per month - once per week.&lt;/li&gt;&#xA;&lt;li&gt;High performance: daily for multiple times per day.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Lead time for change: This measures the time it takes from the moment a code change is made until it is successfully deployed to production.&lt;/p&gt;</description>
    </item>
    <item>
      <title>AWS Management</title>
      <link>https://canuxcheng.com/post/aws_management/</link>
      <pubDate>Thu, 23 Sep 2021 22:02:31 +0000</pubDate>
      <guid>https://canuxcheng.com/post/aws_management/</guid>
      <description>&lt;h1 id=&#34;aws-monitor&#34;&gt;AWS Monitor&lt;/h1&gt;&#xA;&lt;h2 id=&#34;cli&#34;&gt;CLI&lt;/h2&gt;&#xA;&lt;h2 id=&#34;management-console&#34;&gt;Management Console&lt;/h2&gt;&#xA;&lt;h2 id=&#34;quotas&#34;&gt;Quotas&lt;/h2&gt;&#xA;&lt;h2 id=&#34;service-catalog&#34;&gt;Service Catalog&lt;/h2&gt;&#xA;&lt;h2 id=&#34;cloudwatch&#34;&gt;CloudWatch&lt;/h2&gt;&#xA;&lt;p&gt;监控和管理服务，收集logs, metrics 和 events，支持基于metrics的alert。&lt;/p&gt;&#xA;&lt;p&gt;MTTR&#xA;TCO&lt;/p&gt;&#xA;&lt;h2 id=&#34;cloudwatch-logs&#34;&gt;CloudWatch Logs&lt;/h2&gt;&#xA;&lt;h2 id=&#34;cloudtrail&#34;&gt;CloudTrail&lt;/h2&gt;&#xA;&lt;p&gt;可以用来记录，持续监控和保留与AWS基础设施中的操作相关的账户活动。&lt;/p&gt;&#xA;&lt;p&gt;将审计记录插入S3或者cloudwatch log， 记录突发事件。&lt;/p&gt;&#xA;&lt;h2 id=&#34;aws-config&#34;&gt;AWS Config&lt;/h2&gt;&#xA;&lt;p&gt;提供基础设施的历史配置。基于规则持续评估基础设施。&lt;/p&gt;&#xA;&lt;h2 id=&#34;aws-trusted-advisor&#34;&gt;AWS Trusted Advisor&lt;/h2&gt;&#xA;&lt;p&gt;优化性能和安全性&lt;/p&gt;&#xA;&lt;h2 id=&#34;amazon-grafana&#34;&gt;Amazon Grafana&lt;/h2&gt;&#xA;&lt;h2 id=&#34;amazon-prometheus&#34;&gt;Amazon Prometheus&lt;/h2&gt;&#xA;&lt;h2 id=&#34;cloudformation&#34;&gt;CloudFormation&lt;/h2&gt;&#xA;&lt;p&gt;提供基于模板(yaml/json)的基础设施服务(IaaS).&lt;/p&gt;&#xA;&lt;h2 id=&#34;compute-optimizer&#34;&gt;Compute Optimizer&lt;/h2&gt;&#xA;&lt;h2 id=&#34;control-tower&#34;&gt;Control Tower&lt;/h2&gt;&#xA;&lt;h2 id=&#34;health-dashboard&#34;&gt;Health Dashboard&lt;/h2&gt;&#xA;&lt;h2 id=&#34;aws-systems-manager&#34;&gt;AWS Systems Manager&lt;/h2&gt;&#xA;&lt;p&gt;提供运维数据，并且在跨基础设施中进行自动化操作。&lt;/p&gt;&#xA;&lt;h2 id=&#34;aws-organizations&#34;&gt;AWS Organizations&lt;/h2&gt;&#xA;&lt;p&gt;账号集中管理。&lt;/p&gt;&#xA;&lt;h2 id=&#34;aws-license-manager&#34;&gt;AWS License Manager&lt;/h2&gt;&#xA;&lt;h2 id=&#34;proton&#34;&gt;Proton&lt;/h2&gt;&#xA;&lt;h2 id=&#34;aws-well-architected-tool&#34;&gt;AWS Well-Architected Tool&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;financial-management&#34;&gt;Financial Management&lt;/h1&gt;&#xA;&lt;h2 id=&#34;budgets&#34;&gt;Budgets&lt;/h2&gt;&#xA;&lt;h2 id=&#34;cost-explorer&#34;&gt;Cost Explorer&lt;/h2&gt;&#xA;&lt;h2 id=&#34;savings-plans&#34;&gt;Savings Plans&lt;/h2&gt;</description>
    </item>
    <item>
      <title>ELK</title>
      <link>https://canuxcheng.com/post/logging_elk/</link>
      <pubDate>Fri, 08 Jun 2018 09:46:47 +0000</pubDate>
      <guid>https://canuxcheng.com/post/logging_elk/</guid>
      <description>&lt;h1 id=&#34;elk&#34;&gt;ELK&lt;/h1&gt;&#xA;&lt;p&gt;kibana: 数据可视化&lt;/p&gt;&#xA;&lt;p&gt;elasticsearch: 搜索，分析，存储数据&lt;/p&gt;&#xA;&lt;p&gt;x-pack: 具有监控和报警功能的工具包.&lt;/p&gt;&#xA;&lt;p&gt;logstash: 动态数据收集管道，支持可扩展的插件．&lt;/p&gt;&#xA;&lt;p&gt;beats(agent): 轻量型数据采集平台，从边缘机器向logstash/elasticsearch发送数据．&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Grok</title>
      <link>https://canuxcheng.com/post/logging_grok/</link>
      <pubDate>Fri, 08 Jun 2018 09:46:47 +0000</pubDate>
      <guid>https://canuxcheng.com/post/logging_grok/</guid>
      <description>&lt;h1 id=&#34;grok&#34;&gt;grok&lt;/h1&gt;&#xA;&lt;p&gt;logstash和telegraf都是用grok来解析log&lt;/p&gt;&#xA;&lt;p&gt;在线检测&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://grokdebug.herokuapp.com/&#34;&gt;http://grokdebug.herokuapp.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;grok的正则表达式&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kkos/oniguruma/blob/master/doc/RE&#34;&gt;https://github.com/kkos/oniguruma/blob/master/doc/RE&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;可用的pattern(logstash &amp;amp; telegraf-logparser/tail)&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/grok-patterns&#34;&gt;https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/grok-patterns&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/influxdata/telegraf/blob/master/plugins/inputs/logparser/grok/patterns/influx-patterns&#34;&gt;https://github.com/influxdata/telegraf/blob/master/plugins/inputs/logparser/grok/patterns/influx-patterns&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;elastic-stack&#34;&gt;Elastic stack&lt;/h1&gt;&#xA;&lt;p&gt;beats/filebeats: 通过filebeats agent获取log．&lt;/p&gt;&#xA;&lt;p&gt;logstash: 使用filebeats解析log并写入stash(elasticsearch).&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;tick-stack&#34;&gt;TICK stack&lt;/h1&gt;&#xA;&lt;p&gt;telegraf(agent): 通过logparser/tail插件解析log并写入influxdb.&lt;/p&gt;&#xA;&lt;p&gt;pattern:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 通过已经定义的变量来定义filter&#xA;patterns = [&#39;&#39;&#39;${&amp;lt;capture_syntax&amp;gt;[:&amp;lt;semantic_name&amp;gt;][:&amp;lt;modifier&amp;gt;]}&#39;&#39;&#39;]&#xA;patterns = [&#39;&#39;&#39;%{TIMESTAMP_ISO8601:asctime:string} \[%{DATA:name:string}\] %{LOGLEVEL:levelname:string}: %{GREEDYDATA:message:string}&#39;&#39;&#39;]&#xA;&#xA;capture_syntax是已经定义好的pattern.&#xA;semantic_name是field/tag的名字, 默认都是string类型的field&#xA;modifier 是string/int/float/tag/drop/ts-&amp;quot;CUSTOM&amp;quot;/...类型&#xA;&#xA;timestamp有特殊的modifier:&#xA;timestamp 有特殊的modifier：&#xA;Timestamp modifiers:ts (This will auto-learn the timestamp format)&#xA;ts-ansic (&amp;quot;Mon Jan _2 15:04:05 2006&amp;quot;)&#xA;ts-unix (&amp;quot;Mon Jan _2 15:04:05 MST 2006&amp;quot;)&#xA;ts-ruby (&amp;quot;Mon Jan 02 15:04:05 -0700 2006&amp;quot;)&#xA;ts-rfc822 (&amp;quot;02 Jan 06 15:04 MST&amp;quot;)&#xA;ts-rfc822z (&amp;quot;02 Jan 06 15:04 -0700&amp;quot;)&#xA;ts-rfc850 (&amp;quot;Monday, 02-Jan-06 15:04:05 MST&amp;quot;)&#xA;ts-rfc1123 (&amp;quot;Mon, 02 Jan 2006 15:04:05 MST&amp;quot;)&#xA;ts-rfc1123z (&amp;quot;Mon, 02 Jan 2006 15:04:05 -0700&amp;quot;)&#xA;ts-rfc3339 (&amp;quot;2006-01-02T15:04:05Z07:00&amp;quot;)&#xA;ts-rfc3339nano (&amp;quot;2006-01-02T15:04:05.999999999Z07:00&amp;quot;)&#xA;ts-httpd (&amp;quot;02/Jan/2006:15:04:05 -0700&amp;quot;)&#xA;ts-epoch (seconds since unix epoch, may contain decimal)&#xA;ts-epochnano (nanoseconds since unix epoch)&#xA;ts-syslog (&amp;quot;Jan 02 15:04:05&amp;quot;, parsed time is set to the current year)&#xA;ts-&amp;quot;CUSTOM&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;custom_patterns:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logging</title>
      <link>https://canuxcheng.com/post/logging/</link>
      <pubDate>Fri, 08 Jun 2018 09:46:47 +0000</pubDate>
      <guid>https://canuxcheng.com/post/logging/</guid>
      <description>&lt;h1 id=&#34;logging&#34;&gt;Logging&lt;/h1&gt;&#xA;&lt;p&gt;日志采集，存储，可视化.&lt;/p&gt;&#xA;&lt;p&gt;主要有Elastic stack, splunk, loki.&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Loki</title>
      <link>https://canuxcheng.com/post/logging_loki/</link>
      <pubDate>Fri, 08 Jun 2018 09:46:47 +0000</pubDate>
      <guid>https://canuxcheng.com/post/logging_loki/</guid>
      <description>&lt;h1 id=&#34;elk&#34;&gt;ELK&lt;/h1&gt;&#xA;&lt;p&gt;kibana: 数据可视化&lt;/p&gt;&#xA;&lt;p&gt;elasticsearch: 搜索，分析，存储数据&lt;/p&gt;&#xA;&lt;p&gt;x-pack: 具有监控和报警功能的工具包.&lt;/p&gt;&#xA;&lt;p&gt;logstash: 动态数据收集管道，支持可扩展的插件．&lt;/p&gt;&#xA;&lt;p&gt;beats(agent): 轻量型数据采集平台，从边缘机器向logstash/elasticsearch发送数据．&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>AlertManager</title>
      <link>https://canuxcheng.com/post/metrics_alertmanager/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics_alertmanager/</guid>
      <description>&lt;h1 id=&#34;alert-manager&#34;&gt;alert-manager&lt;/h1&gt;&#xA;&lt;p&gt;在Prometheus中支持基于PromQL创建告警规则, prometheus通过push触发alertmanager.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/alertmanager&#34;&gt;https://github.com/prometheus/alertmanager&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Exporter</title>
      <link>https://canuxcheng.com/post/metrics_exporter/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics_exporter/</guid>
      <description>&lt;h1 id=&#34;exporter&#34;&gt;exporter&lt;/h1&gt;&#xA;&lt;p&gt;广义上讲所有可以向Prometheus提供监控样本数据的程序都可以被称为一个Exporter。而Exporter的一个实例称为target，如下所示，Prometheus通过轮询的方式定期从这些target中获取样本数据:&lt;/p&gt;&#xA;&lt;p&gt;prometheus通过pull从exporter拉取数据.&lt;/p&gt;&#xA;&lt;p&gt;直接采集:cAdvisor, kubernetes, etcd, gokit等直接内置了用于向prometheus暴露监控数据的端点.&lt;/p&gt;&#xA;&lt;p&gt;间接采集: 通过promethesu的client api编写exporter，例如mysql-exporter, consul-exporter.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;host&#34;&gt;host&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/node_exporter&#34;&gt;https://github.com/prometheus/node_exporter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;k8s&#34;&gt;k8s&lt;/h1&gt;&#xA;&lt;p&gt;k8s metrics api包括 resource metrics api 和 customer metrics api.&lt;/p&gt;&#xA;&lt;p&gt;cadvisor, metrics-server, kube-state-metrics 等实现了 核心api.&lt;/p&gt;&#xA;&lt;p&gt;一些adapter实现了自定义api.&lt;/p&gt;&#xA;&lt;p&gt;k8s-prometheus-adapter实现了metrics-server的核心api，同时实现了自定义api.&lt;/p&gt;&#xA;&lt;h2 id=&#34;metrics-server&#34;&gt;metrics-server &lt;/h2&gt;&#xA;&lt;p&gt;提供了整个集群的资源监控数据&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/metrics-server&#34;&gt;https://github.com/kubernetes-sigs/metrics-server&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;cadvisor&#34;&gt;cAdvisor&lt;/h2&gt;&#xA;&lt;p&gt;负责单节点内部的容器和节点资源使用统计，会自动收集本机容器 CPU、内存、网络和文件系统的资源占用情况&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/google/cadvisor&#34;&gt;https://github.com/google/cadvisor&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;kube-state-metrics&#34;&gt;kube-state-metrics &lt;/h2&gt;&#xA;&lt;p&gt;提供了 Kubernetes 资源对象（如 DaemonSet、Deployments 等）的度量。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kube-state-metrics&#34;&gt;https://github.com/kubernetes/kube-state-metrics&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;adapter&#34;&gt;adapter&lt;/h2&gt;&#xA;&lt;p&gt;同时支持核心api和自定义api.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/DirectXMan12/k8s-prometheus-adapter&#34;&gt;https://github.com/DirectXMan12/k8s-prometheus-adapter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;blackbox&#34;&gt;blackbox&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/blackbox_exporter&#34;&gt;https://github.com/prometheus/blackbox_exporter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;wmi&#34;&gt;wmi&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/martinlindhe/wmi_exporter&#34;&gt;https://github.com/martinlindhe/wmi_exporter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;snmp&#34;&gt;snmp&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/snmp_exporter&#34;&gt;https://github.com/prometheus/snmp_exporter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;mysql&#34;&gt;mysql&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/mysqld_exporter&#34;&gt;https://github.com/prometheus/mysqld_exporter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;rabbitmq&#34;&gt;rabbitmq&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/deadtrickster/prometheus_rabbitmq_exporter&#34;&gt;https://github.com/deadtrickster/prometheus_rabbitmq_exporter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;mongo&#34;&gt;mongo&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/percona/mongodb_exporter&#34;&gt;https://github.com/percona/mongodb_exporter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;redis&#34;&gt;redis&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/oliver006/redis_exporter&#34;&gt;https://github.com/oliver006/redis_exporter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;haproxy&#34;&gt;haproxy&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/haproxy_exporter&#34;&gt;https://github.com/prometheus/haproxy_exporter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;consul&#34;&gt;consul&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/consul_exporter&#34;&gt;https://github.com/prometheus/consul_exporter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;pushgateway&#34;&gt;pushgateway&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/prometheus/pushgateway&#34;&gt;https://github.com/prometheus/pushgateway&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Influxdb</title>
      <link>https://canuxcheng.com/post/metrics_influxdb/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics_influxdb/</guid>
      <description>&lt;h1 id=&#34;influxdb&#34;&gt;Influxdb&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/influxdata/influxdb&#34;&gt;https://github.com/influxdata/influxdb&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Scalable datastore for metrics, events, and real-time analytics.&lt;/p&gt;&#xA;&lt;p&gt;支持从opentsdb, graphite, collectd等获取数据&lt;/p&gt;&#xA;&lt;p&gt;默认数据库_internal 用于存储内部运行数据&lt;/p&gt;&#xA;&lt;p&gt;安装配置参考官方文档&lt;/p&gt;&#xA;&lt;p&gt;log&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo journalctl -u influxdb.service&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;config:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 开通kapacitor的subscription功能&#xA;[[subscriber]]&#xA;enable = true&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;数据结构&#34;&gt;数据结构&lt;/h1&gt;&#xA;&lt;p&gt;influxdb每条记录是一个point.&lt;/p&gt;&#xA;&lt;p&gt;points包括下面部分：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;measurement: a measurement, like cpu_load, 相当于表名&#xA;tags: zero or more tag, key=value, eg: host=ip&#xA;fields: zero or more field, key=value, eg: value=0.18&#xA;time: a timestamp&#xA;&#xA;&amp;lt;measurement&amp;gt;[,&amp;lt;tag-key&amp;gt;=&amp;lt;tag-value&amp;gt;...] &amp;lt;field-key&amp;gt;=&amp;lt;field-value&amp;gt;[,&amp;lt;field2-key&amp;gt;=&amp;lt;field2-value&amp;gt;...] [unix-nano-timestamp]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;series: 在一个database中,相同的retention policy, measurement, tag set的数据集，叫一个序列．&lt;/p&gt;&#xA;&lt;p&gt;RP: retention policy, autogen是默认的存储策略, 用于设置数据保留时间.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kapacitor</title>
      <link>https://canuxcheng.com/post/metrics_kapacitor/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics_kapacitor/</guid>
      <description>&lt;h1 id=&#34;kapacitor&#34;&gt;Kapacitor&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/influxdata/Kapacitor&#34;&gt;https://github.com/influxdata/Kapacitor&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Open source framework for processing, monitoring, and alerting on time series data&lt;/p&gt;&#xA;&lt;p&gt;可以通过chrongraf创建tickscript/task, 然后通过api/cli导入到kapacitor.&lt;/p&gt;&#xA;&lt;p&gt;配置:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;hostname = &amp;quot;kapcitor-service&amp;quot;&#xA;&#xA;# 如果从influxdb读取数据需要配置该选项．&#xA;[[influxdb]]&#xA;enabled = true&#xA;&#xA;# 如果从该路径加载tickscript&#xA;[[load]]&#xA;enabled = true&#xA;dir=&amp;quot;/etc/kapacitor/load&amp;quot;&#xA;# tasks, 放到/etc/kapacitor/load/tasks/*.tick,重启kapacitor会自动加载task,并默认enable.&#xA;## 要求，ID和tick文件同名，tickscript开头需要指定dbrp, tickscript里面需要指定batch/stream.&#xA;# templates...&#xA;# handlers...&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;cli&#34;&gt;CLI&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ kapacitor help&#xA;&#xA;# 创建template(也就是变量可以单独赋值的tickscript)&#xA;$ kapacitor define-template &amp;lt;name&amp;gt; -tick /path/template.tick&#xA;$ kapacitor show-template &amp;lt;name&amp;gt;&#xA;&#xA;# 创建/更新 task, 创建的默认是disable状态.&#xA;# 从tickscript创建task&#xA;$ kapacitor define &amp;lt;name&amp;gt; -tick task.tick -type [stream|batch] -dbrp [database.retentionPolicy]&#xA;# 从template创建task(如果yaml/json中没有指定template需要用-template指定)&#xA;$ kapacitor define &amp;lt;name&amp;gt; -file task.yaml&#xA;$ kapacitor define &amp;lt;name&amp;gt; -file task.json&#xA;&#xA;# 删除task&#xA;$ kapacitor delete [task id/name]&#xA;&#xA;$ kapacitor list tasks/templates&#xA;$ kapacitor reload [task id/name] # 相当于disable &amp;amp; enable.&#xA;$ kapacitor enable [task id/name]&#xA;$ kapaciror disable [task id/name]&#xA;$ kapacitor show [id/name]&#xA;$ kapacitor watch [task id/name]&#xA;&#xA;$ kapacitor list topics&#xA;$ kapacitor delete topics [topic id]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;http-api&#34;&gt;Http API&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;port = 9092&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;configuration&#34;&gt;configuration&lt;/h2&gt;&#xA;&lt;p&gt;获取所有可以overwrite的参数&lt;/p&gt;</description>
    </item>
    <item>
      <title>Prometheus</title>
      <link>https://canuxcheng.com/post/metrics_prometheus/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics_prometheus/</guid>
      <description>&lt;h1 id=&#34;prometheus&#34;&gt;Prometheus&lt;/h1&gt;&#xA;&lt;p&gt;Prometheus Server是Prometheus组件中的核心部分，负责实现对监控数据的获取，存储以及查询&lt;/p&gt;&#xA;&lt;p&gt;swarm部署:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vegasbrianc/prometheus&#34;&gt;https://github.com/vegasbrianc/prometheus&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;k8s部署:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coreos/kube-prometheus&#34;&gt;https://github.com/coreos/kube-prometheus&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coreos/prometheus-operator&#34;&gt;https://github.com/coreos/prometheus-operator&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/helm/charts/tree/master/stable/prometheus-operator&#34;&gt;https://github.com/helm/charts/tree/master/stable/prometheus-operator&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;高可用:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/thanos-io/thanos&#34;&gt;https://github.com/thanos-io/thanos&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;prometheus grafana dashboard:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-monitoring/kubernetes-mixin&#34;&gt;https://github.com/kubernetes-monitoring/kubernetes-mixin&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grafana/kubernetes-app&#34;&gt;https://github.com/grafana/kubernetes-app&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;promql&#34;&gt;PromQL&lt;/h1&gt;&#xA;&lt;p&gt;metrics类型:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;counter计数器&lt;/li&gt;&#xA;&lt;li&gt;gauge仪表盘&lt;/li&gt;&#xA;&lt;li&gt;histogram直方图&lt;/li&gt;&#xA;&lt;li&gt;summary摘要&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Telegraf</title>
      <link>https://canuxcheng.com/post/metrics_telegraf/</link>
      <pubDate>Thu, 18 Jan 2018 19:23:25 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics_telegraf/</guid>
      <description>&lt;h1 id=&#34;telegraf&#34;&gt;Telegraf&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/influxdata/telegraf&#34;&gt;https://github.com/influxdata/telegraf&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;The plugin-driven server agent for collecting &amp;amp; reporting metrics.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;configuartion&#34;&gt;Configuartion&lt;/h1&gt;&#xA;&lt;p&gt;agent configuration:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;interval    所有inputs的默认运行间隔&#xA;round_interval&#xA;collection_jitter&#xA;precision    ns/us/ms/s&#xA;flush_interval&#xA;flush_jitter&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;input configuration:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;interval&#xA;name_override # 默认measurements是插件名,修改默认measurements.&#xA;name_prefix&#xA;name_suffix&#xA;tags&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;go-api&#34;&gt;Go API&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://godoc.org/github.com/influxdata/telegraf#Input&#34;&gt;https://godoc.org/github.com/influxdata/telegraf#Input&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;测试插件：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 需要配置文件&#xA;$ telegraf --input-filter &amp;lt;plugin-name&amp;gt; --test&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;build&#34;&gt;Build&lt;/h1&gt;&#xA;&lt;p&gt;安装依赖：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install ruby-dev&#xA;sudo gem install fpm&#xA;sudo apt-get install rpm&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;编译telegraf:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;make telegraf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;生成配置文件：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;./telegraf config &amp;gt; ./etc/telegraf.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;构建deb:&lt;/p&gt;</description>
    </item>
    <item>
      <title>IDE</title>
      <link>https://canuxcheng.com/post/devops_ide/</link>
      <pubDate>Sun, 02 Apr 2017 21:11:26 +0000</pubDate>
      <guid>https://canuxcheng.com/post/devops_ide/</guid>
      <description>&lt;h1 id=&#34;jetbrains&#34;&gt;JetBrains&lt;/h1&gt;&#xA;&lt;p&gt;IntelliJ: Java的IDE, 安装Python的插件也支持python.&lt;/p&gt;&#xA;&lt;h2 id=&#34;pycharm&#34;&gt;PyCharm&lt;/h2&gt;&#xA;&lt;p&gt;PyCharm: Python的IDE.&lt;/p&gt;&#xA;&lt;h2 id=&#34;goland&#34;&gt;Goland&lt;/h2&gt;&#xA;&lt;p&gt;Goland: golang的IDE.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;vscode&#34;&gt;VSCode&lt;/h1&gt;&#xA;&lt;h2 id=&#34;intellisense--code-navigation&#34;&gt;IntelliSense &amp;amp; Code Navigation&lt;/h2&gt;&#xA;&lt;p&gt;Go to Definition: F12, 跳转到定义.&lt;/p&gt;&#xA;&lt;p&gt;Peek Definition: Alt + F12， 速览定义，不跳转.&lt;/p&gt;&#xA;&lt;p&gt;Go to references: Shift + F12, 转到引用.&lt;/p&gt;&#xA;&lt;h2 id=&#34;frontend&#34;&gt;frontend&lt;/h2&gt;&#xA;&lt;h3 id=&#34;vs-js-debug&#34;&gt;vs-js-debug&lt;/h3&gt;&#xA;&lt;p&gt;vscode内置了js/ts/node的debugger.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-js-debug&#34;&gt;https://github.com/microsoft/vscode-js-debug&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;live-server&#34;&gt;live server&lt;/h3&gt;&#xA;&lt;p&gt;live preview(html, svg&amp;hellip;)&lt;/p&gt;&#xA;&lt;p&gt;如果用remote-ssh开启live server就是在远程机器上开启5500端口，webroot就是vscode打开的目录.&lt;/p&gt;&#xA;&lt;p&gt;如果是remote-ssh开发html，用这个preview很方便.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ritwickdey/vscode-live-server&#34;&gt;https://github.com/ritwickdey/vscode-live-server&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;vscode-chrome-debug&#34;&gt;vscode-chrome-debug&lt;/h3&gt;&#xA;&lt;p&gt;打开的是安装vscode的机器上的chrome。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/microsoft/vscode-chrome-debug&#34;&gt;https://github.com/microsoft/vscode-chrome-debug&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;通过live server监听remote-ssh机器上的5500，可以通过chrome远程调试静态站点。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;{&#xA;    &amp;quot;version&amp;quot;: &amp;quot;0.2.0&amp;quot;,&#xA;    &amp;quot;configurations&amp;quot;: [&#xA;        {&#xA;            &amp;quot;name&amp;quot;: &amp;quot;angularjs&amp;quot;,&#xA;            &amp;quot;type&amp;quot;: &amp;quot;chrome&amp;quot;,&#xA;            &amp;quot;request&amp;quot;: &amp;quot;launch&amp;quot;,&#xA;            &amp;quot;url&amp;quot;: &amp;quot;http://remote-ssh-server:5500/path/to/index.html&amp;quot;,&#xA;            &amp;quot;webRoot&amp;quot;: &amp;quot;${workspaceFolder}/path/to/&amp;quot;,&#xA;        },&#xA;    ]&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;python&#34;&gt;python&lt;/h2&gt;&#xA;&lt;p&gt;debuging:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Testing</title>
      <link>https://canuxcheng.com/post/testing/</link>
      <pubDate>Wed, 01 Mar 2017 09:41:39 +0000</pubDate>
      <guid>https://canuxcheng.com/post/testing/</guid>
      <description>&lt;h1 id=&#34;qa&#34;&gt;QA&lt;/h1&gt;&#xA;&lt;p&gt;Quality Assurance&lt;/p&gt;&#xA;&lt;p&gt;QA主要就是进行软件测试相关的工作.&lt;/p&gt;&#xA;&lt;p&gt;软件测试就是使用人工或自动的手段来运行或测量软件系统的过程，以检验软件系统是否满足规定的要求，并找出与预期结果之间的差异．&lt;/p&gt;&#xA;&lt;p&gt;软件测试五个要素：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;质量&lt;/li&gt;&#xA;&lt;li&gt;人员&lt;/li&gt;&#xA;&lt;li&gt;技术&lt;/li&gt;&#xA;&lt;li&gt;流程&lt;/li&gt;&#xA;&lt;li&gt;资源&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;软件测试两个目标：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;测试覆盖率&lt;/li&gt;&#xA;&lt;li&gt;测试效率&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;软件测试阶段：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;单元测试(Unit Testing)&lt;/li&gt;&#xA;&lt;li&gt;集成测试(Integration Testing)&lt;/li&gt;&#xA;&lt;li&gt;系统测试(System Testing)&lt;/li&gt;&#xA;&lt;li&gt;验收测试(Acceptance Testing)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;软件测试的手段：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;手动测试/自动化测试&lt;/li&gt;&#xA;&lt;li&gt;静态测试/动态测试&lt;/li&gt;&#xA;&lt;li&gt;黑盒测试/白盒测试&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;软件测试的类型：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;性能测试&lt;/li&gt;&#xA;&lt;li&gt;稳定性测试&lt;/li&gt;&#xA;&lt;li&gt;安全测试&lt;/li&gt;&#xA;&lt;li&gt;可用性测试&lt;/li&gt;&#xA;&lt;li&gt;兼容性测试&lt;/li&gt;&#xA;&lt;li&gt;文档测试&lt;/li&gt;&#xA;&lt;li&gt;本地化测试&lt;/li&gt;&#xA;&lt;li&gt;冒烟测试&lt;/li&gt;&#xA;&lt;li&gt;功能测试Functional Testing&lt;/li&gt;&#xA;&lt;li&gt;回归测试Regression Testing&lt;/li&gt;&#xA;&lt;li&gt;用户界面测试UI Testing&lt;/li&gt;&#xA;&lt;li&gt;端到端测试End-To-End Testing&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;软件测试的模型：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;传统的瀑布模型&lt;/li&gt;&#xA;&lt;li&gt;V模型&lt;/li&gt;&#xA;&lt;li&gt;W模型&lt;/li&gt;&#xA;&lt;li&gt;X模型&lt;/li&gt;&#xA;&lt;li&gt;H模型&lt;/li&gt;&#xA;&lt;li&gt;敏捷测试模型(金字塔模式)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;软件测试的模式：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;金字塔模式Ideal Test Automation Pyramid&lt;/li&gt;&#xA;&lt;li&gt;蛋筒冰激凌模式Ice Cream Cone&lt;/li&gt;&#xA;&lt;li&gt;双金字塔模式Dual Test Pyramid&lt;/li&gt;&#xA;&lt;li&gt;纸杯蛋糕模式Cupcake&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;test-automation-pyramid&#34;&gt;Test Automation Pyramid&lt;/h1&gt;&#xA;&lt;p&gt;Mike Cohn的测试金字塔&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://martinfowler.com/bliki/TestPyramid.html&#34;&gt;https://martinfowler.com/bliki/TestPyramid.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Automated GUI Tests(10%)&lt;/li&gt;&#xA;&lt;li&gt;Automated Service Tests(Component/Integration/API)(20%)&lt;/li&gt;&#xA;&lt;li&gt;Automated Unit Tests(70%)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;unit-test单元测试&#34;&gt;Unit Test/单元测试&lt;/h1&gt;&#xA;&lt;p&gt;单元测试是开发者编写的测试一个单元（函数／类）的功能是否符合预期．&lt;/p&gt;</description>
    </item>
    <item>
      <title>RobotFramework</title>
      <link>https://canuxcheng.com/post/testing_robotframework/</link>
      <pubDate>Sat, 25 Feb 2017 09:41:39 +0000</pubDate>
      <guid>https://canuxcheng.com/post/testing_robotframework/</guid>
      <description>&lt;h1 id=&#34;robot-framework&#34;&gt;Robot Framework&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/robotframework/robotframework&#34;&gt;https://github.com/robotframework/robotframework&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/robotframework/QuickStartGuide&#34;&gt;https://github.com/robotframework/QuickStartGuide&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;支持python和java的API.&lt;/p&gt;&#xA;&lt;p&gt;Robot Framework is a generic test automation framework for acceptance testing and acceptance test-driven development (ATDD).&lt;/p&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ pip install robotframework&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Modular:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Test Data&lt;/li&gt;&#xA;&lt;li&gt;Robot Framework(test data syntax)&lt;/li&gt;&#xA;&lt;li&gt;Test Libraries(test library API) + Test Tools&lt;/li&gt;&#xA;&lt;li&gt;System under Test(system interface)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Use:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ robot --version&#xA;$ robot [options] data_sources&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;会生成三个文件：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;output.xml&lt;/li&gt;&#xA;&lt;li&gt;log.html&lt;/li&gt;&#xA;&lt;li&gt;report.html&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;setting-table&#34;&gt;setting table&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;*** Settings ***&#xA;# 前三个是加载外部文件&#xA;Library    Selenium2Library # 需要在sys.path路径里面&#xA;Resource    ${RESOURCES}/common.tsv&#xA;Variables    ${RESOURCES}/common.py&#xA;Documentation    Docs&#xA;Metadata    Version    2.0&#xA;Suite Setup&#xA;Suite Teardown&#xA;Force Tags&#xA;Default Tags&#xA;Test Setup&#xA;Test Teardown&#xA;Test Template&#xA;Test Timeout&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;test-case-table&#34;&gt;Test Case table&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/robotframework/HowToWriteGoodTestCases&#34;&gt;https://github.com/robotframework/HowToWriteGoodTestCases&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Selenium</title>
      <link>https://canuxcheng.com/post/testing_selenium/</link>
      <pubDate>Sat, 25 Feb 2017 09:41:39 +0000</pubDate>
      <guid>https://canuxcheng.com/post/testing_selenium/</guid>
      <description>&lt;h1 id=&#34;selenium&#34;&gt;Selenium&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/SeleniumHQ/selenium&#34;&gt;https://github.com/SeleniumHQ/selenium&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;用于基于浏览器的web应用的自动化测试工具集．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;selenium1: deprecated.&#xA;selenium2: 默认支持firefox&amp;lt;=46. 支持python2.6+, python3.2+&#xA;selenium3: 支持firefox47+, 所有浏览器都需要安装webdriver.支持python2.6+, python3.3+, 必须重启OS.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;支持python, java, javascript等API.&lt;/p&gt;&#xA;&lt;p&gt;默认安装selenium3:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ pip install selenium&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;selenium3需要安装相应浏览器的driver, 然后重启OS:&lt;/p&gt;&#xA;&lt;p&gt;selenium, driver, browser三个版本都需要兼容才能工作．&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;winfows放在C:\Python\Scripts\&#xA;linux放在/usr/local/bin/&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://sites.google.com/a/chromium.org/chromedriver/downloads&#34;&gt;https://sites.google.com/a/chromium.org/chromedriver/downloads&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mozilla/geckodriver/releases&#34;&gt;https://github.com/mozilla/geckodriver/releases&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;[Deprecated] Remote Control: 也就是selenium1.selenium2依然保留了selenium1的API.但是selenium3会彻底删除RC的API.&lt;/p&gt;&#xA;&lt;p&gt;[Deprecated] IDE: selenium IDE是一个firefox的插件，用于记录浏览器上的测试步骤，能用于生成测试代码，并且转换成编程语言．但是已经被WebDriver取代．&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;webdriver&#34;&gt;WebDriver&lt;/h1&gt;&#xA;&lt;p&gt;也就是selenium2.已经取代了selenium RC和selenium IDE.&lt;/p&gt;&#xA;&lt;p&gt;python的API参考python博客．&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;grid&#34;&gt;Grid&lt;/h1&gt;&#xA;&lt;p&gt;Selenium Grid用于分布式测试&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;定位元素&#34;&gt;定位元素&lt;/h1&gt;&#xA;&lt;p&gt;对应的python的API参考python博文．&lt;/p&gt;&#xA;&lt;p&gt;selenium提供８种定位web页面中元素的方法：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;id&lt;/li&gt;&#xA;&lt;li&gt;name&lt;/li&gt;&#xA;&lt;li&gt;class&lt;/li&gt;&#xA;&lt;li&gt;tag&lt;/li&gt;&#xA;&lt;li&gt;link&lt;/li&gt;&#xA;&lt;li&gt;partial_link&lt;/li&gt;&#xA;&lt;li&gt;通过xpath&lt;/li&gt;&#xA;&lt;li&gt;通过css&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;在浏览器通过F12快捷键进入调试模式获取．&lt;/p&gt;</description>
    </item>
    <item>
      <title>Grafana</title>
      <link>https://canuxcheng.com/post/metrics_grafana/</link>
      <pubDate>Thu, 12 Jan 2017 21:05:48 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics_grafana/</guid>
      <description>&lt;h1 id=&#34;grafana&#34;&gt;Grafana&lt;/h1&gt;&#xA;&lt;p&gt;The tool for beautiful monitoring and metric analytics &amp;amp; dashboards for Graphite, InfluxDB &amp;amp; Prometheus &amp;amp; More.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/grafana/grafana&#34;&gt;https://github.com/grafana/grafana&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;支持多种data source:&lt;/p&gt;&#xA;&lt;p&gt;graphite/influxdb/opentsdb/premetheus/elasticsearch/mysql/postgresql&lt;/p&gt;&#xA;&lt;p&gt;安装配置参考官方文档&lt;/p&gt;&#xA;&lt;p&gt;grafana配置文件是grafana.ini.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;http-api&#34;&gt;HTTP API&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;port = 3000&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;dashboard&#34;&gt;dashboard&lt;/h2&gt;&#xA;&lt;p&gt;create/update dashboard:&lt;/p&gt;&#xA;&lt;p&gt;将datasource设置成变量，然后导出的json文件就可以直接导入了．&lt;/p&gt;&#xA;&lt;p&gt;dashboard.id=null才能创建新dashboard.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;post /api/dashboards/db&#xA;data = json.dumps({&#xA;    &amp;quot;dashboard&amp;quot;: {&#xA;        &amp;quot;id&amp;quot;: null,&#xA;        ...&#xA;    },&#xA;    &amp;quot;folderId&amp;quot;: 0,&#xA;    &amp;quot;overwrite&amp;quot;: True, # True for python, true for go.&#xA;    &amp;quot;message&amp;quot;: &amp;quot;commit message&amp;quot;&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;datasource&#34;&gt;datasource&lt;/h2&gt;&#xA;&lt;p&gt;create datasource:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;post /api/datasources&#xA;data = json.dumps({&#xA;    &amp;quot;name&amp;quot;:&#xA;    &amp;quot;type&amp;quot;:&#xA;    &amp;quot;url&amp;quot;:&#xA;    &amp;quot;database&amp;quot;:&#xA;    &amp;quot;access&amp;quot;: &amp;quot;proxy&amp;quot;&#xA;})&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;alert&#34;&gt;alert&lt;/h2&gt;&#xA;&lt;p&gt;create alert notification/channel:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tmux</title>
      <link>https://canuxcheng.com/post/devops_tmux/</link>
      <pubDate>Sun, 19 Jun 2016 11:17:53 +0000</pubDate>
      <guid>https://canuxcheng.com/post/devops_tmux/</guid>
      <description>&lt;h1 id=&#34;tmux&#34;&gt;tmux&lt;/h1&gt;&#xA;&lt;p&gt;tmux是终端复用工具，类似于gnu screen。&lt;/p&gt;&#xA;&lt;p&gt;tmux三个基本概念：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;会话（session）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;窗口（window）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;面板（pane）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;tmux使用c/s架构，tmux命令启动tmux服务器，一个tmux服务有多个session，&#xA;每个session就是tmux管理下的伪终端集合，一个session有多个window与之关联，&#xA;每个window就是一个伪终端，占据整个屏幕，一个window可以被分割成多个pane。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;tmux安装和配置&#34;&gt;tmux安装和配置&lt;/h1&gt;&#xA;&lt;p&gt;tmux依赖libevent和ncurses库。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://libevent.org/&#34;&gt;http://libevent.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo yum install libevent-devel&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://invisible-island.net/ncurses/&#34;&gt;http://invisible-island.net/ncurses/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo yum install ncurese-devel&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://tmux.github.io/&#34;&gt;http://tmux.github.io/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install tmux&#xA;sudo yum install tmux&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;用户配置文件： ~/.tmux.conf&lt;/p&gt;&#xA;&lt;p&gt;系统配置文件： /etc/tmux.conf&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;tmux相关项目&#34;&gt;tmux相关项目&lt;/h1&gt;&#xA;&lt;h2 id=&#34;tpm&#34;&gt;TPM&lt;/h2&gt;&#xA;&lt;p&gt;Tmux Plugins Manager.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/tmux-plugins/tpm&#34;&gt;https://github.com/tmux-plugins/tpm&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;tmux用法&#34;&gt;tmux用法&lt;/h1&gt;&#xA;&lt;pre&gt;&lt;code&gt;man tmux&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;开启tmux：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;tmux&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;退出tmux：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;exit&#xA;ctrl + d&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;列出tmux会话：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;tmux ls&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;tmux快捷键&#34;&gt;tmux快捷键&lt;/h2&gt;&#xA;&lt;p&gt;tmux的prefix是ctrl-b&lt;/p&gt;&#xA;&lt;p&gt;按下ctrl-b然后松开，通知tmux下面的按键是快捷键。&lt;/p&gt;&#xA;&lt;p&gt;查看所有快捷键：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ctrl-b + ?&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;显示时间：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jaeger</title>
      <link>https://canuxcheng.com/post/tracing_jaeger/</link>
      <pubDate>Wed, 08 Jun 2016 09:46:47 +0000</pubDate>
      <guid>https://canuxcheng.com/post/tracing_jaeger/</guid>
      <description>&lt;h1 id=&#34;jaeger&#34;&gt;Jaeger&lt;/h1&gt;&#xA;&lt;p&gt;一款uber贡献给cncf的微服务tracing监控工具.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.jaegertracing.io/&#34;&gt;https://www.jaegertracing.io/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jaegertracing/jaeger&#34;&gt;https://github.com/jaegertracing/jaeger&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;deploy-jaeger-on-k8s&#34;&gt;Deploy Jaeger on K8S&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jaegertracing/jaeger-operator&#34;&gt;https://github.com/jaegertracing/jaeger-operator&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Metrics</title>
      <link>https://canuxcheng.com/post/metrics/</link>
      <pubDate>Wed, 08 Jun 2016 09:46:47 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics/</guid>
      <description>&lt;h1 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h1&gt;&#xA;&lt;p&gt;Tranditional monitoring is for Datacenter, like nagios, zabbix.&lt;/p&gt;&#xA;&lt;p&gt;Modern monitoring is for Cloud and Container.&lt;/p&gt;&#xA;&lt;p&gt;Modern monitoring based on metrics, logs and tracing.&lt;/p&gt;&#xA;&lt;h1 id=&#34;tick-stack&#34;&gt;TICK stack&lt;/h1&gt;&#xA;&lt;p&gt;influxdb: tsdb.&lt;/p&gt;&#xA;&lt;p&gt;kapacitor: alerting.&lt;/p&gt;&#xA;&lt;p&gt;chronograf: GUI.&lt;/p&gt;&#xA;&lt;p&gt;telegraf(agent): metrics collector.&lt;/p&gt;&#xA;&lt;h1 id=&#34;prometheus&#34;&gt;Prometheus&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;graphing&#34;&gt;Graphing&lt;/h1&gt;&#xA;&lt;p&gt;最流行的监控绘图软件是grafana, 支持influxdb,elasticsearch和prometheus.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monitoring</title>
      <link>https://canuxcheng.com/post/monitoring/</link>
      <pubDate>Wed, 08 Jun 2016 09:46:47 +0000</pubDate>
      <guid>https://canuxcheng.com/post/monitoring/</guid>
      <description>&lt;h1 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h1&gt;&#xA;&lt;p&gt;Tranditional monitoring is for Datacenter, like nagios, zabbix.&lt;/p&gt;&#xA;&lt;p&gt;Modern monitoring is for Cloud and Container.&lt;/p&gt;&#xA;&lt;p&gt;Modern monitoring based on metrics, logs and tracing.&lt;/p&gt;&#xA;&lt;p&gt;现代的监控系统在DevOps的基础上，除了传统的metrics和logging的采集，还需要tracing应用。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;metrics&#34;&gt;metrics&lt;/h1&gt;&#xA;&lt;h2 id=&#34;tick-stack&#34;&gt;TICK stack&lt;/h2&gt;&#xA;&lt;p&gt;influxdb: tsdb.&lt;/p&gt;&#xA;&lt;p&gt;kapacitor: alerting.&lt;/p&gt;&#xA;&lt;p&gt;chronograf: GUI.&lt;/p&gt;&#xA;&lt;p&gt;telegraf(agent): metrics collector.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prometheus&#34;&gt;Prometheus&lt;/h2&gt;&#xA;&lt;h2 id=&#34;graphing&#34;&gt;Graphing&lt;/h2&gt;&#xA;&lt;p&gt;最流行的监控绘图软件是grafana, 支持influxdb,elasticsearch和prometheus.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;logging&#34;&gt;Logging&lt;/h1&gt;&#xA;&lt;h2 id=&#34;elk&#34;&gt;ELK&lt;/h2&gt;&#xA;&lt;h2 id=&#34;lokigrafana&#34;&gt;Loki+Grafana&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;tracing&#34;&gt;Tracing&lt;/h1&gt;&#xA;&lt;h2 id=&#34;jeager&#34;&gt;Jeager&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Sentry</title>
      <link>https://canuxcheng.com/post/tracing_sentry/</link>
      <pubDate>Wed, 08 Jun 2016 09:46:47 +0000</pubDate>
      <guid>https://canuxcheng.com/post/tracing_sentry/</guid>
      <description>&lt;h1 id=&#34;sentry&#34;&gt;Sentry&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/getsentry/sentry&#34;&gt;https://github.com/getsentry/sentry&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;deploy-sentry-on-k8s&#34;&gt;Deploy Sentry on K8S&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/getsentry/onpremise&#34;&gt;https://github.com/getsentry/onpremise&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tracing</title>
      <link>https://canuxcheng.com/post/tracing/</link>
      <pubDate>Wed, 08 Jun 2016 09:46:47 +0000</pubDate>
      <guid>https://canuxcheng.com/post/tracing/</guid>
      <description>&lt;h1 id=&#34;tracing&#34;&gt;Tracing&lt;/h1&gt;&#xA;&lt;p&gt;APM 监控，也叫全链路监控。&lt;/p&gt;&#xA;&lt;h1 id=&#34;sentry&#34;&gt;sentry&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/getsentry/sentry&#34;&gt;https://github.com/getsentry/sentry&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;zipkin&#34;&gt;zipkin&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/openzipkin/zipkin&#34;&gt;https://github.com/openzipkin/zipkin&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;open-telemetry&#34;&gt;open-telemetry&lt;/h1&gt;&#xA;&lt;p&gt;opentracing和opencensus 合并成open-telemetry.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/opentracing&#34;&gt;https://github.com/opentracing&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/census-instrumentation&#34;&gt;https://github.com/census-instrumentation&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/open-telemetry&#34;&gt;https://github.com/open-telemetry&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;jaeger&#34;&gt;jaeger&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jaegertracing/jaeger&#34;&gt;https://github.com/jaegertracing/jaeger&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tivoli</title>
      <link>https://canuxcheng.com/post/metrics_tivoli/</link>
      <pubDate>Wed, 20 Apr 2016 13:57:31 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics_tivoli/</guid>
      <description>&lt;h1 id=&#34;itm&#34;&gt;ITM&lt;/h1&gt;&#xA;&lt;p&gt;ITM: IBM Tivoli Monitoring&lt;/p&gt;&#xA;&lt;p&gt;是IBM的Cloud &amp;amp; Smart Infrastructure监控解决方案。&lt;/p&gt;&#xA;&lt;p&gt;Architecture Overview:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://canuxcheng.com/images/tivoli.png&#34; alt=&#34;pic&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;ITM主要由管理组件和可选组件组成。&lt;/p&gt;&#xA;&lt;p&gt;Tivoli Management Services:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;TEMS&lt;/li&gt;&#xA;&lt;li&gt;TEPS&lt;/li&gt;&#xA;&lt;li&gt;TEP client&lt;/li&gt;&#xA;&lt;li&gt;Historical data collection(warehouse agent)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;warehouse proxy&lt;/li&gt;&#xA;&lt;li&gt;summarization and pruning agent&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;OS agent&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Optional components:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Dashboard Application Services Hub&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Tivoli Monitoring dashboards(Infrastructure Management Dashboards for Servers)&lt;/li&gt;&#xA;&lt;li&gt;Tivoli Common Reporting&lt;/li&gt;&#xA;&lt;li&gt;Tivoli Enterprise Monitoring Automation Server&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Tivoli Event Synchronization component&lt;/li&gt;&#xA;&lt;li&gt;Authorization Policy Components(tivcmd)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.ibm.com/support/knowledgecenter/SSTFXA_6.3.0/com.ibm.itm.doc_6.3/welcome_63.htm&#34;&gt;http://www.ibm.com/support/knowledgecenter/SSTFXA_6.3.0/com.ibm.itm.doc_6.3/welcome_63.htm&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;安装itm&#34;&gt;安装ITM&lt;/h2&gt;&#xA;&lt;p&gt;Windows: C:\IBM\ITM&lt;/p&gt;&#xA;&lt;p&gt;Linux/Unix: /opt/IBM/ITM&lt;/p&gt;&#xA;&lt;p&gt;分为本地安装和分布式安装。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;需要先为TEPS和TDW安装DB(ODBC/JDBC)。&lt;/p&gt;&#xA;&lt;p&gt;DB2&lt;/p&gt;&#xA;&lt;p&gt;MSSQL&lt;/p&gt;</description>
    </item>
    <item>
      <title>Development</title>
      <link>https://canuxcheng.com/post/devops_dev/</link>
      <pubDate>Fri, 15 Apr 2016 09:41:39 +0000</pubDate>
      <guid>https://canuxcheng.com/post/devops_dev/</guid>
      <description>&lt;h1 id=&#34;development&#34;&gt;Development&lt;/h1&gt;&#xA;&lt;p&gt;开发相关的工具&lt;/p&gt;&#xA;&lt;p&gt;传统的软件开发采用的是瀑布式开发流程．&lt;/p&gt;&#xA;&lt;p&gt;现代的软件开发采用的是敏捷开发流程(Agile development).&lt;/p&gt;&#xA;&lt;p&gt;Alpha: inner test version.&lt;/p&gt;&#xA;&lt;p&gt;Beta: outer test version.&lt;/p&gt;&#xA;&lt;p&gt;RC: release candidate. 最终版本之前的最后一个版本．也叫gamma.&lt;/p&gt;&#xA;&lt;p&gt;RTM: release to manufacture, 最终版&lt;/p&gt;&#xA;&lt;p&gt;GA: generally avaliable. stable/production.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;怎样选择licenses&#34;&gt;怎样选择Licenses&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://choosealicense.com/licenses/&#34;&gt;http://choosealicense.com/licenses/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://choosealicense.com/&#34;&gt;https://choosealicense.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://canuxcheng.com/images/license.jpeg&#34; alt=&#34;pic&#34;&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;semver&#34;&gt;semver&lt;/h1&gt;&#xA;&lt;p&gt;语义化版本．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://semver.org/lang/zh-CN/&#34;&gt;http://semver.org/lang/zh-CN/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/mojombo/semver&#34;&gt;https://github.com/mojombo/semver&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;主版本号.次版本号.修订号&#xA;Major.Minor.Patch&#xA;&#xA;Major: 做了不兼容的API修改&#xA;Minor: 做了向下兼容的功能性新增&#xA;Patch: 做了向下兼容的问题修正&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;文档阅读工具&#34;&gt;文档阅读工具&lt;/h1&gt;&#xA;&lt;h2 id=&#34;zeal&#34;&gt;zeal&lt;/h2&gt;&#xA;&lt;h2 id=&#34;dash&#34;&gt;dash&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;cookiecutter&#34;&gt;cookiecutter&lt;/h1&gt;&#xA;&lt;p&gt;一个快速建立工程模板的命令行工具．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/audreyr/cookiecutter&#34;&gt;https://github.com/audreyr/cookiecutter&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/audreyr/cookiecutter-pypackage&#34;&gt;https://github.com/audreyr/cookiecutter-pypackage&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$sudo -E pip install cookiecutter&#xA;# 创建python项目&#xA;$cookiecutter https://github.com/audreyr/cookiecutter-pypackage.git&#xA;# 创建django格式的python项目&#xA;$cookiecutter https://github.com/pydanny/cookiecutter-django&#xA;# 创建openstack格式的python项目&#xA;$cookiecutter https://git.openstack.org/openstack-dev/cookiecutter.git&#xA;$cookiecutter https://github.com/openstack-dev/cookiecutter.git&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;bumpversion&#34;&gt;bumpversion&lt;/h1&gt;&#xA;&lt;p&gt;版本管理工具&lt;/p&gt;</description>
    </item>
    <item>
      <title>DevOps</title>
      <link>https://canuxcheng.com/post/devops/</link>
      <pubDate>Fri, 15 Apr 2016 09:41:39 +0000</pubDate>
      <guid>https://canuxcheng.com/post/devops/</guid>
      <description>&lt;h1 id=&#34;devops&#34;&gt;DevOps&lt;/h1&gt;&#xA;&lt;p&gt;DevOps包括ChatOps, 敏捷开发，持续集成,持续交付,持续发布/部署，QA(自动化测试），智能监控和日志管理等内容．&lt;/p&gt;&#xA;&lt;p&gt;DevOps涉及到三个部门：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Development&lt;/li&gt;&#xA;&lt;li&gt;Operations&lt;/li&gt;&#xA;&lt;li&gt;Quality Assurance&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;ci&#34;&gt;CI&lt;/h1&gt;&#xA;&lt;p&gt;Continuous Integration.&lt;/p&gt;&#xA;&lt;p&gt;持续集成包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;编译代码.&lt;/li&gt;&#xA;&lt;li&gt;静态代码分析.&lt;/li&gt;&#xA;&lt;li&gt;自动化测试，例如selenium.&lt;/li&gt;&#xA;&lt;li&gt;代码覆盖率分析.&lt;/li&gt;&#xA;&lt;li&gt;构建，例如docker.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;cd&#34;&gt;CD&lt;/h1&gt;&#xA;&lt;p&gt;Continuous Delivery.&lt;/p&gt;&#xA;&lt;p&gt;持续交付包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将通过测试的代码部署到Staging.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;continuous-releasedeploy&#34;&gt;Continuous Release/Deploy&lt;/h1&gt;&#xA;&lt;p&gt;持续部署/发布包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;将通过评审的交付代码部署到Production.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;cicd的工具&#34;&gt;CI/CD的工具&lt;/h1&gt;&#xA;&lt;p&gt;持续集成和部署&lt;/p&gt;&#xA;&lt;h2 id=&#34;jenkins&#34;&gt;Jenkins&lt;/h2&gt;&#xA;&lt;h2 id=&#34;travis-ci&#34;&gt;travis CI&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://travis-ci.org/&#34;&gt;https://travis-ci.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;travis CI是基于github的CI工具, 部署代码然后运行测试代码.&lt;/p&gt;&#xA;&lt;p&gt;在github项目添加.travis.yml文件：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;language: python&#xA;python:&#xA;  - &amp;quot;2.7&amp;quot;&#xA;install:&#xA;  - pip install -r requirements.txt&#xA;  - pip install coveralls&#xA;script:&#xA;  - coverage run --source=pymonitoringplugins setup.py test&#xA;after_success:&#xA;  - coveralls&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;circleci&#34;&gt;circleci&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://circleci.com/&#34;&gt;https://circleci.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;coverage的工具&#34;&gt;coverage的工具&lt;/h1&gt;&#xA;&lt;p&gt;统计单元测试的覆盖率&lt;/p&gt;&#xA;&lt;h2 id=&#34;coveralls&#34;&gt;coveralls&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://coveralls.io/&#34;&gt;https://coveralls.io/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;codecov&#34;&gt;codecov&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://codecov.io/&#34;&gt;https://codecov.io/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gitlab</title>
      <link>https://canuxcheng.com/post/devops_gitlab/</link>
      <pubDate>Fri, 15 Apr 2016 09:41:39 +0000</pubDate>
      <guid>https://canuxcheng.com/post/devops_gitlab/</guid>
      <description>&lt;h1 id=&#34;gitlab&#34;&gt;Gitlab&lt;/h1&gt;&#xA;&lt;p&gt;gitlab是开源的有web界面的git服务器．&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://about.gitlab.com/&#34;&gt;https://about.gitlab.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;安装gitlab:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;sudo apt-get install -y curl openssh-server ca-certificates&#xA;sudo apt-get install -y postfix&#xA;curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | sudo bash&#xA;sudo EXTERNAL_URL=&amp;quot;http://gitlab.example.com&amp;quot; apt-get install gitlab-ce&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;配置:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;/etc/gitlab/gitlab.rb&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;升级gitlab:&lt;/p&gt;&#xA;&lt;p&gt;需要先升级到下个major版本的最后一个稳定版.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;current:   9.4.7&#xA;patch: gitlab-ce=9.5.10&#xA;patch: gitlab-ce_10.8.7&#xA;patch: gitlab-ce=11.11.8&#xA;patch: gitlab-ce=12.0.12&#xA;target: 12.10.14&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;runner:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;#sudo curl -L --output /usr/local/bin/gitlab-runner https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64&#xA;sudo chmod +x /usr/local/bin/gitlab-runner&#xA;sudo gitlab-runner install --user=canux --working-directory=/home/canux/gitlab&#xA;sudo gitlab-runner register&#xA;sudo gitlab-runner start&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;cli&#34;&gt;CLI&lt;/h1&gt;&#xA;&lt;p&gt;备份：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Jenkins</title>
      <link>https://canuxcheng.com/post/devops_jenkins/</link>
      <pubDate>Fri, 15 Apr 2016 09:41:39 +0000</pubDate>
      <guid>https://canuxcheng.com/post/devops_jenkins/</guid>
      <description>&lt;h1 id=&#34;jenkins&#34;&gt;Jenkins&lt;/h1&gt;&#xA;&lt;p&gt;Jenkins is a self-contained, open source automation server which can be used to automate all sorts of tasks such as building, testing, and deploying software.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/jenkinsci/jenkins&#34;&gt;https://github.com/jenkinsci/jenkins&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;安装好Jenkins后安装需要的插件．&lt;/p&gt;&#xA;&lt;p&gt;安装jenkins:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# download jenkins.war and install java8.&#xA;$ java -jar jenkins.war --httpPort=8080&#xA;$ firefox http://localhost:8080&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;设置开机自动启动，不用每次从终端启动:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ vim /etc/systemd/system/jenkins.service&#xA;$ systemctl daemon-reload&#xA;$ systemctl enable jenkins.service&#xA;$ systemctl start jenkins&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;jinkens主目录:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 默认主目录在/home/canux/.jenkins&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;nodes&#34;&gt;nodes&lt;/h1&gt;&#xA;&lt;p&gt;添加节点需要安装和master版本一样的java.&lt;/p&gt;&#xA;&lt;p&gt;on jenkins agent:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;install java.&lt;/li&gt;&#xA;&lt;li&gt;create folder and grant permission. (/home/jenkins)&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;on jenkins:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Operations</title>
      <link>https://canuxcheng.com/post/devops_ops/</link>
      <pubDate>Fri, 15 Apr 2016 09:41:39 +0000</pubDate>
      <guid>https://canuxcheng.com/post/devops_ops/</guid>
      <description>&lt;h1 id=&#34;operations&#34;&gt;Operations&lt;/h1&gt;&#xA;&lt;p&gt;运维相关的工具．&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;批量配置管理&#34;&gt;批量配置管理&lt;/h1&gt;&#xA;&lt;h2 id=&#34;puppet&#34;&gt;puppet&lt;/h2&gt;&#xA;&lt;h2 id=&#34;chef&#34;&gt;chef&lt;/h2&gt;&#xA;&lt;h2 id=&#34;salt&#34;&gt;salt&lt;/h2&gt;&#xA;&lt;h2 id=&#34;ansible&#34;&gt;ansible&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;密码管理工具&#34;&gt;密码管理工具&lt;/h1&gt;&#xA;&lt;h2 id=&#34;keepass&#34;&gt;keepass&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://keepass.info/&#34;&gt;http://keepass.info/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;keepassx&#34;&gt;KeePassX&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.keepassx.org/&#34;&gt;https://www.keepassx.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/keepassx/keepassx&#34;&gt;https://github.com/keepassx/keepassx&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Agile</title>
      <link>https://canuxcheng.com/post/devops_agile/</link>
      <pubDate>Fri, 15 Apr 2016 09:41:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/devops_agile/</guid>
      <description>&lt;h1 id=&#34;agile-methodologies&#34;&gt;Agile methodologies&lt;/h1&gt;&#xA;&lt;p&gt;Agile的具体方法有Scrum, XP和kanban.&lt;/p&gt;&#xA;&lt;p&gt;ThoughtWorks公司的Martin Fowler提出的敏捷方法．&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;scrum&#34;&gt;Scrum&lt;/h1&gt;&#xA;&lt;p&gt;Scrum方法由Ken Schwaber和Jeff Sutherland 提出.&lt;/p&gt;&#xA;&lt;p&gt;scrum是一个用于开发和维护复杂产品的框架，是一个增量的，迭代的开发过程．&lt;/p&gt;&#xA;&lt;p&gt;sprint: 一个短的迭代周期．一般２到４周．&lt;/p&gt;&#xA;&lt;p&gt;backlog: 按商业价值排序的需求列表．&lt;/p&gt;&#xA;&lt;h2 id=&#34;scrum框架的三个角色&#34;&gt;scrum框架的三个角色&lt;/h2&gt;&#xA;&lt;p&gt;product owner: 产品负责人&lt;/p&gt;&#xA;&lt;p&gt;scrum master: 敏捷教练和领导者&lt;/p&gt;&#xA;&lt;p&gt;scrum team：developer&lt;/p&gt;&#xA;&lt;h2 id=&#34;scrum框架的三个工件&#34;&gt;scrum框架的三个工件&lt;/h2&gt;&#xA;&lt;p&gt;Product backlog: 整个产品待开发需求列表&lt;/p&gt;&#xA;&lt;p&gt;sprint backlog: 一次迭代的待开发需求列表&lt;/p&gt;&#xA;&lt;p&gt;increment: 产品增量&lt;/p&gt;&#xA;&lt;h2 id=&#34;scrum框架的五个事件&#34;&gt;scrum框架的五个事件&lt;/h2&gt;&#xA;&lt;p&gt;sprint planning meeting: sprint计划会议&lt;/p&gt;&#xA;&lt;p&gt;Daily Scrum Meeting/DSM: 每日站立会议&lt;/p&gt;&#xA;&lt;p&gt;sprint review meeting: sprint评审会议&lt;/p&gt;&#xA;&lt;p&gt;sprint retrospective meeting: sprint回顾会议&lt;/p&gt;&#xA;&lt;p&gt;product backlog refinement: 产品backlog梳理会议&lt;/p&gt;&#xA;&lt;h2 id=&#34;scrum框架的五个价值观&#34;&gt;scrum框架的五个价值观&lt;/h2&gt;&#xA;&lt;p&gt;承诺&lt;/p&gt;&#xA;&lt;p&gt;专注&lt;/p&gt;&#xA;&lt;p&gt;开放&lt;/p&gt;&#xA;&lt;p&gt;尊重&lt;/p&gt;&#xA;&lt;p&gt;勇气&lt;/p&gt;&#xA;&lt;h2 id=&#34;scrum框架的四大支柱&#34;&gt;scrum框架的四大支柱&lt;/h2&gt;&#xA;&lt;p&gt;迭代开发&lt;/p&gt;&#xA;&lt;p&gt;增量交付&lt;/p&gt;&#xA;&lt;p&gt;自组织团队&lt;/p&gt;&#xA;&lt;p&gt;高优先级的需求驱动&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;xp&#34;&gt;XP&lt;/h1&gt;&#xA;&lt;p&gt;Extreme Programming&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ansible</title>
      <link>https://canuxcheng.com/post/devops_ansible/</link>
      <pubDate>Fri, 15 Apr 2016 09:41:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/devops_ansible/</guid>
      <description>&lt;h1 id=&#34;ansible&#34;&gt;Ansible&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ansible/ansible&#34;&gt;https://github.com/ansible/ansible&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.ansible.com.cn/index.html&#34;&gt;http://www.ansible.com.cn/index.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;ansible通过SSH来远程管理Linux/Unix机器．&lt;/p&gt;&#xA;&lt;p&gt;ansible通过winrm+powershell来远程管理Windows机器．&lt;/p&gt;&#xA;&lt;p&gt;安装:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo pip install ansible&#xA;$ sudo apt-get install ansible&#xA;$ sudo yum install ansible&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;配置：&lt;/p&gt;&#xA;&lt;p&gt;参考Network-SSH实现从controller到所有node的无密码登陆&lt;/p&gt;&#xA;&lt;p&gt;配置文件执行顺序:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ANSIBLE_CONFIG&#xA;ansible.cfg&#xA;.ansible.cfg&#xA;/etc/ansible/ansible.cfg&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;手动配置:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/ansible/ansible.cfg&#xA;[defaults]&#xA;ask_pass = False&#xA;host_key_checking = False&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;ansible命令&#34;&gt;ansible命令&lt;/h1&gt;&#xA;&lt;p&gt;ansible运行命令的两种方式：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Ad-hoc相当于直接运行shell命令&lt;/li&gt;&#xA;&lt;li&gt;playbooks相当于运行shell脚本&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;ansible:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ ansible -i inventory group1:group1:group3/all ...&#xA;&#xA;$ansible --help&#xA;-m MODULE_NAME, --module-name=MODULE_NAME # 执行模块，默认是command&#xA;-M MODULE_PATH, --module-path=MODULE_PATH # 指定模块的路径&#xA;-a MODULE_ARGS, --args=MODULE_ARGS # 模块的参数&#xA;-i INVENTORY, --inventory INVENTORY # 默认/etc/ansible/hosts, 需要指定hosts分组&#xA;-f FORKS, --forks=FORKS # 指定并发进程的数量&#xA;-C, --check&#xA;-D, --diff&#xA;-l SUBSET, --limit=SUBSET&#xA;--syntax-check&#xA;--list-hosts&#xA;-v, --verbose # -v, -vvv, -vvvv&#xA;&#xA;# 提权选项&#xA;-b, --become&#xA;--become-method=BECOME_METHOD # sudo(default)/su/pbrun/pfexec/runas/doas&#xA;--become-user=BECOME_USER # root(default)&#xA;-K, --ask-become-pass&#xA;&#xA;# 连接选项&#xA;-u REMOTE_USER&#xA;--ssh-common-args&#xA;--ssh-extra-args&#xA;-T TIMEOUT # default 10s&#xA;-K, --ask-pass&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;inventory&#34;&gt;inventory&lt;/h1&gt;&#xA;&lt;p&gt;inventory包括主机和分组,以及主机变量和分组变量.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Terraform</title>
      <link>https://canuxcheng.com/post/cloud_terraform/</link>
      <pubDate>Fri, 15 Apr 2016 09:41:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/cloud_terraform/</guid>
      <description>&lt;h1 id=&#34;terraform&#34;&gt;Terraform&lt;/h1&gt;&#xA;&lt;p&gt;install:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://learn.hashicorp.com/tutorials/terraform/install-cli&#34;&gt;https://learn.hashicorp.com/tutorials/terraform/install-cli&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;cli&#34;&gt;CLI&lt;/h2&gt;&#xA;&lt;p&gt;操作工作目录&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 初始化目录，会根据配置下载和安装provider.&#xA;terraform init&#xA;&#xA;terraform get&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;操作tf文件&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 格式化文件&#xA;terraform fmt -recursive&#xA;&#xA;// 验证文件&#xA;terraform validate &#xA;&#xA;// 可以通过终端验证函数.&#xA;terraform console&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;操作基础设施:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;terraform plan&#xA;terraform plan -out test.tfplan&#xA;&#xA;terraform apply -auto-approve&#xA;terraform apply test.tfplan&#xA;&#xA;terraform destroy&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;检查基础设施:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;terraform show&#xA;terraform graph&#xA;terraform output&#xA;terraform state list/show&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;认证:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;terraform login&#xA;terraform logout&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;tf&#34;&gt;TF&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.terraform.io/language&#34;&gt;https://www.terraform.io/language&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;注释:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# comment &#xA;// comment&#xA;/* comment */&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;backend-and-state&#34;&gt;backend and state&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.terraform.io/language/settings/backends&#34;&gt;https://www.terraform.io/language/settings/backends&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vault</title>
      <link>https://canuxcheng.com/post/devops_vault/</link>
      <pubDate>Fri, 15 Apr 2016 09:41:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/devops_vault/</guid>
      <description>&lt;h1 id=&#34;vault&#34;&gt;Vault&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/hashicorp/vault&#34;&gt;https://github.com/hashicorp/vault&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Install:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://learn.hashicorp.com/tutorials/vault/getting-started-install&#34;&gt;https://learn.hashicorp.com/tutorials/vault/getting-started-install&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;cli&#34;&gt;CLI&lt;/h1&gt;&#xA;&lt;p&gt;可以通过环境变量或者命令行参数指定server:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;-address VAULT_ADDR&#xA;-namespace VAULT_NAMESPACE&#xA;vault [subcommand] -address=&amp;quot;https://server:8200&amp;quot;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;server:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 启动vault&#xA;$ vault server -config=/etc/vault/config.hcl&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;agent:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ vault agent&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;login:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 跟据token登陆.&#xA;$ vault login&#xA;&#xA;$vault login -token-only -method=oidc&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;operator:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// init生成keys和token.&#xA;$ vault operator init&#xA;&#xA;// 通过keys  unseal&#xA;$ vault operator unseal&#xA;&#xA;// 通过token seal&#xA;$ vault operator seal&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;auth:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 查看auth&#xA;$ vault auth list&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;secrets&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 查看secrets engine&#xA;$ vault secrets list&#xA;&#xA;// enable kv&#xA;$ vault secrets enable -path=&amp;lt;ns&amp;gt;/&amp;lt;name&amp;gt; kv&#xA;$ vault secrets enable kv&#xA;&#xA;// disable kv&#xA;$ vault secrets disable kv&#xA;&#xA;// 创建一个database engine&#xA;vault secrets enable -path &amp;lt;ns&amp;gt;/mysql database&#xA;// 创建rabbitmq engine&#xA;vault secrets enable -path &amp;lt;ns&amp;gt;/rabbitmq rabbitmq&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;policy&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git</title>
      <link>https://canuxcheng.com/post/devops_git/</link>
      <pubDate>Sat, 02 Apr 2016 21:11:33 +0000</pubDate>
      <guid>https://canuxcheng.com/post/devops_git/</guid>
      <description>&lt;h1 id=&#34;git&#34;&gt;Git&lt;/h1&gt;&#xA;&lt;p&gt;GIT: 分布式版本控制系统。&lt;/p&gt;&#xA;&lt;p&gt;SVN: subversion并发式版本控制系统。&lt;/p&gt;&#xA;&lt;p&gt;Mercurial: hg分布式版本控制。&lt;/p&gt;&#xA;&lt;p&gt;和git相关的产品：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;github&lt;/li&gt;&#xA;&lt;li&gt;bitbucket&lt;/li&gt;&#xA;&lt;li&gt;sourceForge&lt;/li&gt;&#xA;&lt;li&gt;gitlab&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;Git安装：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install git&#xA;$ yum install git&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h1 id=&#34;git-config-git配置&#34;&gt;git config (Git配置)&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://git-scm.com/book/zh/v2&#34;&gt;https://git-scm.com/book/zh/v2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;git配置文件：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;/etc/gitconfig 系统级的配置文件，通过git config &amp;ndash;system设置&lt;/li&gt;&#xA;&lt;li&gt;~/.gitconfig 用户级的配置文件，通过git config &amp;ndash;global设置&lt;/li&gt;&#xA;&lt;li&gt;.git/config 仓库级的配置文件，通过git config &amp;ndash;local设置&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;git配置：&lt;/p&gt;&#xA;&lt;p&gt;使用git config &amp;ndash;global命令配置,或者直接修改~/.gitconfig文件。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 查看帮助&#xA;git help config&#xA;man git-config&#xA;git config --help&#xA;git config -l/--list # 查看所有配置&#xA;git config --system&#xA;git config --global&#xA;git config --local&#xA;git config --global user.name &amp;quot;your_name&amp;quot;&#xA;git config --global user.email &amp;quot;your_email&amp;quot;&#xA;git config --global core.editor vim&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;多配置文件：&lt;/p&gt;</description>
    </item>
    <item>
      <title>Vim</title>
      <link>https://canuxcheng.com/post/devops_vim/</link>
      <pubDate>Sat, 02 Apr 2016 21:11:26 +0000</pubDate>
      <guid>https://canuxcheng.com/post/devops_vim/</guid>
      <description>&lt;h1 id=&#34;vim&#34;&gt;vim&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.vim.org&#34;&gt;http://www.vim.org&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/vim/vim&#34;&gt;https://github.com/vim/vim&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;类似编辑器:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;emacs&lt;/li&gt;&#xA;&lt;li&gt;Atom(github的开源跨平台编辑器，支持插件。)&lt;/li&gt;&#xA;&lt;li&gt;VSCode(微软的开源跨平台的编辑器，支持插件。)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;vim安装和配置&#34;&gt;Vim安装和配置&lt;/h1&gt;&#xA;&lt;p&gt;查看vim版本和编译信息：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;vim --version&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;安装vim：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get install vim&#xA;$ yum install vim&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;源码安装vim：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get build-dep vim&#xA;$ cd vim/src&#xA;&#xA;$ ./configure \&#xA;--with-features=huge \&#xA;--with-compiledby=&amp;quot;Canux&amp;quot; \&#xA;--enable-multibyte \&#xA;--enable-gui=gtk2 \&#xA;--enable-gpm \&#xA;--prefix=/usr \&#xA;--enable-cscope \&#xA;--enable-fontset \&#xA;--enable-xim \&#xA;--enable-fail-if-missing \&#xA;--enable-mzschemeinterp \&#xA;--enable-perlinterp \&#xA;--enable-luainterp \&#xA;--enable-tclinterp\&#xA;--enable-rubyinterp \&#xA;--enable-pythoninterp \&#xA;--with-python-config-dir=/usr/lib/python2.7/config-x86_64-linux-gnu \&#xA;--enable-python3interp \&#xA;--with-python3-config-dir=/usr/lib/python3.4/config-3.4m-x86_64-linux-gnu&#xA;&#xA;$ make VIMRUNTIMEDIR=/usr/share/vim/vim74&#xA;$ sudo make install&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;vim相关项目&#34;&gt;Vim相关项目&lt;/h1&gt;&#xA;&lt;h2 id=&#34;neovim&#34;&gt;neovim&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/neovim/neovim&#34;&gt;https://github.com/neovim/neovim&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nagios</title>
      <link>https://canuxcheng.com/post/metrics_nagios/</link>
      <pubDate>Fri, 25 Mar 2016 11:15:48 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics_nagios/</guid>
      <description>&lt;h1 id=&#34;nagios&#34;&gt;Nagios&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Nagios is the industry standard in IT infrastructure monitoring&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Nagios offers complete monitoring and alerting for servers, switches, applications, and services.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;Nagios官方宣称nagios是IT基础监控的工业标准。&lt;/p&gt;&#xA;&lt;p&gt;Nagios提供对服务器，交换机，应用和服务的完整的监控和警报。&lt;/p&gt;&#xA;&lt;p&gt;Nagios是无agent的，nagios的plugin通过协议远程获取信息。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.nagios.org/&#34;&gt;https://www.nagios.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.nagios.com/&#34;&gt;https://www.nagios.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://exchange.nagios.org/&#34;&gt;https://exchange.nagios.org/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/NagiosEnterprises&#34;&gt;https://github.com/NagiosEnterprises&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/nagios-plugins&#34;&gt;https://github.com/nagios-plugins&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;nagios安装配置&#34;&gt;Nagios安装配置&lt;/h1&gt;&#xA;&lt;h2 id=&#34;nagios发展&#34;&gt;Nagios发展&lt;/h2&gt;&#xA;&lt;p&gt;Nagios core 1.0&lt;/p&gt;&#xA;&lt;p&gt;Nagios core 2.0&lt;/p&gt;&#xA;&lt;p&gt;Nagios core 3.0&lt;/p&gt;&#xA;&lt;p&gt;Nagios XI&lt;/p&gt;&#xA;&lt;p&gt;Nagios core 4.0&lt;/p&gt;&#xA;&lt;p&gt;目前nagios有两大阵营：&lt;/p&gt;&#xA;&lt;p&gt;开源解决方案： Nagios core&lt;/p&gt;&#xA;&lt;p&gt;商业解决方案： Nagios XI&lt;/p&gt;&#xA;&lt;h2 id=&#34;nagios安装配置-1&#34;&gt;Nagios安装配置&lt;/h2&gt;&#xA;&lt;p&gt;安装和配置nagios core,plugins,addons参考&lt;/p&gt;&#xA;&lt;p&gt;官方文档:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/4/en/toc.html&#34;&gt;https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/4/en/toc.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;中文文档：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://nagios-cn.sourceforge.net/nagios-cn/index.html&#34;&gt;http://nagios-cn.sourceforge.net/nagios-cn/index.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;nagios开源解决方案&#34;&gt;Nagios开源解决方案&lt;/h1&gt;&#xA;&lt;h2 id=&#34;nagios-core&#34;&gt;Nagios core:&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Nagios Core is the monitoring and alerting engine that serves as the primary application around which hundreds of Nagios projects are built.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zabbix</title>
      <link>https://canuxcheng.com/post/metrics_zabbix/</link>
      <pubDate>Fri, 25 Mar 2016 11:15:48 +0000</pubDate>
      <guid>https://canuxcheng.com/post/metrics_zabbix/</guid>
      <description>&lt;h1 id=&#34;zabbix&#34;&gt;Zabbix&lt;/h1&gt;</description>
    </item>
  </channel>
</rss>
