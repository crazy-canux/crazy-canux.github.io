<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Admin on Morgoth</title>
        <link>https://canuxcheng.com/tags/admin/</link>
        <description>Recent content in Admin on Morgoth</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 04 Oct 2016 04:29:37 +0000</lastBuildDate><atom:link href="https://canuxcheng.com/tags/admin/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Admin</title>
        <link>https://canuxcheng.com/post/django_admin/</link>
        <pubDate>Tue, 04 Oct 2016 04:29:37 +0000</pubDate>
        
        <guid>https://canuxcheng.com/post/django_admin/</guid>
        <description>&lt;h1 id=&#34;adminpy&#34;&gt;admin.py&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;from django.contrib import admin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建一个管理员用户：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python manage.py createsuperuser
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;管理员登陆界面：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://localhost:8000/admin/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在admin.py中注册模型，然后就可以在登陆界面管理模型了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from .models import Question
admin.site.register(Question)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;自定义管理表单：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from .models import Question
class QuestionAdmin(admin.ModelAdmin):
    fileds = [&#39;pub_date&#39;, &#39;question_date&#39;]
admin.site.register(Question, QuestionAdmin)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;把表单分割成字段集：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from .models import Question
class QuestionAdmin(admin.ModelAdmin):
    fieldsets = [
        (None,               {&#39;fields&#39;: [&#39;question_text&#39;]}),
        (&#39;Date information&#39;, {&#39;fields&#39;: [&#39;pub_date&#39;]}),
    ]
admin.site.register(Question, QuestionAdmin)
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;后台&#34;&gt;后台&lt;/h1&gt;
&lt;p&gt;django的后台管理程序。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Admin</title>
        <link>https://canuxcheng.com/post/win_admin/</link>
        <pubDate>Tue, 26 Apr 2016 09:54:45 +0000</pubDate>
        
        <guid>https://canuxcheng.com/post/win_admin/</guid>
        <description></description>
        </item>
        <item>
        <title>Admin</title>
        <link>https://canuxcheng.com/post/linux_admin/</link>
        <pubDate>Fri, 15 Apr 2016 09:41:39 +0800</pubDate>
        
        <guid>https://canuxcheng.com/post/linux_admin/</guid>
        <description>&lt;h1 id=&#34;linux-admin&#34;&gt;Linux Admin&lt;/h1&gt;
&lt;p&gt;dpkg: ubuntu, debian.&lt;/p&gt;
&lt;p&gt;rpm: fedora, centos, redhat.&lt;/p&gt;
&lt;p&gt;zypper: suse.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;linux系统常用的安装和配置&#34;&gt;Linux系统常用的安装和配置&lt;/h1&gt;
&lt;h2 id=&#34;terminalizer&#34;&gt;terminalizer&lt;/h2&gt;
&lt;p&gt;终端录制工具&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/faressoft/terminalizer&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/faressoft/terminalizer&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;virtualbox&#34;&gt;virtualbox&lt;/h2&gt;
&lt;p&gt;开机自动挂载共享文件夹&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 手动挂在命令, 需要安装增强功能
$ mount -t vboxsf FolderNameOnWindows /path/on/linux

# 实现开机自动挂载
$ sudo vim /etc/rc.local
mount.vboxsf -w ShareFolderNameOnWindows MountPointOnLinux
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;xrdp&#34;&gt;xrdp&lt;/h2&gt;
&lt;p&gt;从windows的RDP远程连接linux.&lt;/p&gt;
&lt;p&gt;use RDP on windows to connect to ubuntu16.04.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo dpkg -i tigervncserver_1.6...deb # download and install tigervncserver first.
sudo apt-get install -f
sudo apt-get instal xrdp -y
echo unity &amp;gt; ~/.xsession
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;use RDP on windows to connect to ubuntu14.04.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install xrdp
sudo apt-get install xfce4
echo xfce4-session &amp;gt; ~/.xsession
sudo vim /etc/xrdp/startwm.sh
# add &#39;startxfce4&#39; to last line.
sudo service xrdp restart
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;清理内存的buffcache&#34;&gt;清理内存的buff/cache&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;echo 3 &amp;gt; /proc/sys/vm/drop_caches
# reboot才能改回默认的0
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;终端现实超大艺术字&#34;&gt;终端现实超大艺术字&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install figlet
$ figlet &amp;lt;text&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;ubuntudebian安装后的基本配置&#34;&gt;Ubuntu/Debian安装后的基本配置&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install build-essential make libssl-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;apt-mirror&#34;&gt;apt mirror&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;vim /etc/apt/sources.list
# deb http://ip:port/path   ubuntu16/
# deb [trusted=yes] https://&amp;lt;user&amp;gt;:&amp;lt;pw&amp;gt;@ip:port/path   ubuntu16/
deb [trusted=yes] https://user:pw@mirror.com/mirror ubuntu16/

vim /etc/apt/apt.conf
Acquire::https::mirror.com::Verify-Peer &amp;quot;false&amp;quot;;
Acqhire::https::mirror.com::Verify-Host &amp;quot;false&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;中文输入法&#34;&gt;中文输入法&lt;/h2&gt;
&lt;p&gt;安装一个中文输入法框架fcitx(IBus, SCIM, UIM)：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install fcitx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装一种输入法引擎：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install fcitx-googlepinyin
sudo apt-get install fcitx-sunpinyin
sudo apt-get install fcitx-libpinyin
sudo apt-get install fcitx-sougoupinyin
sudo apt-get install fcitx-cloudpinyin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置程序：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;kcm-fcitx - for qt - &amp;lt;https://github.com/fcitx/kcm-fcitx&amp;gt;
fcitx-configtool - for gtk - &amp;lt;https://github.com/fcitx/fcitx-configtool&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在键盘输入方式系统从ibus改为fcitx，然后重启。&lt;/p&gt;
&lt;h2 id=&#34;dconf修改配置&#34;&gt;dconf修改配置&lt;/h2&gt;
&lt;p&gt;也可以通过系统自带的dconf命令修改．&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install dconf-editor
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;gedit打开txt文件乱码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# org-&amp;gt;gnome-&amp;gt;gedit-&amp;gt;preferences-&amp;gt;encodings-&amp;gt;auto-detected 添加&#39;GB2312&#39;,&#39;GBK&#39;,...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;开启远程桌面无密码登陆&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ dconf write /org/gnome/desktop/remote-access/require-encryption false
or
# org-&amp;gt;gnome-&amp;gt;desktop-&amp;gt;remote-access-&amp;gt;require-encryption false
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;挂载u盘失败&#34;&gt;挂载U盘失败&lt;/h2&gt;
&lt;p&gt;移动硬盘或者u盘不能挂载，删掉/etc/fstab的关于sdb的行，保存后重新插拔。&lt;/p&gt;
&lt;h2 id=&#34;创建桌面图标比如eclipse&#34;&gt;创建桌面图标（比如eclipse）&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;cd /usr/share/applications
sudo vi XXX.desktop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加必要属性后拖到桌面或启动栏即可。&lt;/p&gt;
&lt;h2 id=&#34;安装qq&#34;&gt;安装QQ&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install libgtk2.0-0:i386
sudo apt-get install lib32ncurses5
sudo apt-get install -f
sudo dpkg -i fonts-wqy-microhei_0.2.0-beta-2_all.deb
sudo dpkg -i ttf-wqy-microhei_0.2.0-beta-2_all.deb
sudo dpkg -i wine-qqintl_0.1.3-2_i386.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装文档的包&#34;&gt;安装文档的包&lt;/h2&gt;
&lt;p&gt;手册位于/usr/share/man&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install glibc-doc manpages-dev manpages-posix-dev manpages-zh
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;记录终端操作&#34;&gt;记录终端操作&lt;/h2&gt;
&lt;p&gt;安装相关工具:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install ttyrec
$sudo apt-get install imagemagick
$hg clone https://bitbucket.org/antocuni/tty2gif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;开始记录:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ttyrec
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在终端播放记录文件ttyrecord:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ttyplay ttyrecord
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将ttyrecord文件转化成gif文件:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$tty2gif.py typing ttyrecord
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将多个gif文件合并成一个文件:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$convert -limit memory 2mb -limit map 2mb -delay 2 -loop 0 *.gif example.gif
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;添加用户为管理员&#34;&gt;添加用户为管理员&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ vim /etc/sudoers
user     ALL = (ALL:ALL) ALL
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ubuntu网络设置&#34;&gt;Ubuntu网络设置&lt;/h2&gt;
&lt;p&gt;查看dns：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ systemd-resolve --status
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ubuntu修改hostname:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/hostname
new-hostname
$ sudo vim /etc/hosts
ip-address hostname
$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置系统代理:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vim /etc/profile.d/sys_proxy.sh
http_proxy=&amp;quot;http://proxy-server:port&amp;quot;
https_proxy=&amp;quot;http://proxy-server:port&amp;quot;
ftp_proxy=&amp;quot;http://proxy-server:port&amp;quot;
no_proxy=localhost,127.0.0.1,...
export http_proxy ftp_proxy https_proxy no_proxy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置静态IP:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ifconfig
# 查看网卡，ubuntu14.04 eth0, ubuntu16.04 ens160
$ vim /etc/network/interfaces
auto eth0
iface eth0 inet static
    address 192.168.0.1
    netmask 255.255.255.0
    gateway 192.168.0.0
    dns-nameservers 8.8.8.8
$ sudo service networking restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ubuntu18:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;netplan:
$ sudo vim /etc/netplan/*.yaml

network:
  version: 2
  renderer: networkd
  ethernets:
    ens160:
      dhcp4: no
      addresses: [192.168.1.0/23]
      gateway4: 193.168.0.1
      nameservers:
        addresses: [8.8.8.8]

$ sudo netplan apply
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ubuntu-vlan&#34;&gt;ubuntu vlan&lt;/h2&gt;
&lt;p&gt;vlan需要内核模块8021q&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ echo &amp;quot;8021q&amp;quot; &amp;gt;&amp;gt; /etc/modules

auto vlan1023
iface vlan1023 inet static
    address 18.28.4.123
    netmask 255.255.255.0
    gateway 18.28.4.1
    vlan-raw-device eth0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建vlan&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 创建vlan(eth0.10), attach到interface(eth0)
auto eth0.10
iface eth0.10 inet manual
    vlan-raw-device eth0
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ubuntu-bridge&#34;&gt;ubuntu bridge&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;# 需要绑定到interface才需要配置interface.
auto eth0
iface eth0 inet manual

auto br0
iface br0 inet dhcp
# For static configuration delete or comment out the above line and uncomment the following:
# iface br0 inet static
#  address 192.168.1.10
#  netmask 255.255.255.0
#  gateway 192.168.1.1
#  dns-nameservers 192.168.1.5
#  dns-search example.com
bridge_ports eth0
# 不绑定到interface就是none
# bridge_ports none 
bridge_stp off
bridge_fd 0
bridge_maxwait 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建bridge&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// 创建bridge，attach到vlan.
auto br0
iface br0 inet static
    address 172.16.0.4
    netmask 255.255.240.0
    bridge_ports eth0.10
    bridge_stp off
    bridge_fd 0
    bridge_vlan_aware yes
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;e-sub-process-usrbindpkg-returned-an-error-code-1&#34;&gt;E: Sub-process /usr/bin/dpkg returned an error code (1)&lt;/h2&gt;
&lt;p&gt;method1:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo mkdir -p /var/lib/dpkg/info/package
$ sudo mv /var/lib/dpkg/info/package.* /var/lib/dpkg/info/package
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;method2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get purge package
$ sudo apt-get install package
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;ubuntu安装配置python37&#34;&gt;ubuntu安装配置python3.7&lt;/h2&gt;
&lt;p&gt;ubuntu16.04自带python3.5, ubuntu18.04自带python3.6.&lt;/p&gt;
&lt;p&gt;测试: ubuntu16.04/18.04安装python3.7&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install software-properties-common
$ sudo add-apt-repository ppa:deadsnakes/ppa
$ sudo apt-get update
$ sudo apt-get install python3.7 python3.7-gdbm python3.7-dev

$ sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1
$ sudo update-alternatives --install /usr/bin/python python /usr/bin/python3.7  1
$ sudo update-alternatives --config python
$ sudo update-alternatives --config python3

$ sudo apt-get purge python-pip python3-pip
$ sudo rm -rf /usr/bin/pip* /usr/local/bin/pip* /usr/lib/python3*/dist-packages/pip /usr/local/lib/python3.*/dist-packages/pip

$ sudo apt-get install python3-pip
$ sudo pip3 install -U pip

// ubuntu16.04通过apt-get安装的c-binding包默认还是到python3.5.
// ubuntu18.04 是到python3.6.
#!/usr/bin/env bash
for PKG in `find /usr/lib/python3/dist-packages -name &amp;quot;*.so&amp;quot;`
do
    DIR=`dirname ${PKG}`
    OLD=`basename ${PKG}`
    NEW=`echo ${OLD} | sed &#39;s/35m/37m/g&#39;`
    cp -f ${PKG} ${DIR}/${NEW}
done
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;centosfedoraredhat安装后的基本配置&#34;&gt;Centos/Fedora/Redhat安装后的基本配置&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;$ sudo yum -y install epel-release kernel-devel gcc gcc-c++
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;centos网络配置&#34;&gt;Centos网络配置&lt;/h2&gt;
&lt;p&gt;安装mini版本之后配置网络：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi /etc/sysconfig/network-scripts/ifcfg-enxxx
ONBOOT=no -&amp;gt; yes
# service network restart
$ sudo yum install net-tools
$ ifconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置静态IP:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vim /etc/sysconfig/network-scripts/ifcfg-enxxx
ONBOOT=yes
BOOTPROTO=static # dhcp(自动获取), static(固定IP), node(手动设置)
PREFIX=&amp;quot;21&amp;quot;
IPADDR=&amp;quot;192.168.0.1&amp;quot;
NETMASK=&amp;quot;255.255.255.0&amp;quot;
GATEWAY=&amp;quot;192.168.0.0&amp;quot;
DNS1=&amp;quot;192.168.0.0&amp;quot;
$ sudo nmcli c reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置可以同时访问外网和本地连接的方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 网卡１用于外网连接
# settings -&amp;gt; network -&amp;gt; network card1 -&amp;gt; NAT
$ cat /etc/sysconfig/network-scripts/ifcfg-en01
BOOTPROTO=dhcp # 自动获取ip
ONBOOT=yes
UUID # 通过$ nmcli con show 命令查看
HWADDR # 通过 $ ip addr 命令查看, 这个可以不设置

# 网卡２用于本地局域网
setting -&amp;gt; network-&amp;gt; network card2 -&amp;gt; host-only
# cp /etc/sysconfig/network-scripts/ifcfg-en01 /etc/sysconfig/network-scripts/ifcfg-en02
$ vim /etc/sysconfig/network-scripts/ifcfg-en02
NAME
DEVICE
BOOTPROTO=static
ONBOOT=yes
UUID
HWADDR
IPADDR=192.168.56.102

$ sudo service network restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改hostname,局域网可以根据hostname相互访问：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=new-hostname

$ sudo vim /etc/hostname
new-hostname
$ sudo vim /etc/hosts
ip-address hostname

$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;centos安装增强功能&#34;&gt;centos安装增强功能&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;$ sudo mkdir -p /media/cdrom
$ sudo mount /dev/cdrom /media/cdrom
$ cd /media/cdrom
$ sudo ./VBoxLinuxAdditions.run --nox11
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
    </channel>
</rss>
