<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data on Morgoth</title>
    <link>https://canuxcheng.com/tags/data/</link>
    <description>Recent content in Data on Morgoth</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 2018 10:49:21 +0000</lastBuildDate>
    <atom:link href="https://canuxcheng.com/tags/data/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GSL_data</title>
      <link>https://canuxcheng.com/post/gsl_data/</link>
      <pubDate>Mon, 01 Jan 2018 10:49:21 +0000</pubDate>
      <guid>https://canuxcheng.com/post/gsl_data/</guid>
      <description>&lt;h1 id=&#34;time&#34;&gt;time&lt;/h1&gt;&#xA;&lt;h2 id=&#34;constants&#34;&gt;constants&lt;/h2&gt;&#xA;&lt;p&gt;const:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;const (&#xA;    ANSIC       = &amp;quot;Mon Jan _2 15:04:05 2006&amp;quot;&#xA;    Unixdate    = &amp;quot;Mon Jan _2 15:04:05 MST 2006&amp;quot;&#xA;    RFC3339     = &amp;quot;2006-01-02T15:04:05Z07:00&amp;quot;&#xA;    ...&#xA;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;functions&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 阻塞go程d代表的时间段&#xA;func Sleep(d Duration)&#xA;&#xA;func After(d Duration) &amp;lt;- chan Time&#xA;&#xA;func Tick(d Duration) &amp;lt;- chan Time&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;time-1&#34;&gt;Time&lt;/h2&gt;&#xA;&lt;p&gt;代表一个纳秒精度的时间点.&lt;/p&gt;&#xA;&lt;p&gt;零值是January 1, year 1, 00:00:00.000000000 UTC.&lt;/p&gt;&#xA;&lt;p&gt;struct:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;type  Time struct {}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;functions:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 格式化一个时间, eg:　2009-11-10 15:00:00 -0800 PST&#xA;func date(year int, month Month, day, hour, min, sec, nsec int, loc *Location) Time&#xA;&#xA;// 返回当前本地时间, eg: 2018-03-18 12:16:55.842029 +0800 CST m=+0.001962301&#xA;func Now() Time&#xA;&#xA;func Parse(layout, value s tring) (Time, error)&#xA;&#xA;func ParseInLocation(layout, value string, loc *Location) (Time, error)&#xA;&#xA;func Unix(sec int64, nsec int64) Time&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;methods:&lt;/p&gt;</description>
    </item>
    <item>
      <title>PSL_Data</title>
      <link>https://canuxcheng.com/post/psl_data/</link>
      <pubDate>Sun, 14 Aug 2016 20:57:36 +0000</pubDate>
      <guid>https://canuxcheng.com/post/psl_data/</guid>
      <description>&lt;h1 id=&#34;data-types&#34;&gt;Data Types&lt;/h1&gt;&#xA;&lt;h2 id=&#34;datetime&#34;&gt;datetime&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;import datetime&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;classes:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# datetime.date&#xA;date(year, month, day)&#xA;# methods:&#xA;ctime(...)&#xA;...&#xA;# data descriptors:&#xA;day&#xA;month&#xA;year&#xA;&#xA;# datetime.datetime(datetime.date)&#xA;datetime(year, month, day[, hour[, minute[, second[, microsecond[,tzinfo]]]]])&#xA;# methods:&#xA;datetime.datetime.strptime(string, format)&#xA;format_datetime = datetime.datetime.strptime(&#39;20160824161431&#39;, &#39;%Y%m%d%H%M%S&#39;) # return: datetime.datetime(2016, 8, 24, 16, 14, 31)&#xA;format_datetime = datetime.datetime.strptime(&#39;24 August 2016 16:14:31&#39;, &#39;%Y%m%d%H%M%S&#39;) # return: datetime.datetime(2016, 8, 24, 16, 14, 31)&#xA;&#xA;datetime.datetime.strftime(format[, tuple])&#xA;string_datetime = format_datetime.strftime(&amp;quot;%d %B %Y %H:%M:%S&amp;quot;) # return: &#39;24 August 2016 16:14:31&#39;&#xA;datetime.datetime.now().strftime(&#39;%Y-%m-%d %H:%M:%S&#39;) # return: &#39;2017-02-07 23:07:32&#39;&#xA;&#xA;str(datetime.datetime.now())&#xA;datetime.datetime.now().strftime(&#39;%Y%m%d%H%M%S&#39;) # 当前时间戳&#xA;&#xA;# datetime.time&#xA;&#xA;# datetime.timedelta&#xA;&#xA;# datetime.tzinfo&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;data:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
