<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Morgoth</title>
    <link>https://canuxcheng.com/tags/python/</link>
    <description>Recent content in Python on Morgoth</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 20 Sep 2016 23:14:07 +0000</lastBuildDate>
    <atom:link href="https://canuxcheng.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Django</title>
      <link>https://canuxcheng.com/post/django/</link>
      <pubDate>Tue, 20 Sep 2016 23:14:07 +0000</pubDate>
      <guid>https://canuxcheng.com/post/django/</guid>
      <description>&lt;h1 id=&#34;django&#34;&gt;Django&lt;/h1&gt;&#xA;&lt;p&gt;django是python的web框架。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/django/django&#34;&gt;https://github.com/django/django&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.djangoproject.com/&#34;&gt;https://www.djangoproject.com/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.djangoproject.com/zh-hans/3.1/contents/&#34;&gt;https://docs.djangoproject.com/zh-hans/3.1/contents/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;django遵守MVC设计模式，采用MTV框架。&lt;/p&gt;&#xA;&lt;p&gt;M: model,数据存取&lt;/p&gt;&#xA;&lt;p&gt;T: template，如何展现数据&lt;/p&gt;&#xA;&lt;p&gt;V: view，展现哪些数据&lt;/p&gt;&#xA;&lt;h1 id=&#34;安装&#34;&gt;安装&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.djangoproject.com/zh-hans/3.1/faq/install/#faq-python-version-support&#34;&gt;https://docs.djangoproject.com/zh-hans/3.1/faq/install/#faq-python-version-support&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;django1.11是最后一个支持python2.7的长期支持版(2017.4).&lt;/p&gt;&#xA;&lt;p&gt;django2.0开始只支持python3(2018).&lt;/p&gt;&#xA;&lt;p&gt;本文以django3.1为例创建名为next的project.&lt;/p&gt;&#xA;&lt;p&gt;virtualenv中安装：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$mkdir next&#xA;$cd next&#xA;$virtualenv .venv&#xA;&#xA;# mac/linux&#xA;$source .venv/bin/activate&#xA;&#xA;# windows&#xA;&amp;gt;cd .venv/Scripts&#xA;&amp;gt;activate&#xA;&#xA;$pip install django&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;验证安装：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$python&#xA;&amp;gt;&amp;gt;&amp;gt;import django&#xA;&amp;gt;&amp;gt;&amp;gt;django.VERSION&#xA;&amp;gt;&amp;gt;&amp;gt;django.get_version()&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;安装使用的数据库引擎的库：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo udo apt-get install libmysqlclient-dev&#xA;$ pip install mysqlclient&#xA;&#xA;$pip install psycopg2&#xA;&#xA;$pip install cx_Oracle&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;django默认是mysqlclient，可以使用pymysql替代：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# vim settings.py&#xA;import pymysql&#xA;pymysql.version_info = (1, 4, 13, &amp;quot;final&amp;quot;, 0)&#xA;pymysql.install_as_MySQLdb()&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;project&#34;&gt;project&lt;/h1&gt;&#xA;&lt;p&gt;创建一个名为next的项目&lt;/p&gt;</description>
    </item>
    <item>
      <title>PSL_Python</title>
      <link>https://canuxcheng.com/post/psl_python/</link>
      <pubDate>Mon, 15 Aug 2016 11:04:12 +0000</pubDate>
      <guid>https://canuxcheng.com/post/psl_python/</guid>
      <description>&lt;h1 id=&#34;python-runtime-services&#34;&gt;Python Runtime Services&lt;/h1&gt;&#xA;&lt;h2 id=&#34;_builtin_&#34;&gt;_&lt;em&gt;builtin&lt;/em&gt;_&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;builtin&lt;/strong&gt;/builtins - Built-in functions, exceptions, and other objects.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;python2叫__builtin__&lt;/p&gt;&#xA;&lt;p&gt;python3叫builtins&lt;/p&gt;&#xA;&lt;h2 id=&#34;_main_&#34;&gt;_&lt;em&gt;main&lt;/em&gt;_&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;main&lt;/strong&gt; - Top-level script environment.&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;pre&gt;&lt;code&gt;if __name__ == &amp;quot;__main__&amp;quot;:&#xA;    main()&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;当作为顶层脚本运行时(&lt;strong&gt;main&lt;/strong&gt;), 当作为一个模块运行时候就是模块名称．&lt;/p&gt;&#xA;&lt;h2 id=&#34;_future_&#34;&gt;_&lt;em&gt;future&lt;/em&gt;_&lt;/h2&gt;&#xA;&lt;p&gt;把下一个版本的新特性导入到当前版本。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;from __future__ import &amp;lt;feature_name&amp;gt;&#xA;&#xA;# feature name:&#xA;all_feature_names # 一次导入所有feature&#xA;absolute_import # 绝对导入&#xA;division&#xA;generators&#xA;nested_scopes&#xA;print_function&#xA;unicode_literals # python2中u&#39;string&#39;才表示unicode, &#39;string&#39;表示str，python3中所有字符串都是unicode。&#xA;with_statement&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;data:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;all_feature_names&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;sys&#34;&gt;sys&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;import sys&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Dynamic objects:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 动态对象&#xA;sys.argv # 命令行参数的列表，sys.argv[0]是程序名称, len(sys.argv)就是C语言中的argc&#xA;sys.path # 搜索的路径．import导入模块的搜索路径．&#xA;sys.modules # 字典格式的加载的模块.已经导入并加载的模块会加进来．&#xA;sys.stdin # 标准输入，用于input()&#xA;sys.stdout # 标准输出，用于print&#xA;sys.stderr # 标准出错&#xA;displayhook -- called to show results in an interactive session&#xA;excepthook --&#xA;last_type -- type of last uncaught exception&#xA;last_value -- value of last uncaught exception&#xA;last_traceback --&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Static objects:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python</title>
      <link>https://canuxcheng.com/post/python/</link>
      <pubDate>Tue, 21 Jun 2016 21:18:09 +0000</pubDate>
      <guid>https://canuxcheng.com/post/python/</guid>
      <description>&lt;h1 id=&#34;python概述&#34;&gt;&lt;strong&gt;Python概述&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/2.7/index.html&#34;&gt;https://docs.python.org/2.7/index.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://python.usyiyi.cn/translate/python_278/index.html&#34;&gt;http://python.usyiyi.cn/translate/python_278/index.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/3.5/index.html&#34;&gt;https://docs.python.org/3.5/index.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://python.usyiyi.cn/translate/python_352/index.html&#34;&gt;http://python.usyiyi.cn/translate/python_352/index.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;python是一门优雅而健壮的语言.&lt;/p&gt;&#xA;&lt;p&gt;继承了编译语言(静态语言)的强大性和通用性.&lt;/p&gt;&#xA;&lt;p&gt;同时也借鉴了脚本语言(动态语言)的易用性．&lt;/p&gt;&#xA;&lt;p&gt;python特点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;高级&lt;/li&gt;&#xA;&lt;li&gt;面向对象&lt;/li&gt;&#xA;&lt;li&gt;可升级&lt;/li&gt;&#xA;&lt;li&gt;可扩展&lt;/li&gt;&#xA;&lt;li&gt;可移植性&lt;/li&gt;&#xA;&lt;li&gt;易学&lt;/li&gt;&#xA;&lt;li&gt;易读&lt;/li&gt;&#xA;&lt;li&gt;易维护&lt;/li&gt;&#xA;&lt;li&gt;健壮性&lt;/li&gt;&#xA;&lt;li&gt;高效的快速原型开发工具&lt;/li&gt;&#xA;&lt;li&gt;内存管理器&lt;/li&gt;&#xA;&lt;li&gt;解释性和编译性&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;python基本语法&#34;&gt;&lt;strong&gt;python基本语法&lt;/strong&gt;&lt;/h1&gt;&#xA;&lt;p&gt;python源程序叫xxx.py&lt;/p&gt;&#xA;&lt;p&gt;python中一切皆对象．&lt;/p&gt;&#xA;&lt;p&gt;python大小写敏感．&lt;/p&gt;&#xA;&lt;p&gt;python通过缩进和冒号:区分语法块，而不是大括号{}.&lt;/p&gt;&#xA;&lt;p&gt;python中的表达式(条件/循环表达式等)不需要用小括号()括起来．&lt;/p&gt;&#xA;&lt;p&gt;python标识符(变量，函数，参数，类等)由字母和下划线开头，还可以包含数字．不能是关键字．&lt;/p&gt;&#xA;&lt;p&gt;python不支持方法或函数重载．&lt;/p&gt;&#xA;&lt;p&gt;python不支持char和type类型．&lt;/p&gt;&#xA;&lt;p&gt;python没有switch语句．&lt;/p&gt;&#xA;&lt;p&gt;python支持多继承．&lt;/p&gt;&#xA;&lt;p&gt;python不支持++/&amp;ndash;自增和自减运算符．&lt;/p&gt;&#xA;&lt;p&gt;python支持连续比较，a&amp;lt;b&amp;lt;c.&lt;/p&gt;&#xA;&lt;h2 id=&#34;lexical-analysis&#34;&gt;lexical analysis&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.python.org/2/reference/lexical_analysis.html&#34;&gt;https://docs.python.org/2/reference/lexical_analysis.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;Logical lines and physical lines：&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# python通过行尾的令牌NEWLINE表示逻辑行&#xA;expression&#xA;# 以操作系统的换行符表示物理行．&#xA;\n&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;encoding declarations:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# python脚本中的第一行或第二行的&#xA;coding[=:]\s*([-\w.]+)&#xA;# 注释与正则表达式匹配将被作为编码申明处理．&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;[Deprecated] explicit line joining:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# 多个物理行通过反斜线backslash续行进行显示换行&#xA;# 推荐用隐式换行．&#xA;if a == b \&#xA;       and c ==d: # 只有续行的最后一行可以有注释．反斜线的行不能注释.&#xA;    print(&#39;more than one physical line.&#39;)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;implicit line joining：&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
