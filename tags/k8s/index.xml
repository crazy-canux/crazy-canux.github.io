<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>K8s on Morgoth</title>
    <link>https://canuxcheng.com/tags/k8s/</link>
    <description>Recent content in K8s on Morgoth</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Oct 2023 20:03:39 +0800</lastBuildDate>
    <atom:link href="https://canuxcheng.com/tags/k8s/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Security</title>
      <link>https://canuxcheng.com/post/k8s_security/</link>
      <pubDate>Thu, 19 Oct 2023 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_security/</guid>
      <description>&lt;h1 id=&#34;k8s-security&#34;&gt;K8S Security&lt;/h1&gt;&#xA;&lt;h2 id=&#34;tetragon&#34;&gt;Tetragon&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cilium/tetragon&#34;&gt;https://github.com/cilium/tetragon&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;falco&#34;&gt;Falco&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/falcosecurity/falco&#34;&gt;https://github.com/falcosecurity/falco&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>API Gateway</title>
      <link>https://canuxcheng.com/post/k8s_apigateway/</link>
      <pubDate>Fri, 04 Aug 2023 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_apigateway/</guid>
      <description>&lt;h1 id=&#34;api-gateway&#34;&gt;API Gateway&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/gateway-api&#34;&gt;https://github.com/kubernetes-sigs/gateway-api&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;GatewayClass没有namespace&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;emissary ingress&lt;/li&gt;&#xA;&lt;li&gt;kong&lt;/li&gt;&#xA;&lt;li&gt;higress&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Application</title>
      <link>https://canuxcheng.com/post/cncf_application/</link>
      <pubDate>Sat, 04 Dec 2021 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/cncf_application/</guid>
      <description>&lt;h1 id=&#34;application-definition--image-build&#34;&gt;Application Definition &amp;amp; Image Build&lt;/h1&gt;&#xA;&lt;p&gt;application choreography.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;helm&lt;/li&gt;&#xA;&lt;li&gt;backstage&lt;/li&gt;&#xA;&lt;li&gt;buildpack.io&lt;/li&gt;&#xA;&lt;li&gt;operatorframework&lt;/li&gt;&#xA;&lt;li&gt;dapr&lt;/li&gt;&#xA;&lt;li&gt;kubevela&lt;/li&gt;&#xA;&lt;li&gt;kubevirt&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;backstage&#34;&gt;backstage&lt;/h2&gt;</description>
    </item>
    <item>
      <title>KubeVirt</title>
      <link>https://canuxcheng.com/post/k8s_kubevirt/</link>
      <pubDate>Mon, 10 May 2021 20:55:52 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_kubevirt/</guid>
      <description>&lt;h1 id=&#34;kubevirt&#34;&gt;KubeVirt&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kubevirt.io/quickstart_cloud/&#34;&gt;https://kubevirt.io/quickstart_cloud/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://quay.io/organization/kubevirt&#34;&gt;https://quay.io/organization/kubevirt&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://docs.fedoraproject.org/en-US/quick-docs/using-nested-virtualization-in-kvm/index.html&#34;&gt;https://docs.fedoraproject.org/en-US/quick-docs/using-nested-virtualization-in-kvm/index.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;virtctl&#34;&gt;virtctl&lt;/h2&gt;&#xA;&lt;h2 id=&#34;vm&#34;&gt;VM&lt;/h2&gt;&#xA;&lt;p&gt;创建vm&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apiVersion: kubevirt.io/v1&#xA;kind: VirtualMachine&#xA;metadata:&#xA;name: testvm&#xA;spec:&#xA;running: false&#xA;template:&#xA;    metadata:&#xA;    labels:&#xA;        kubevirt.io/size: small&#xA;        kubevirt.io/domain: testvm&#xA;    spec:&#xA;    domain:&#xA;        devices:&#xA;        disks:&#xA;            - name: containerdisk&#xA;            disk:&#xA;                bus: virtio&#xA;            - name: cloudinitdisk&#xA;            disk:&#xA;                bus: virtio&#xA;        interfaces:&#xA;        - name: default&#xA;            masquerade: {}&#xA;        resources:&#xA;        requests:&#xA;            memory: 64M&#xA;    networks:&#xA;    - name: default&#xA;        pod: {}&#xA;    volumes:&#xA;        - name: containerdisk&#xA;        containerDisk:&#xA;            image: quay.io/kubevirt/cirros-container-disk-demo&#xA;        - name: cloudinitdisk&#xA;        cloudInitNoCloud:&#xA;            userDataBase64: SGkuXG4=&#xA;    nodeSelector:&#xA;        kubernetes.io/arch: arm64&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>K8S CNI</title>
      <link>https://canuxcheng.com/post/k8s_cni/</link>
      <pubDate>Thu, 26 Mar 2020 20:55:52 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_cni/</guid>
      <description>&lt;h1 id=&#34;network-add-ons&#34;&gt;Network add-ons&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/containernetworking&#34;&gt;https://github.com/containernetworking&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;flannel&lt;/li&gt;&#xA;&lt;li&gt;cilium&lt;/li&gt;&#xA;&lt;li&gt;calico&lt;/li&gt;&#xA;&lt;li&gt;vpc-cni (aws)&lt;/li&gt;&#xA;&lt;li&gt;kube-router&lt;/li&gt;&#xA;&lt;li&gt;weavenet&lt;/li&gt;&#xA;&lt;li&gt;antrea&lt;/li&gt;&#xA;&lt;li&gt;romana&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;cilium&#34;&gt;cilium&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cilium/cilium&#34;&gt;https://github.com/cilium/cilium&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;flannel&#34;&gt;Flannel&lt;/h2&gt;&#xA;&lt;p&gt;flannel是k8s最常用的网络插件.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/coreos/flannel&#34;&gt;https://github.com/coreos/flannel&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;在所有node上部署cni-plugin:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/containernetworking/plugins/releases&#34;&gt;https://github.com/containernetworking/plugins/releases&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo mkdir -p /opt/cni/bin&#xA;// 下载并解压所有插件命令到该目录.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;network-addon(master上操作即可):&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;veryfy:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ kubectl get nodes&#xA;$ kubectl get pod --all-namespaces&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;删除插件:&lt;/p&gt;&#xA;&lt;p&gt;删除插件会影响已经部署的pod.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 删除flannel &#xA;$ kubectl delete -f X.yml  &#xA;$ sudo systemctl stop kubelet docker&#xA;&#xA;// 第二步，在node节点清理flannel网络留下的文件&#xA;ifconfig cni0 down&#xA;ip link delete cni0 &#xA;ifconfig flannel.1 down&#xA;ip link delete flannel.1 &#xA;rm -rf /var/lib/cni /etc/cni /run/flannel&#xA;$ sudo rm -rf /var/lib/kubelet /var/lib/etcd&#xA;&#xA;// 重启kubelet&#xA;$ sudo systemctl start kubelet docker&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;修改配置:&lt;/p&gt;</description>
    </item>
    <item>
      <title>K8S CSI</title>
      <link>https://canuxcheng.com/post/k8s_csi/</link>
      <pubDate>Wed, 25 Mar 2020 20:55:52 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_csi/</guid>
      <description>&lt;h1 id=&#34;csi&#34;&gt;CSI&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/container-storage-interface/spec&#34;&gt;https://github.com/container-storage-interface/spec&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;rook&lt;/li&gt;&#xA;&lt;li&gt;cubefs&lt;/li&gt;&#xA;&lt;li&gt;longhorn&lt;/li&gt;&#xA;&lt;li&gt;ceph&lt;/li&gt;&#xA;&lt;li&gt;minio&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;卷volume&#34;&gt;卷Volume&lt;/h2&gt;&#xA;&lt;p&gt;和docker中的一样。&lt;/p&gt;&#xA;&lt;p&gt;volume支持的卷类型有: awsEBS, azureDisk, azureFile, gcePD, secret, configMap, emptyDir, hostPath, local, nfs等.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apiVersion: v1&#xA;kind: Pod&#xA;metadata:&#xA;  name: test-ebs&#xA;spec:&#xA;  containers:&#xA;  - image: k8s.gcr.io/test-webserver&#xA;    name: test-container&#xA;    volumeMounts:&#xA;    - mountPath: /test-ebs&#xA;      name: test-volume&#xA;  volumes:&#xA;  - name: test-volume&#xA;    # 此 AWS EBS 卷必须已经存在&#xA;    awsElasticBlockStore:&#xA;      volumeID: &amp;quot;&amp;lt;volume-id&amp;gt;&amp;quot;&#xA;      fsType: ext4&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;AWS的EBS和EFS需要安装驱动:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/aws-ebs-csi-driver&#34;&gt;https://github.com/kubernetes-sigs/aws-ebs-csi-driver&lt;/a&gt;&#xA;&lt;a href=&#34;https://github.com/kubernetes-sigs/aws-efs-csi-driver&#34;&gt;https://github.com/kubernetes-sigs/aws-efs-csi-driver&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;存储类storageclass&#34;&gt;存储类StorageClass&lt;/h2&gt;&#xA;&lt;p&gt;storageclass没有namespace.&lt;/p&gt;&#xA;&lt;p&gt;每个存储类包含provisioner, parameters和reclaimPolicy.&lt;/p&gt;&#xA;&lt;p&gt;内置provisioner的卷插件:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;awsEBS&lt;/li&gt;&#xA;&lt;li&gt;azureFile&lt;/li&gt;&#xA;&lt;li&gt;azureDisk&lt;/li&gt;&#xA;&lt;li&gt;gcePD&lt;/li&gt;&#xA;&lt;li&gt;openstack cinder&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;没有provisioner的卷类型可以使用外部插件或者自己开发.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner&#34;&gt;https://github.com/kubernetes-sigs/sig-storage-lib-external-provisioner&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>CI/CD</title>
      <link>https://canuxcheng.com/post/k8s_cicd/</link>
      <pubDate>Fri, 10 Jan 2020 20:55:52 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_cicd/</guid>
      <description>&lt;h1 id=&#34;continuous-integration--delivery&#34;&gt;Continuous Integration &amp;amp; Delivery&lt;/h1&gt;&#xA;&lt;h2 id=&#34;argo-cd&#34;&gt;argo-cd&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/argoproj/argo-cd&#34;&gt;https://github.com/argoproj/argo-cd&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;flux-cd&#34;&gt;flux-cd&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/fluxcd/flux&#34;&gt;https://github.com/fluxcd/flux&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>K8S API</title>
      <link>https://canuxcheng.com/post/k8s_api/</link>
      <pubDate>Fri, 10 Jan 2020 20:55:52 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_api/</guid>
      <description>&lt;h1 id=&#34;api&#34;&gt;API&lt;/h1&gt;&#xA;&lt;p&gt;api-server统一的操作入口.&lt;/p&gt;&#xA;&lt;p&gt;kubectl, UI, 等都是通过api-server操作资源.&lt;/p&gt;&#xA;&lt;p&gt;payload可以是json，也可以是yaml.&lt;/p&gt;&#xA;&lt;p&gt;yaml文件中#表示行注释。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;yaml&#34;&gt;yaml&lt;/h1&gt;&#xA;&lt;p&gt;部署k8s可以通过yaml文件来配置资源.&lt;/p&gt;&#xA;&lt;p&gt;资源对象组成部分:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apiVersion: &#xA;kind: &#xA;metadata: 元数据&#xA;spec: 期望的状态&#xA;status: 观测到的状态&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;查看apiVersion:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;kubectl api-versions&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;查看Kind:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;kubectl api-resources&#xA;&#xA;# In a namespace&#xA;kubectl api-resources --namespaced=true&#xA;&#xA;# Not in a namespace&#xA;kubectl api-resources --namespaced=false&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;metadata:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;metadata:&#xA;&#xA;  name:&#xA;  namespace:&#xA;&#xA;  labels/标签: 用户筛选资源，唯一的资源组合方法, 可以使用selector来查询.&#xA;&#xA;  annotations/注解: 存储资源的非标识性信息，扩展资源的spec/status.&#xA;&#xA;  ownerReference/关系: 方便反向查找创建资源的对象，方便进行级联删除。&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;spec:&lt;/p&gt;&#xA;&lt;p&gt;status:&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;调度抢占驱逐&#34;&gt;调度，抢占，驱逐&lt;/h1&gt;&#xA;&lt;p&gt;taints: 污点，使节点排斥特定pod。应用于node。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;taints:&#xA;- effect: NoSchedule&#xA;  key: kubernetes.io/arch&#xA;  value: arm64&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;tolerations: 容忍度，使pod被吸引到特定节点。应用于pod。&#xA;这个只能让pod能部署到加了污点的node，pod也能部署到其它没有加污点的node。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Operator</title>
      <link>https://canuxcheng.com/post/k8s_operator/</link>
      <pubDate>Fri, 10 Jan 2020 20:55:52 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_operator/</guid>
      <description>&lt;h1 id=&#34;operator&#34;&gt;Operator&lt;/h1&gt;&#xA;&lt;p&gt;TPR(Third Party Resource) 在k8s 1.7 被集成，并命名为CRD(Custom Resource Definition).&lt;/p&gt;&#xA;&lt;p&gt;通过CRD，K8S可以动态的添加和管理资源，controller跟踪这些资源。&lt;/p&gt;&#xA;&lt;p&gt;CRD+custom Controller = decalartive API(声明式API),一般分为通用性controller和operator.&lt;/p&gt;&#xA;&lt;p&gt;通用型controller一般用于平台需求，operator一般用于部署特定应用.&lt;/p&gt;&#xA;&lt;p&gt;用于开发operator的工具有kubebuilder和operator-sdk, 他们都是基于controller-runtime开发.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/operator-framework/awesome-operators&#34;&gt;https://github.com/operator-framework/awesome-operators&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://access.redhat.com/documentation/zh-cn/openshift_container_platform/4.2/html/operators/index&#34;&gt;https://access.redhat.com/documentation/zh-cn/openshift_container_platform/4.2/html/operators/index&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://operatorhub.io/&#34;&gt;https://operatorhub.io/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;开发示例:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/sample-controller&#34;&gt;https://github.com/kubernetes/sample-controller&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;operator的build三种模式:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;go&lt;/li&gt;&#xA;&lt;li&gt;ansible&lt;/li&gt;&#xA;&lt;li&gt;helm&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;operator的run三种模式:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在集群外部本地运行（开发测试).&lt;/li&gt;&#xA;&lt;li&gt;作为deployment在集群内部运行.&lt;/li&gt;&#xA;&lt;li&gt;通过OLM部署.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;operator-sdk&#34;&gt;operator-sdk&lt;/h1&gt;&#xA;&lt;p&gt;redhat的operator-sdk可以方便的开发opeartor.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/operator-framework/operator-sdk&#34;&gt;https://github.com/operator-framework/operator-sdk&lt;/a&gt;&#xA;&lt;a href=&#34;https://sdk.operatorframework.io/docs/installation/&#34;&gt;https://sdk.operatorframework.io/docs/installation/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;kubebuilder&#34;&gt;kubebuilder&lt;/h1&gt;&#xA;&lt;p&gt;sig维护的kubebuilder也能方便的开发operator.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/kubebuilder&#34;&gt;https://github.com/kubernetes-sigs/kubebuilder&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Service Discovery</title>
      <link>https://canuxcheng.com/post/k8s_servicediscovery/</link>
      <pubDate>Fri, 10 Jan 2020 20:55:52 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_servicediscovery/</guid>
      <description>&lt;h1 id=&#34;coordination--service-discovery&#34;&gt;Coordination &amp;amp; Service Discovery&lt;/h1&gt;&#xA;&lt;p&gt;微服务的服务注册和服务发现.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;coredns&lt;/li&gt;&#xA;&lt;li&gt;etcd&lt;/li&gt;&#xA;&lt;li&gt;zookeeper&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;etcd&#34;&gt;Etcd&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/etcd-io/etcd&#34;&gt;https://github.com/etcd-io/etcd&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;类似的有consul和zoomkeeper.&lt;/p&gt;&#xA;&lt;h3 id=&#34;etcdctl&#34;&gt;etcdctl&lt;/h3&gt;&#xA;&lt;p&gt;使用证书访问:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ etcdctl \&#xA;--cacert=/etc/kubernetes/pki/etcd/ca.crt \&#xA;--cert=/etc/kubernetes/pki/etcd/server.crt  \&#xA;--key=/etc/kubernetes/pki/etcd/server.key \&#xA;--insecure-skip-tls-verify=true \&#xA;&amp;lt;command&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;查看所有key&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ etcdctl get / --prefix --keys-only&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;zookeeper&#34;&gt;zookeeper&lt;/h2&gt;</description>
    </item>
    <item>
      <title>API Access Control</title>
      <link>https://canuxcheng.com/post/k8s_accesscontrol/</link>
      <pubDate>Sat, 04 Jan 2020 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_accesscontrol/</guid>
      <description>&lt;h1 id=&#34;api-access-control&#34;&gt;API Access Control&lt;/h1&gt;&#xA;&lt;h2 id=&#34;admission-controllers&#34;&gt;Admission Controllers&lt;/h2&gt;&#xA;&lt;h3 id=&#34;mutatingadmissionwebhook&#34;&gt;MutatingAdmissionWebhook&lt;/h3&gt;&#xA;&lt;h3 id=&#34;validatingadmissionwebhook&#34;&gt;ValidatingAdmissionWebhook&lt;/h3&gt;&#xA;&lt;h3 id=&#34;validatingwebhookconfiguration&#34;&gt;ValidatingWebhookConfiguration&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;apiVersion: admissionregistration.k8s.io/v1&#xA;kind: ValidatingWebhookConfiguration&#xA;metadata:&#xA;  annotations:&#xA;    meta.helm.sh/release-name: ingress-nginx-internal&#xA;    meta.helm.sh/release-namespace: ingress-nginx&#xA;  labels:&#xA;    app.kubernetes.io/component: admission-webhook&#xA;    app.kubernetes.io/instance: ingress-nginx-internal&#xA;    app.kubernetes.io/managed-by: Helm&#xA;    app.kubernetes.io/name: ingress-nginx&#xA;    app.kubernetes.io/part-of: ingress-nginx&#xA;    app.kubernetes.io/version: 1.9.1&#xA;    helm.sh/chart: ingress-nginx-4.8.1&#xA;  name: ingress-nginx-internal-admission&#xA;webhooks:&#xA;- admissionReviewVersions:&#xA;  - v1&#xA;  clientConfig:&#xA;    caBundle: &#xA;    service:&#xA;      name: ingress-nginx-internal-controller-admission&#xA;      namespace: ingress-nginx&#xA;      path: /networking/v1/ingresses&#xA;      port: 443&#xA;  failurePolicy: Fail&#xA;  matchPolicy: Equivalent&#xA;  name: validate.nginx.ingress.kubernetes.io&#xA;  namespaceSelector: {}&#xA;  objectSelector: {}&#xA;  rules:&#xA;  - apiGroups:&#xA;    - networking.k8s.io&#xA;    apiVersions:&#xA;    - v1&#xA;    operations:&#xA;    - CREATE&#xA;    - UPDATE&#xA;    resources:&#xA;    - ingresses&#xA;    scope: &#39;*&#39;&#xA;  sideEffects: None&#xA;  timeoutSeconds: 10&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;mutatingwebhookconfiguration&#34;&gt;MutatingWebhookConfiguration&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;apiVersion: admissionregistration.k8s.io/v1&#xA;kind: MutatingWebhookConfiguration&#xA;metadata:&#xA;  annotations:&#xA;    meta.helm.sh/release-name: vault-secrets-webhook&#xA;    meta.helm.sh/release-namespace: vault-secrets-webhook&#xA;  labels:&#xA;    app.kubernetes.io/managed-by: Helm&#xA;  name: vault-secrets-webhook&#xA;webhooks:&#xA;- admissionReviewVersions:&#xA;  - v1beta1&#xA;  clientConfig:&#xA;    caBundle:&#xA;    service:&#xA;      name: vault-secrets-webhook&#xA;      namespace: vault-secrets-webhook&#xA;      path: /pods&#xA;      port: 443&#xA;  failurePolicy: Ignore&#xA;  matchPolicy: Equivalent&#xA;  name: pods.vault-secrets-webhook.admission.banzaicloud.com&#xA;  namespaceSelector:&#xA;    matchExpressions:&#xA;    - key: name&#xA;      operator: NotIn&#xA;      values:&#xA;      - kube-system&#xA;    - key: kubernetes.io/metadata.name&#xA;      operator: NotIn&#xA;      values:&#xA;      - kube-system&#xA;    - key: kubernetes.io/metadata.name&#xA;      operator: NotIn&#xA;      values:&#xA;      - vault-secrets-webhook&#xA;  objectSelector:&#xA;    matchExpressions:&#xA;    - key: security.banzaicloud.io/mutate&#xA;      operator: NotIn&#xA;      values:&#xA;      - skip&#xA;  reinvocationPolicy: Never&#xA;  rules:&#xA;  - apiGroups:&#xA;    - &#39;*&#39;&#xA;    apiVersions:&#xA;    - &#39;*&#39;&#xA;    operations:&#xA;    - CREATE&#xA;    resources:&#xA;    - pods&#xA;    scope: &#39;*&#39;&#xA;  sideEffects: NoneOnDryRun&#xA;  timeoutSeconds: 10&#xA;- admissionReviewVersions:&#xA;  - v1beta1&#xA;  clientConfig:&#xA;    caBundle:&#xA;    service:&#xA;      name: vault-secrets-webhook&#xA;      namespace: vault-secrets-webhook&#xA;      path: /secrets&#xA;      port: 443&#xA;  failurePolicy: Ignore&#xA;  matchPolicy: Equivalent&#xA;  name: secrets.vault-secrets-webhook.admission.banzaicloud.com&#xA;  namespaceSelector:&#xA;    matchExpressions:&#xA;    - key: name&#xA;      operator: NotIn&#xA;      values:&#xA;      - kube-system&#xA;    - key: kubernetes.io/metadata.name&#xA;      operator: NotIn&#xA;      values:&#xA;      - kube-system&#xA;    - key: kubernetes.io/metadata.name&#xA;      operator: NotIn&#xA;      values:&#xA;      - vault-secrets-webhook&#xA;  objectSelector:&#xA;    matchExpressions:&#xA;    - key: owner&#xA;      operator: NotIn&#xA;      values:&#xA;      - helm&#xA;    - key: security.banzaicloud.io/mutate&#xA;      operator: NotIn&#xA;      values:&#xA;      - skip&#xA;  reinvocationPolicy: Never&#xA;  rules:&#xA;  - apiGroups:&#xA;    - &#39;*&#39;&#xA;    apiVersions:&#xA;    - &#39;*&#39;&#xA;    operations:&#xA;    - CREATE&#xA;    - UPDATE&#xA;    resources:&#xA;    - secrets&#xA;    scope: &#39;*&#39;&#xA;  sideEffects: NoneOnDryRun&#xA;  timeoutSeconds: 10&#xA;- admissionReviewVersions:&#xA;  - v1beta1&#xA;  clientConfig:&#xA;    caBundle:&#xA;    service:&#xA;      name: vault-secrets-webhook&#xA;      namespace: vault-secrets-webhook&#xA;      path: /configmaps&#xA;      port: 443&#xA;  failurePolicy: Ignore&#xA;  matchPolicy: Equivalent&#xA;  name: configmaps.vault-secrets-webhook.admission.banzaicloud.com&#xA;  namespaceSelector:&#xA;    matchExpressions:&#xA;    - key: name&#xA;      operator: NotIn&#xA;      values:&#xA;      - kube-system&#xA;    - key: kubernetes.io/metadata.name&#xA;      operator: NotIn&#xA;      values:&#xA;      - kube-system&#xA;    - key: kubernetes.io/metadata.name&#xA;      operator: NotIn&#xA;      values:&#xA;      - vault-secrets-webhook&#xA;  objectSelector:&#xA;    matchExpressions:&#xA;    - key: owner&#xA;      operator: NotIn&#xA;      values:&#xA;      - helm&#xA;    - key: security.banzaicloud.io/mutate&#xA;      operator: NotIn&#xA;      values:&#xA;      - skip&#xA;  reinvocationPolicy: Never&#xA;  rules:&#xA;  - apiGroups:&#xA;    - &#39;*&#39;&#xA;    apiVersions:&#xA;    - &#39;*&#39;&#xA;    operations:&#xA;    - CREATE&#xA;    - UPDATE&#xA;    resources:&#xA;    - configmaps&#xA;    scope: &#39;*&#39;&#xA;  sideEffects: NoneOnDryRun&#xA;  timeoutSeconds: 10&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Automation &amp; Configuration</title>
      <link>https://canuxcheng.com/post/cncf_platform/</link>
      <pubDate>Sat, 04 Jan 2020 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/cncf_platform/</guid>
      <description>&lt;h1 id=&#34;automation--configuration&#34;&gt;Automation &amp;amp; Configuration&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cloud Custodian&lt;/li&gt;&#xA;&lt;li&gt;kubeedge&lt;/li&gt;&#xA;&lt;li&gt;pulumi&lt;/li&gt;&#xA;&lt;li&gt;terraform&lt;/li&gt;&#xA;&lt;li&gt;opentofu&lt;/li&gt;&#xA;&lt;li&gt;kratix&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;platform orchestration.&lt;/p&gt;&#xA;&lt;h2 id=&#34;kratix&#34;&gt;kratix&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Dashboard</title>
      <link>https://canuxcheng.com/post/k8s_dashboard/</link>
      <pubDate>Sat, 04 Jan 2020 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_dashboard/</guid>
      <description>&lt;h1 id=&#34;dashboard-add-ons&#34;&gt;dashboard add-ons&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;kubernetes-dashboard&lt;/li&gt;&#xA;&lt;li&gt;lens&lt;/li&gt;&#xA;&lt;li&gt;octant&lt;/li&gt;&#xA;&lt;li&gt;weave scope&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;kubernetes-dashboard&#34;&gt;kubernetes-dashboard&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/dashboard&#34;&gt;https://github.com/kubernetes/dashboard&lt;/a&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 部署dashboard&#xA;$ kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.2.0/aio/deploy/recommended.yaml&#xA;&#xA;// check&#xA;$ kubectl -n kubernetes-dashboard get pods --watch&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;1&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 删除已安装的dashboard&#xA;$ kubectl delete ns kubernetes-dashboard&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;dashboard-arguments&#34;&gt;dashboard arguments&lt;/h3&gt;&#xA;&lt;p&gt;使用basic auth:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;--enable-skip-login&#xA;--enable-insecure-login&#xA;--system-banner=&amp;quot;Welcome to Kubernetes&amp;quot;&#xA;--authentication-mode=&amp;quot;basic&amp;quot; // 默认是 token 登陆.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;access-control&#34;&gt;access control&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;kubeconfig&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;authorization header&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;token&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;basic&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;username/password login&lt;/p&gt;&#xA;&lt;h3 id=&#34;access-dashboard&#34;&gt;access dashboard&lt;/h3&gt;&#xA;&lt;p&gt;本机访问&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ kubectl proxy&#xA;#&amp;gt; http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;远程访问&lt;/p&gt;&#xA;&lt;p&gt;port-forward:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ kubectl port-forward -n kubernetes-dashboard service/kubernetes-dashboard 8080:443 --address 0.0.0.0&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;nodePort:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Key Management</title>
      <link>https://canuxcheng.com/post/k8s_km/</link>
      <pubDate>Sat, 04 Jan 2020 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_km/</guid>
      <description>&lt;h1 id=&#34;key-management&#34;&gt;Key Management&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;spiffe&lt;/li&gt;&#xA;&lt;li&gt;spire&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Microservivce</title>
      <link>https://canuxcheng.com/post/k8s_microservice/</link>
      <pubDate>Sat, 04 Jan 2020 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_microservice/</guid>
      <description>&lt;h1 id=&#34;microservivce&#34;&gt;Microservivce&lt;/h1&gt;&#xA;&lt;p&gt;微服务是一种架构。&lt;/p&gt;&#xA;&lt;p&gt;常见的架构:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Monolithic application 单体应用.&lt;/li&gt;&#xA;&lt;li&gt;SOA(service-oriented architecture) 面向服务的体系结构.&lt;/li&gt;&#xA;&lt;li&gt;MicroServices 微服务.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;微服务架构的服务治理包括:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;service registry 服务注册&lt;/li&gt;&#xA;&lt;li&gt;service discovery 服务发现&lt;/li&gt;&#xA;&lt;li&gt;observability 可观测性(metrics,logging,trace)&lt;/li&gt;&#xA;&lt;li&gt;流量管理&lt;/li&gt;&#xA;&lt;li&gt;安全&lt;/li&gt;&#xA;&lt;li&gt;控制&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;微服务应用可以通过容器化(docker, k8s)部署，也可以通过serverless方式部署.&lt;/p&gt;&#xA;&lt;p&gt;不同的语言有不同的微服务框架.&#xA;java的dubbo, sprint boot.&#xA;golang的go-kit,  go-zero, kratos.&#xA;python的zappa, nameko.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;dapr&#34;&gt;Dapr&lt;/h2&gt;&#xA;&lt;p&gt;Dapr is a portable, event-driven, runtime for building distributed applications across cloud and edge.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Scheduling &amp; Orchestration</title>
      <link>https://canuxcheng.com/post/cncf_orchestration/</link>
      <pubDate>Sat, 04 Jan 2020 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/cncf_orchestration/</guid>
      <description>&lt;h1 id=&#34;scheduling--orchestration&#34;&gt;Scheduling &amp;amp; Orchestration&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;docker swarm.&lt;/li&gt;&#xA;&lt;li&gt;KEDA&lt;/li&gt;&#xA;&lt;li&gt;Crossplane&lt;/li&gt;&#xA;&lt;li&gt;Knative&lt;/li&gt;&#xA;&lt;li&gt;Kubeflow&lt;/li&gt;&#xA;&lt;li&gt;Volcano&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;crossplane&#34;&gt;Crossplane&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Serverless</title>
      <link>https://canuxcheng.com/post/k8s_serverless/</link>
      <pubDate>Sat, 04 Jan 2020 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_serverless/</guid>
      <description>&lt;h1 id=&#34;serverless&#34;&gt;Serverless&lt;/h1&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;knative&#34;&gt;Knative&lt;/h2&gt;&#xA;&lt;p&gt;Knative is a developer-focused serverless application layer which is a great complement to the existing Kubernetes application constructs. Knative consists of three components: an HTTP-triggered autoscaling container runtime called “Knative Serving”, a CloudEvents-over-HTTP asynchronous routing layer called “Knative Eventing”, and a developer-focused function framework which leverages the Serving and Eventing components, called &amp;ldquo;Knative Functions&amp;rdquo;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Service Mesh</title>
      <link>https://canuxcheng.com/post/k8s_servicemesh/</link>
      <pubDate>Sat, 04 Jan 2020 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_servicemesh/</guid>
      <description>&lt;h1 id=&#34;service-mesh&#34;&gt;Service Mesh&lt;/h1&gt;&#xA;&lt;p&gt;servivce mesh是cncf基于sidecar推出的下一代面向云原生的微服务架构，是微服务基础设施, 用于处理微服务通信、治理、控制、可观测、安全等问题，具备业务无侵入、多语言、热升级等诸多特性.&lt;/p&gt;&#xA;&lt;p&gt;sidecar: 边车模式，就是把业务无关的功能，日志记录、监控、流量控制、服务注册、服务发现、服务限流、服务熔断、鉴权、访问控制和服务调用可视化等独立出来。&lt;/p&gt;&#xA;&lt;p&gt;特点:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;应用程序通信的中间层&lt;/li&gt;&#xA;&lt;li&gt;轻量级网络代理&lt;/li&gt;&#xA;&lt;li&gt;应用程序无感知&lt;/li&gt;&#xA;&lt;li&gt;解耦应用程序的重试、超时、监控、追踪和服务发现.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Service Mesh是建立在物理或者虚拟网络层之上的，基于策略的微服务的流量控制，与一般的网络协议不同的是它有以下几个特点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;开发者驱动&lt;/li&gt;&#xA;&lt;li&gt;可配置策略&lt;/li&gt;&#xA;&lt;li&gt;服务优先的网络配置而不是协议&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;istio&#34;&gt;Istio&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;linkerd&#34;&gt;Linkerd&lt;/h2&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Service Proxy</title>
      <link>https://canuxcheng.com/post/k8s_proxy/</link>
      <pubDate>Sat, 04 Jan 2020 20:03:39 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_proxy/</guid>
      <description>&lt;h1 id=&#34;service-proxy&#34;&gt;Service Proxy&lt;/h1&gt;&#xA;&lt;p&gt;ingress =&amp;gt; gateway api&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;envoy&lt;/li&gt;&#xA;&lt;li&gt;contour&lt;/li&gt;&#xA;&lt;li&gt;traefik proxy&lt;/li&gt;&#xA;&lt;li&gt;haproxy&lt;/li&gt;&#xA;&lt;li&gt;metaLB&lt;/li&gt;&#xA;&lt;li&gt;nginx&lt;/li&gt;&#xA;&lt;li&gt;openelb&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;ingress-controller&#34;&gt;ingress controller&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Ingress-nginx(nginx)&lt;/li&gt;&#xA;&lt;li&gt;aws-load-balancer-controller(alb)&lt;/li&gt;&#xA;&lt;li&gt;ingress-gce&lt;/li&gt;&#xA;&lt;li&gt;Traefik&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The kubernetes.io/ingress.class annotation is deprecated from kubernetes v1.22+.通过IngressClasses来选择ingress controller。&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ingressClassName: nginx&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;ingress 语法&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;apiVersion: networking.k8s.io/v1&#xA;kind: Ingress&#xA;metadata:&#xA;  name: minimal-ingress&#xA;  annotations:&#xA;    nginx.ingress.kubernetes.io/rewrite-target: /&#xA;spec:&#xA;  ingressClassName: nginx-example&#xA;  defaultBackend:&#xA;    resource:&#xA;      apiGroup: k8s.example.com&#xA;      kind: StorageBucket&#xA;      name: static-assets&#xA;  rules:&#xA;  - http:&#xA;      paths:&#xA;      - path: /testpath&#xA;        pathType: Prefix&#xA;        backend:&#xA;          service:&#xA;            name: test&#xA;            port:&#xA;              number: 80&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;ImplementationSpecific：对于这种路径类型，匹配方法取决于 IngressClass。 具体实现可以将其作为单独的 pathType 处理或者与 Prefix 或 Exact 类型作相同处理。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kubeadm</title>
      <link>https://canuxcheng.com/post/k8s_kubeadm/</link>
      <pubDate>Mon, 30 Dec 2019 21:47:17 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_kubeadm/</guid>
      <description>&lt;h1 id=&#34;kubeadm&#34;&gt;kubeadm&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubeadm&#34;&gt;https://github.com/kubernetes/kubeadm&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;kubeadm是k8s自带的部署集群的工具.&lt;/p&gt;&#xA;&lt;h1 id=&#34;install&#34;&gt;Install&lt;/h1&gt;&#xA;&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&#34;&gt;https://kubernetes.io/zh/docs/setup/production-environment/tools/kubeadm/install-kubeadm/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;安装runtime&#34;&gt;安装runtime&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/&#34;&gt;https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;默认的cgroup驱动时cgroupfs,如果系统是systemd，就会有两个cgroup driver，会出问题.&lt;/p&gt;&#xA;&lt;p&gt;如果修改cgroup driver需要同时修改CRI和kubelet.&lt;/p&gt;&#xA;&lt;p&gt;修改containerd的cgroup driver:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo vim /etc/containerd/config.toml&#xA;#disabled_plugins = [&amp;quot;cri&amp;quot;]&#xA;[plugins.&amp;quot;io.containerd.grpc.v1.cri&amp;quot;.containerd.runtimes.runc.options]&#xA;  SystemdCgroup = true&#xA;&#xA;$ sudo systemctl restart containerd&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;修改kubelet的cgroup driver(kubeadm-config.yaml):&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# kubeadm-config.yaml&#xA;kind: ClusterConfiguration&#xA;apiVersion: kubeadm.k8s.io/v1beta3&#xA;kubernetesVersion: v1.21.0    // kubelet --version&#xA;---&#xA;apiVersion: kubelet.config.k8s.io/v1beta1&#xA;kind: KubeletConfiguration&#xA;cgroupDriver: systemd&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;安装kubeadm-kubelet-kubectl&#34;&gt;安装kubeadm, kubelet, kubectl&lt;/h2&gt;&#xA;&lt;p&gt;在每台机器上安装 kubeadm, kubelet, kubectl:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;$ sudo apt-get update&#xA;$ sudo apt-get install -y apt-transport-https ca-certificates curl&#xA;$ sudo curl -fsSL https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add - &#xA;$ echo &amp;quot;deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main&amp;quot; | sudo tee /etc/apt/sources.list.d/kubernetes.list&#xA;$ sudo apt-get update&#xA;$ sudo apt-get --yes --allow-unauthenticated install kubeadm kubelet kubectl&#xA;$ sudo apt-mark hold kubelet kubeadm kubectl&#xA;$ sudo systemctl enable kubelet&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;kubeadm-cli&#34;&gt;Kubeadm CLI&lt;/h1&gt;&#xA;&lt;p&gt;init:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Minikube</title>
      <link>https://canuxcheng.com/post/k8s_minikube/</link>
      <pubDate>Mon, 30 Dec 2019 21:47:17 +0800</pubDate>
      <guid>https://canuxcheng.com/post/k8s_minikube/</guid>
      <description>&lt;h1 id=&#34;minikube&#34;&gt;minikube&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/zh/docs/setup/learning-environment/minikube/&#34;&gt;https://kubernetes.io/zh/docs/setup/learning-environment/minikube/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;minikube 能快速创建k8s的开发集群，支持在虚拟机上创建，也支持裸机创建.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;// 在裸机上创建：&#xA;sudo minikube start --vm-driver=none&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>K8S CRI</title>
      <link>https://canuxcheng.com/post/k8s_cri/</link>
      <pubDate>Wed, 05 Jun 2019 22:02:31 +0000</pubDate>
      <guid>https://canuxcheng.com/post/k8s_cri/</guid>
      <description>&lt;h1 id=&#34;cri&#34;&gt;CRI&lt;/h1&gt;&#xA;&lt;p&gt;CRI: Container Runtime Intarface&lt;/p&gt;&#xA;&lt;p&gt;定义了k8s和container runtime进行交互的接口.&lt;/p&gt;&#xA;&lt;p&gt;是k8s与container交互的标准.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/&#34;&gt;https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;containerd&lt;/li&gt;&#xA;&lt;li&gt;cri-o&lt;/li&gt;&#xA;&lt;li&gt;rkt&lt;/li&gt;&#xA;&lt;li&gt;kata&lt;/li&gt;&#xA;&lt;li&gt;rancher&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;docker&#34;&gt;docker&lt;/h2&gt;&#xA;&lt;p&gt;k8s_1.20 开始警告不再支持docker.&lt;/p&gt;&#xA;&lt;p&gt;k8s_1.23 开始移除dockershim.&lt;/p&gt;&#xA;&lt;p&gt;/var/run/dockerhsim.sock&lt;/p&gt;&#xA;&lt;h2 id=&#34;containerd&#34;&gt;containerd&lt;/h2&gt;&#xA;&lt;p&gt;/run/container/containerd.sock&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/containerd/containerd&#34;&gt;https://github.com/containerd/containerd&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;安装配置:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#containerd&#34;&gt;https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#containerd&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;cri-o&#34;&gt;CRI-O&lt;/h2&gt;&#xA;&lt;p&gt;redhat.&lt;/p&gt;&#xA;&lt;p&gt;/var/run/crio/crio.sock&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/cri-o/cri-o&#34;&gt;https://github.com/cri-o/cri-o&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;kata&#34;&gt;kata&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kata-containers/runtime&#34;&gt;https://github.com/kata-containers/runtime&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;rkt&#34;&gt;rkt&lt;/h2&gt;&#xA;&lt;p&gt;redhat(coreos)&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/rkt/rkt&#34;&gt;https://github.com/rkt/rkt&lt;/a&gt;&lt;/p&gt;&#xA;&lt;hr&gt;</description>
    </item>
    <item>
      <title>Kubernetes</title>
      <link>https://canuxcheng.com/post/kubernetes/</link>
      <pubDate>Thu, 05 Apr 2018 22:02:31 +0000</pubDate>
      <guid>https://canuxcheng.com/post/kubernetes/</guid>
      <description>&lt;h1 id=&#34;kubernetes&#34;&gt;Kubernetes&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubernetes&#34;&gt;https://github.com/kubernetes/kubernetes&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kubeadm&#34;&gt;https://github.com/kubernetes/kubeadm&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes/kops&#34;&gt;https://github.com/kubernetes/kops&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/kubernetes-sigs/kubespray&#34;&gt;https://github.com/kubernetes-sigs/kubespray&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;kubernetes简称k8s, 是开源的容器编排工具。&lt;/p&gt;&#xA;&lt;p&gt;安装单机版k8s:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;minikube&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;安装k8s集群:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;kubeadm (k8s内置的，类似于docker swarm mode, 没有HA)&lt;/li&gt;&#xA;&lt;li&gt;kops (目前主要支持aws等云平台, 国内不友好)&lt;/li&gt;&#xA;&lt;li&gt;kubespray (通过ansible部署, 国内不友好)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;k8s发行版：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;openshift-okd(redhat)&lt;/li&gt;&#xA;&lt;li&gt;rancher&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;k8s集群组成&#34;&gt;k8s集群组成&lt;/h1&gt;&#xA;&lt;h2 id=&#34;master&#34;&gt;master&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;aip-server, 提供资源操作唯一入口&lt;/li&gt;&#xA;&lt;li&gt;scheduler, 负责资源调度&lt;/li&gt;&#xA;&lt;li&gt;controller-manager, 负责维护集群状态&lt;/li&gt;&#xA;&lt;li&gt;etcd(可以部署单独集群), 保存整个集群的状态&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;node&#34;&gt;node&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;kubelet, 负责维护容器生命周期, 还包括CNI CVI&lt;/li&gt;&#xA;&lt;li&gt;kube-proxy, 为service提供cluster内部的服务发现和负载均衡&lt;/li&gt;&#xA;&lt;li&gt;CRI(containerd), 创建pod&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;addons&#34;&gt;addons&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;coredns&lt;/li&gt;&#xA;&lt;li&gt;flannel/cilium/calico&lt;/li&gt;&#xA;&lt;li&gt;dashboard, web-gui&lt;/li&gt;&#xA;&lt;li&gt;metrics-server, 取代heapster，用于cpu/memory监控&lt;/li&gt;&#xA;&lt;li&gt;ingress-nginx, 为服务提供外网入口&lt;/li&gt;&#xA;&lt;li&gt;federation, 提供跨可用区的集群&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;概念&#34;&gt;概念&lt;/h1&gt;&#xA;&lt;p&gt;k8s包含的重要概念:&lt;/p&gt;&#xA;&lt;p&gt;-: nodes, 运行pod的物理机或虚拟机.&#xA;-: namespace, 对资源和对象的抽象集合．pods/deployments/services都属于某个ns.&#xA;-: pods,一组紧密关联的容器集合，共享pid,ipc,network,uts,namespace.&lt;/p&gt;&#xA;&lt;p&gt;k8s业务类型:&lt;/p&gt;&#xA;&lt;p&gt;-: long-running 长期伺服型 -&amp;gt; RC, RS, Deployment&#xA;-: batch 批处理型-&amp;gt; Job&#xA;-: node-daemon 节点后台支撑型-&amp;gt; DaemonSet&#xA;-: stateful application 有状态应用型-&amp;gt; StatefulSet&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
