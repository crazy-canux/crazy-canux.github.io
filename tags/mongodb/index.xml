<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Mongodb on Morgoth</title>
        <link>https://canuxcheng.com/tags/mongodb/</link>
        <description>Recent content in Mongodb on Morgoth</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sun, 16 Apr 2017 14:46:14 +0000</lastBuildDate><atom:link href="https://canuxcheng.com/tags/mongodb/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>MongoDB</title>
        <link>https://canuxcheng.com/post/mongodb/</link>
        <pubDate>Sun, 16 Apr 2017 14:46:14 +0000</pubDate>
        
        <guid>https://canuxcheng.com/post/mongodb/</guid>
        <description>&lt;h1 id=&#34;mongodb&#34;&gt;MongoDB&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mongodb/mongo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/mongodb/mongo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;mongodb是一种开源的文档数据库，高性能，高可用性，自动裁剪．&lt;/p&gt;
&lt;p&gt;mongodb的database和关系数据库中的database一样．&lt;/p&gt;
&lt;p&gt;mongodb将BSON(mongo的JSON)文档存储在集合(collections)中，集合相当于关系数据库中的表table．&lt;/p&gt;
&lt;p&gt;mongodb的collections中的域(field)，相当于关系数据库中的字段column.&lt;/p&gt;
&lt;p&gt;mongodb的collections中的文档(document)，相当于关系数据库中的记录行row.&lt;/p&gt;
&lt;p&gt;mongodb也支持index索引和primary key主键，但是不支持table joins表连接．&lt;/p&gt;
&lt;p&gt;ubuntu安装:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv0C49F3730359A14518585931BC711F9BA15703C6
$ echo &amp;quot;deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.4multiverse&amp;quot; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list
$ sudo apt-get update
$ sudo apt-get install -y mongodb-org
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ubuntu启动:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo service mongod start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成默认的数据库是test.另外db, admin, local是保留的数据库名称．&lt;/p&gt;
&lt;p&gt;mongod的默认端口是27017.&lt;/p&gt;
&lt;p&gt;mongo web-gui:&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/Studio3T/robomongo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/Studio3T/robomongo&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;mongo的命令&#34;&gt;mongo的命令&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;mongo [options] [db address] [file names (ending in .js)]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;mongo shell进入到指定数据库:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mongo [db_name]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;本地命令行执行sql语句：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mongo [database] -e/--eval [javascript]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;远程执行sql语句:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mongo -u [username] -p [password] [ip]:[port]/[datbase] -e/--eval [javascript]
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;cli&#34;&gt;CLI&lt;/h1&gt;
&lt;p&gt;先用mongo命令进入mongo命令行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;help    # 查看所有命令
exit    # 退出mongo shell

db    # 显示当前数据库
use &amp;lt;db_name&amp;gt;    # 切换到指定数据库, 不存在则创建．
show dbs    # 查看所有数据库
show collections # 查看当前database的collections
show users
show profile
show logs
show log [name]

sh.help()

rs.help()

db.help() # 查看所有database的方法
db.hostInfo()
db.serverStatus()

db.mycoll.help() # 查看所有collections的方法
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;数据类型&#34;&gt;数据类型&lt;/h1&gt;
&lt;hr&gt;
&lt;h1 id=&#34;curd&#34;&gt;CURD&lt;/h1&gt;
&lt;p&gt;mongo的CURD操作就相当于关系数据库中的sql操作．&lt;/p&gt;
&lt;p&gt;CURD: create update read delete.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; use &amp;lt;database_name&amp;gt; # 切换/创建数据库
&amp;gt; db.createCollection(collection_name) # 在当前数据库创建集合
&amp;gt; db.dropDatabase() # 删除当前数据库
&amp;gt; db.getCollectionNames() # 获取当前数据库的所有集合

&amp;gt; db.mycoll.insert(obj) #　往集合mycollection中插入JSON对象obj.
&amp;gt; db.mycoll.find([query],[fields]) # 查询文档
&amp;gt; db.mycoll.remove(query) # 删除文档
&amp;gt; db.mycoll.save(obj) # 替换已有的文档
&amp;gt; db.mycoll.update( query, object[, upsert_bool, multi_bool] ) # 更新已有的文档
&amp;gt; db.mycoll.drop() # 删除当前集合

# 释放内存
&amp;gt; use admin
&amp;gt; db.runCommand({closeAllDatabases:1})
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h1&gt;
&lt;p&gt;通过mongo&amp;gt; serverStatus()查看&lt;/p&gt;
&lt;p&gt;其它指标参考grafana dashboard.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
