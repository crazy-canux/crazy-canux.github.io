<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Esxi on Morgoth</title>
        <link>https://canuxcheng.com/tags/esxi/</link>
        <description>Recent content in Esxi on Morgoth</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Tue, 05 Apr 2016 21:47:54 +0000</lastBuildDate><atom:link href="https://canuxcheng.com/tags/esxi/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Esxi</title>
        <link>https://canuxcheng.com/post/esxi/</link>
        <pubDate>Tue, 05 Apr 2016 21:47:54 +0000</pubDate>
        
        <guid>https://canuxcheng.com/post/esxi/</guid>
        <description>&lt;h1 id=&#34;vmware&#34;&gt;VMware&lt;/h1&gt;
&lt;p&gt;vSphere是vmware的虚拟化平台,包括ESXi和vSphere Client.&lt;/p&gt;
&lt;p&gt;vSphere Hypervisor(也叫ESXi)是vSphere的免费裸机hypervisor. 把物理机虚拟出多个虚拟机．&lt;/p&gt;
&lt;p&gt;vSphere client是vSphere的简单管理工具．只能管理一台ESXi物理机和上面的虚拟机．&lt;/p&gt;
&lt;p&gt;vCenter Server是vSphere的高级管理系统．需单独购买．&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;配置管理&#34;&gt;配置管理&lt;/h1&gt;
&lt;p&gt;开启虚拟机copy/paste功能：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 通过vsphere client
edit properties -&amp;gt; Options -&amp;gt; Advanced -&amp;gt; General -&amp;gt; configuration Parameters
# isolation.tools.copy.disable    false
# isolation.tools.paste.disable    false
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;开启虚拟机的虚拟化功能：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 通过ssh到esxi服务器
$ vim /vmfs/volumes/datastore1/Ubuntu1604/Ubuntu1604.vmx
vhv.enable = &amp;quot;TRUE&amp;quot; # 添加到最后一行
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建的vm命名不能带小数点.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;命令&#34;&gt;命令&lt;/h1&gt;
&lt;p&gt;vim-cmd:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vim-cmd vmsvc/getallvms # 获取所有虚拟机
vim-cmd vmsvc/reload
vim-cmd vmsvc/power.on vmid
vim-cmd vmsvc/power.shutdown vimid
vim-cmd vmsvc/power.off vimid
vim-cmd vmsvc/power.reboot vimid

# power on all vms
for vm in `vim-cmd vmsvc/getallvms | awk &#39;{if (NR&amp;gt;1) {print $1}}&#39;`;
do
    echo &amp;quot;power on ${vm}...&amp;quot;;
    vim-cmd vmsvc/power.on ${vm}
done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;esxcli:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;esxcli vm process list # 查看所有运行的vm
esxcli vm process kill --type=[force/soft/hard] --world-id=&amp;lt;world-id&amp;gt; # 关机
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;esxtop:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 类似于linux的top命令
esxtop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;vscsiStats:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vscsiStats -l
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;python&#34;&gt;python&lt;/h1&gt;
&lt;p&gt;pyVmomi is the Python SDK for the VMware vSphere API that allows you to manage ESX, ESXi, and vCenter.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/vmware/pyvmomi&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/vmware/pyvmomi&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install pyvmomi

from pyVmomi import vim
from pyVim import connect
si = connect.SmartConnect(host=&#39;hostname&#39;, user=&#39;username&#39;, pwd=&#39;password&#39;, port=&#39;port&#39;)

def find_vm(si, name):
    ct = si.content
    ov = ct.viewManager.CreatecontainerView(ct.rootFolder, [vim.VirtualMachine], true)
    vm_list = ov.view
    for vm in vm_list:
        if vm.name == &amp;quot;vmname&amp;quot;:
            return vm
    return None
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
</description>
        </item>
        
    </channel>
</rss>
