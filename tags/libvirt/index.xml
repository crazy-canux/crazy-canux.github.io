<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Libvirt on Morgoth</title>
        <link>https://canuxcheng.com/tags/libvirt/</link>
        <description>Recent content in Libvirt on Morgoth</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Wed, 05 Apr 2017 21:47:54 +0000</lastBuildDate><atom:link href="https://canuxcheng.com/tags/libvirt/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Libvirt</title>
        <link>https://canuxcheng.com/post/libvirt/</link>
        <pubDate>Wed, 05 Apr 2017 21:47:54 +0000</pubDate>
        
        <guid>https://canuxcheng.com/post/libvirt/</guid>
        <description>&lt;h1 id=&#34;libvirt&#34;&gt;Libvirt&lt;/h1&gt;
&lt;p&gt;支持多种虚拟化平台的库&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://libvirt.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://libvirt.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install libvirt-bin (包含virsh命令和libvirtd daemon)
// libvirtd在container中无法运行；在container中安装libvirt-bin可以获取virsh命令远程访问libvirt-bin server.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;libvirt-bin拆分成了两个包：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;libvirt-daemon-system
libvirt-clients

$ sudo apt-get install libvirt-dev # 库, python/go client依赖该库

$ sudo apt-get install virt-manager # windows管理工具

$ sudo apt-get install virt-view # ...

$ sudo service libvirt-bin restart
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;virsh&#34;&gt;virsh&lt;/h1&gt;
&lt;p&gt;libvirt的命令行工具&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ virsh list --all    # 查看所有虚拟机
$ virsh list --all --name # 只看domain name.

$ virsh define /path/to/X.xml    # 从xml配置文件定义一个domain
$ virsh start     # 启动虚拟机
$ virsh reboot    # 重启虚拟机
$ virsh shutdown   # 关闭虚拟机
$ virsh destroy    # 强制关闭虚拟机
$ virsh undefine   # 移除虚拟机
$ virsh vncdisplay # 查看虚拟机的vnc信息，可以通过vnc访问.

$ virsh net-list --all # 查看所有网络
$ virsh net-define default.xml
$ virsh net-autostart default
$ virsh net-start default
$ virsh net-undefine default
$ virsh net-destroy default

# 批量操作vm
$ for vm in `virsh list --all --name`; do virsh undefine/destroy ${vm}; done
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;qemu-img&#34;&gt;qemu-img&lt;/h1&gt;
&lt;p&gt;创建虚拟机的镜像文件:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ qemu-img create -f qcow2 /path/to/name.qcow2 100G
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;libvirt-qemu&#34;&gt;libvirt-qemu&lt;/h1&gt;
&lt;p&gt;libvirt操作qemu/kvm.&lt;/p&gt;
&lt;p&gt;本地:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qemu:///system
qemu:///session
qemu+unix:///system
qemu+unix:///session
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ssh远程:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# libvirt-bin server上需要安装nc和libvirt-bin
$ sudo apt-get install netcat-openbsd
$ sudo update-alternatives --config nc // netcat-traditional避免使用默认安装

# ssh用户需要在libvirt和kvm组里
$ adduser username libvirtd
$ adduser username kvm

$ sudo apt-get install sshpass // 免密码访问

# client上需要安装openssh-clients
$ sshpass -p password virsh -c qemu+ssh://user@127.0.0.1/system list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;tcp远程:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vim /etc/libvirt/libvirtd.conf:
listen_tls = 0　　　　　　　　　 #禁用tls登录
listen_tcp = 1　　　　　　　　　 #启用tcp方式登录
tcp_port = &amp;quot;16509&amp;quot;　　　　　　　 #tcp端口16509
listen_addr = &amp;quot;0.0.0.0&amp;quot;         # 允许任意ip访问
auth_tcp = &amp;quot;none&amp;quot;　　　　　　    #TCP不使用认证

$ vim /etc/default/libvirt-bin
start_libvirtd=&amp;quot;yes&amp;quot;
libvirtd_opts=&amp;quot;-l --config /etc/libvirt/libvirtd.conf&amp;quot;

$ sudo service libvirt-bin restart

$ virsh -c qemu+tcp://127.0.0.1:16509/system list
&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;libvirtd配置&#34;&gt;libvirtd配置&lt;/h1&gt;
&lt;p&gt;配置libvirtd：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vim /etc/libvirt/libvirtd.conf

max_clients = 1024　　　　　　   #最大总的连接客户数1024
min_workers = 50　　　　　　    #libvirtd启动时，初始的工作线程数目
max_workers = 200　　　　　　 #同上，最大数目
max_requests = 1000　　　　　
#最大同时支持的RPC调用，必须大于等于max_workers
max_client_requests = 200　　 #每个客户端支持的最大连接数
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
    </channel>
</rss>
