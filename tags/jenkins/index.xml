<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Jenkins on Morgoth</title>
        <link>https://canuxcheng.com/tags/jenkins/</link>
        <description>Recent content in Jenkins on Morgoth</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Fri, 15 Apr 2016 09:41:39 +0000</lastBuildDate><atom:link href="https://canuxcheng.com/tags/jenkins/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Jenkins</title>
        <link>https://canuxcheng.com/post/devops_jenkins/</link>
        <pubDate>Fri, 15 Apr 2016 09:41:39 +0000</pubDate>
        
        <guid>https://canuxcheng.com/post/devops_jenkins/</guid>
        <description>&lt;h1 id=&#34;jenkins&#34;&gt;Jenkins&lt;/h1&gt;
&lt;p&gt;Jenkins is a self-contained, open source automation server which can be used to automate all sorts of tasks such as building, testing, and deploying software.&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/jenkinsci/jenkins&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jenkinsci/jenkins&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装好Jenkins后安装需要的插件．&lt;/p&gt;
&lt;p&gt;安装jenkins:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# download jenkins.war and install java8.
$ java -jar jenkins.war --httpPort=8080
$ firefox http://localhost:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置开机自动启动，不用每次从终端启动:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vim /etc/systemd/system/jenkins.service
$ systemctl daemon-reload
$ systemctl enable jenkins.service
$ systemctl start jenkins
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;jinkens主目录:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 默认主目录在/home/canux/.jenkins
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;nodes&#34;&gt;nodes&lt;/h1&gt;
&lt;p&gt;添加节点需要安装和master版本一样的java.&lt;/p&gt;
&lt;p&gt;on jenkins agent:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;install java.&lt;/li&gt;
&lt;li&gt;create folder and grant permission. (/home/jenkins)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;on jenkins:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;create credential and node.&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;plugins&#34;&gt;plugins&lt;/h1&gt;
&lt;h2 id=&#34;thinbackup&#34;&gt;thinbackup&lt;/h2&gt;
&lt;p&gt;备份插件，主要备份jenkins主目录.&lt;/p&gt;
&lt;h2 id=&#34;pipeline&#34;&gt;pipeline&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/jenkinsci/pipeline-plugin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jenkinsci/pipeline-plugin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用pipeline需要先安装pipeline插件.&lt;/p&gt;
&lt;p&gt;pipeline是groovy语法的jenkins的DSL.&lt;/p&gt;
&lt;h2 id=&#34;blueocean&#34;&gt;blueocean&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/jenkinsci/blueocean-plugin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jenkinsci/blueocean-plugin&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;git-plugin&#34;&gt;git plugin&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/jenkinsci/git-plugin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jenkinsci/git-plugin&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;docker-plugin&#34;&gt;docker plugin&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/jenkinsci/docker-workflow-plugin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jenkinsci/docker-workflow-plugin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.cloudbees.com/docs/admin-resources/latest/plugins/docker-workflow&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://docs.cloudbees.com/docs/admin-resources/latest/plugins/docker-workflow&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;k8s&#34;&gt;k8s&lt;/h1&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/jenkinsci/kubernetes-plugin&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jenkinsci/kubernetes-plugin&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;docker&#34;&gt;docker&lt;/h1&gt;
&lt;p&gt;在docker上执行流水线&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;agent {
    docker {
        image &#39;maven:3-alpine&#39;
        label &#39;my-defined-label&#39;
        args  &#39;-v /tmp:/tmp&#39;
    }
}

agent {
    // Equivalent to &amp;quot;docker build -f Dockerfile.build --build-arg version=1.0.2 ./build/
    dockerfile {
        filename &#39;Dockerfile.build&#39;
        dir &#39;build&#39;
        label &#39;my-defined-label&#39;
        additionalBuildArgs  &#39;--build-arg version=1.0.2&#39;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
    </channel>
</rss>
