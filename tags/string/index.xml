<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>String on Morgoth</title>
    <link>https://canuxcheng.com/tags/string/</link>
    <description>Recent content in String on Morgoth</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 2018 10:49:21 +0000</lastBuildDate>
    <atom:link href="https://canuxcheng.com/tags/string/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GSL_string</title>
      <link>https://canuxcheng.com/post/gsl_string/</link>
      <pubDate>Mon, 01 Jan 2018 10:49:21 +0000</pubDate>
      <guid>https://canuxcheng.com/post/gsl_string/</guid>
      <description>&lt;h1 id=&#34;strings&#34;&gt;strings&lt;/h1&gt;&#xA;&lt;p&gt;实现了用于操作字符的函数.&lt;/p&gt;&#xA;&lt;h2 id=&#34;functions&#34;&gt;functions&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;func EqualFold(s, t string) bool&#xA;&#xA;func HasPrefix(s, prefix string) bool&#xA;func HasSuffix(s, suffix string) bool&#xA;&#xA;func Count(s, sep string) int&#xA;&#xA;func Contains(s, substr string) bool&#xA;...&#xA;&#xA;func Index(s, sep string) int&#xA;...&#xA;&#xA;func LastIndex(s, sep string) int&#xA;...&#xA;&#xA;func title(s string) string&#xA;&#xA;func ToLower(s string) string&#xA;...&#xA;&#xA;// 返回count个string&#xA;func Repeat(s string, count int) string&#xA;&#xA;func Replace(s, old, new string, n int) string&#xA;&#xA;func Map(mapping func(rune) rune, s string) string&#xA;&#xA;func Trim(s string, cutset string) string&#xA;...&#xA;&#xA;// 返回将字符串按照空白分割的多个字符串&#xA;func Fields(s string) []string&#xA;// 按照f作为分隔符来分割字符串，返回切片&#xA;func FieldsFunc(s string, f func(rune) bool) []string&#xA;&#xA;func Split(s, sep string) []string&#xA;...&#xA;&#xA;// 将一系列字符串连接为一个字符串，之间用sep来分割.&#xA;func Join(a []string, sep string) string&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;reader&#34;&gt;Reader&lt;/h2&gt;&#xA;&lt;h2 id=&#34;replacer&#34;&gt;Replacer&lt;/h2&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 id=&#34;bytes&#34;&gt;bytes&lt;/h1&gt;&#xA;&lt;p&gt;实现了操作[]bytes的常用函数.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PSL_String</title>
      <link>https://canuxcheng.com/post/psl_string/</link>
      <pubDate>Fri, 12 Aug 2016 16:49:07 +0000</pubDate>
      <guid>https://canuxcheng.com/post/psl_string/</guid>
      <description>&lt;h1 id=&#34;text-processing-services&#34;&gt;Text Processing Services&lt;/h1&gt;&#xA;&lt;h2 id=&#34;string&#34;&gt;string&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;import string&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;classes:&lt;/p&gt;&#xA;&lt;p&gt;functions:&lt;/p&gt;&#xA;&lt;p&gt;data:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;ascii_letters&#xA;ascii_lowercase&#xA;ascii_uppercase&#xA;digits&#xA;...&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h2 id=&#34;re&#34;&gt;re&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;import re&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;classes:&lt;/p&gt;&#xA;&lt;p&gt;functions:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;compile(pattern, flags=0)&#xA;escape(pattern)&#xA;findall(pattern, string, flags=0)&#xA;finditer(pattern, string, flags=0)&#xA;match(pattern, string, flags=0) # if not match, return None, else return object.&#xA;search(pattern, string, flags=0)&#xA;purge()&#xA;split(pattern, string, maxsplit=0, flags=0) # 根据pattern分割string,返回分割后的列表．&#xA;sub(pattern, repl, string, count=0, flags=0)&#xA;subn(pattern, repl, string, count=0, flags=0)&#xA;template(pattern, flags=0)&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;data:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;# flags:&#xA;IGNORECASE # 大小写不敏感&#xA;LOCALE&#xA;MULTILINE&#xA;DOTALL&#xA;VERBOSE&#xA;UNICODE&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;modules:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
