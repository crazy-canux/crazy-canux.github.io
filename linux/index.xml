<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linuxes on Canux&#39;s Blog</title>
    <link>http://canuxcheng.com/linux/</link>
    <description>Recent content in Linuxes on Canux&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="http://canuxcheng.com/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/admin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/admin/</guid>
      <description>Title: Admin Date: 2016-04-03 14:04:05 Tags: Linux, Ubuntu, CentOS, Suse
Linux Admin dpkg: ubuntu, debian.
rpm: fedora, centos, redhat.
zypper: suse.
Linux系统常用的安装和配置 virtualbox 开机自动挂载共享文件夹
1 2 3 4 5 6  # 手动挂在命令, 需要安装增强功能 $ mount -t vboxsf FolderNameOnWindows /path/on/linux # 实现开机自动挂载 $ sudo vim /etc/rc.local mount.vboxsf -w ShareFolderNameOnWindows MountPointOnLinux   xrdp 从windows的RDP远程连接linux.
use RDP on windows to connect to ubuntu16.04.
1 2 3 4  sudo dpkg -i tigervncserver_1.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/builtins/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/builtins/</guid>
      <description> Title: Shell Builtins Date: 2016-03-31 21:51:03 Tags: Linux, Shell, Builtins, Bash, Zsh, Fish
Linux内置命令 内置命令在bash/builtins目录中
shell命令分为内置命令和外部命令.
查看一个命令是内置命令还是外部命令：
1 2 3  type -a [command] 提示&amp;#34;[command] is a shell builtin&amp;#34;就表示是内置命令，否则就是外部命令。   查看所有内置命令：
1 2  help enable -a   查看内置命令的帮助：
1  help [command]   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59  type enable help alias bg bind break builtin caller cd command compgen complete compopt continue declare dirs disown echo eval exec exit export false fc fg getopts hash history jobs kill let local logout mapfile popd printf pushd pwd read readarray readonly return set shift shopt source suspend test times trap true typeset ulimit umask unalias unset wait  </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/coreutils/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/coreutils/</guid>
      <description>Title: Shell Coreutils Date: 2016-03-31 21:51:25 Tags: Linux, Shell, Coreutils, Bash, Zsh, Fish
Linux的外部命令 Linux外部命令的项目是coreutils。
外部命令在coreutils目录中
查看外部命令所在目录：
1  echo $PATH   外部命令在下列目录中：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17  ~/bin # 用户自定义 /sbin /bin /usr/sbin /usr/bin /usr/local/sbin /usr/local/bin /usr/games /usr/local/games   查看外部命令手册的在线手册：
1 2  man [command] info [command]   自定义外部命令：
添加\$PATH变量，然后放到该目录。
系统管理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58  # 查看cpu/mem/swap/system信息 vmstat # 查看进程消耗的cpu/mem/swap/system等系统信息 top top -H # 查看线程 %cpu = cputime/realtime * 100% cpu_usage = %cpu/cpu-number %mem = RES/physicalMem * 100% htop $ sudo apt-get install htop uname # 打印linux系统信息 $ uname -a cat /etc/issue cat /proc/version uptime lsb_release # 查看发行版本信息 $ lsb_release -a getconf # 查询系统配置的变量，LONG_BIT表示系统位数 lscpu # 显示cpu架构的信息 cat /proc/cpuinfo # 查看cpu信息 cat /proc/cpuinfo | grep &amp;#34;processor&amp;#34; | wc -l # 逻辑cpu总数 cat /proc/cpuinfo | grep &amp;#34;physical id&amp;#34; | sort | uniq | wc -l # 物理cpu个数 cat /proc/cpuinfo | grep &amp;#34;cpu cores&amp;#34; | uniq # 物理cpu核数 cat /proc/cpuinfo | grep -e &amp;#34;cpu cores&amp;#34; -e &amp;#34;siblings&amp;#34; | sort | uniq # 和cpu cores一样说明没有启用超线程.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/filesystem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/filesystem/</guid>
      <description> Title: Linux FileSystem Date: 2016-03-31 21:48:59 Tags: Linux, FileSystem
VFS Linux采用虚拟文件系统，支持多个文件系统协议．
ext/ext2/ext3/ext4 JFS2 ramfs linux的VM(虚拟内存)包括ramfs和swap.
对内存的支持
swap 交换分区，当内存不足，会把内存上暂时不运行的程序保存到swap，获取部分内存空间运行．
tmpfs 临时文件系统, 优先使用ramfs,　其次使用swap.
1 2 3 4  # 挂载tmpfs mount -t tmpfs -o size=1024m tmpfs /path/to/mount # /etc/fstab　tmpfs /dev/shm tmpfs,defaults,size=512m 0 0   vfat/fat/ntfs windows文件系统
cifs/smbfs nfs </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/firewall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/firewall/</guid>
      <description>Title: FireWall Date: 2016-03-31 21:48:59 Tags: Linux, FireWall
Firewall UFW: linux防火墙配置工具，底层还是调用iptables.
filewall: centos的防火墙命令, 底层还是调用iptables.
SELinux Security-Enhanced-Linux
本地安全
Netfilter 网络安全
iptables 通过iptables操作Netfilter实现应用层安全.
table:
1 2 3  filter 默认表 nat mangle   chain;
1 2 3  INPUT FORWARD OUTPUT   iptables命令:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  -L/--list [chain [ rulenum]] -S/--list-rules [chain [rulenum]] -Z/--zero [chain [rulenum]] -A/--append chain -C/--check chain -N/--new chain -X/--delete-chain [chain] -F/--flush [chain] -R/--replace chain rulenum -D/--delete chain [rulenum] -I/--insert chain [rulenum] -P/--policy chain target -E/--rename-chain old-chain new-chain   options:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/grub/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/grub/</guid>
      <description>Title: Grub Date: 2016-03-31 21:48:59 Tags: Linux, Grub
Grub 引导程序。
windows的引导程序是NTloader。
linux/unix的引导程序有lilo和grub。</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/init/</guid>
      <description>Title: Init Date: 2019-02-03 14:04:05 Tags: Linux, Upstart, Systemd
Linux Init linux系统启动的第一个进程,pid=1的进程.
1 2 3  $ ls -l /sbin/init /sbin/init -&amp;gt; upstart /sbin/init -&amp;gt; /lib/systemd/systemd   systemd sytemd是upstart的替代版本．通过查看/sbin/init指向systemd还是upstart.
service文件位置:
1 2 3  /etc/systemd/system/***.service /lib/systemd/system/*.service /usr/lib/systemd/system/*.service   service文件编写:
http://www.jinbuguo.com/systemd/systemd.service.html
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23  [Unit] Description=details After=containerd.service # 之前启动 Before= # 之后运行 Bindsto= # Wants=containerd.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/linux/</guid>
      <description>Title: Linux Date: 2016-03-31 21:48:59 Tags: Linux
Linux Linux严格讲指的是Linux这一类操作系统的内核。
Linux内核的github：
https://github.com/torvalds/linux
Linux内核的站点：
https://www.kernel.org/
商业化的linux系统：
 redhat enterprise linux suse enterprise linux  免费的服务器版本：
 centos (rhel的免费版服务器版) open suse debian/ubuntu  免费的桌面版本： 1. fedora (原来的redhat desktop linux) 2. open suse 3. debian/ubuntu
Linux桌面环境 X windows
KDE
GNOME2(Mate)
GNOME3(Mate/Cinnamon)
Unity
xface
lxde
enlightenment(https://www.enlightenment.org/start)
Linux桌面管理器： xDM
gDM(gnome)
kDM(kde)
lightDM
Linux的shell 查看shell内置命令：
1  help [command]   查看shell的外部命令(包括应用程序的命令行)
1 2 3  man [command] man 1 [command] info [command]   查到包括宏，包，惯用法等</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/monitoring/</guid>
      <description> Title: Linux Monitoring Date: 2016-03-31 21:48:59 Tags: Linux, Monitoring
inode </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/package/</guid>
      <description>Title: Package Date: 2016-06-07 16:57:45 Tags: Linux, dpkg, yum, zypper
DPKG debian的包管理机制。
dpkg dpkg的本地前端工具。
deb - Debian binary package format
dpkg - package manager for Debian
1 2 3 4  dpkg dpkg -X ./xxx.deb xxx # 将deb包解压到xxx目录 dpkg -e ./xxx.deb xxx/DEBIAN # 将control信息解压 dpkg -l | grep pkg # 查看安装的包   dpkg-reconfigure - reconfigure an already installed package
1  dpkg-reconfigure   dpkg-deb - Debian package archive (.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/regularexpression/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/regularexpression/</guid>
      <description>Title: Regular Expression Date: 2016-04-02 11:16:16 Tags: Linux, Posix, RE
RE 在线检测：
https://www.regexpal.com/
RE分为BRE(basic RE), ERE(extended RE), SRE(simpla RE).
在BRE中+?(){}|没有特殊含义，除非用\转义．
在ERE中+?(){}被保留有特殊含义，除非用\转义才表示普通字符．
命令find, grep, sed, awk等都可以使用正则表达式．
特殊字符含义：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  () 对正则表达式分组, ERE \n 再匹配前面的分组n次 .</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/shell/</guid>
      <description>Title: Shell Date: 2016-04-01 20:42:59 Tags: Shell, Bash, Zsh, Fish
Shell Linux的shell有很多种,大多数linux发行版的默认登录shell是BASH。
查看当前使用的shell：
1 2  echo $SHELL echo $0   查看安装了哪些shell：
1  cat /etc/shells   设置登陆shell:
1  $chsh -s $(which shellname)   shell分为登陆shell和交互式shell:
1 2  # 输出有i的就是交互shell $echo $-   非交互登陆shell: * 先运行系统配置文件/etc/profile(调用/etc/bash.bashrc和/etc/profile.d/*.sh) * 然后运行用户配置文件~/.profile(调用~/.bashrc和~/bin) * 最后退出用户登陆~/.bash_logout
交互非登陆shell: * 先运行/etc/bash.bashrc(调用/etc/bash_completion(调用/etc/bash_completion.d/*.sh)) * 然后运行~/.bashrc(调用~/.bash_aliases和~/bash.d和~/bin)
shell相关项目 bash-it 大部分发行版默认使用bash,无需额外安装。
bash的优化项目bash-it：
https://github.com/Bash-it/bash-it
zsh http://www.zsh.org/
oh-my-zsh https://github.com/robbyrussell/oh-my-zsh</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/tpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/tpc/</guid>
      <description> Title: Third Party Command Date: 2016-03-31 21:51:25 Tags: Linux, Shell, TPC
Linux的第三方命令 Linux外部命令的项目是coreutils.
外部命令在coreutils目录中.
第三方命令(相当于外部命令)．
系统管理 1 2 3  $ sudo apt-get install sysstat iostat mpstat   文件和目录管理 autojump:
https://github.com/wting/autojump
fasd:
https://github.com/clvv/fasd
fzf:
https://github.com/junegunn/fzf
压缩备份 磁盘管理 设备管理 网络管理 </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/awk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/awk/</guid>
      <description> Title: Shell awk Date: 2016-12-14 00:55:37 Tags: Shell, awk
awk </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/find/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/find/</guid>
      <description> Title: Shell find Date: 2016-04-20 13:55:36 Tags: Shell, find
find </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/grep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/grep/</guid>
      <description>Title: Shell grep Date: 2016-04-20 13:55:36 Tags: Shell, grep, ack, ack2, ag
grep grep相关的命令：
1 2 3 4  grep egrep == grep -E fgrep == grep -F rgrep == grep -r   grep:
1 2  grep [OPTIONS] PATTERN [FILE/DIR...] grep [OPTIONS] [-e PATTERN | -f FILE] [FILE/DIR...]   options:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63  # Matcher Selection -G, --basic-regexp grep默认只支持BRE, 只能使用基本的RE -E, --extended-regexp 选择ERE, 可以使用扩展的RE # grep -E &amp;#34;pattern1|pattern2&amp;#34; 比如支持或运算 -F, --fixed-strings -P, --perl-regexp perl RE # Matching Control -e PATTERN, --regexp=PATTERN 可以指定多个pattern # grep -e pattern1 -e pattern2 filename 相当于或运算，满足一个就被过滤出来 -f FILE, --file=FILE 文件的每一行就是一个pattern.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/linux/sed/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/linux/sed/</guid>
      <description> Title: Shell sed Date: 2016-04-02 11:15:57 Tags: Shell, sed
sed </description>
    </item>
    
  </channel>
</rss>