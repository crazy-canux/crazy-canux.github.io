<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Databases on Canux&#39;s Blog</title>
    <link>http://canuxcheng.com/database/</link>
    <description>Recent content in Databases on Canux&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="http://canuxcheng.com/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/mssql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/mssql/</guid>
      <description>Title: MSSQL date: 2016-04-06 15:33:42 tags: Mssql, Sql Server
MSSQL 商业版： 1. 企业版 2. 商业智能版 3. 标准版
免费版： 1. Express 2. Developer 3. Compact 4. Web 5. SQL Azure
system databases: 1. master 主数据库 2. model 模板数据库 3. msdb 自动机数据库 4. tempdb 零时交换数据库,不需要备份,挂载到独立的子系统。 5. resource
default port：1433
2008: max instance 16
2012: max instance 256
Client -&amp;gt; SNAC(OLE DB/ODBC) -&amp;gt; Network Libraries -&amp;gt; TDS &amp;lt;=&amp;gt; Server -&amp;gt; Endpoints -&amp;gt; SQL OS(relational engine/storage engine)</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/mongodb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/mongodb/</guid>
      <description>Title: MongoDB Date: 2017-04-16 14:46:14 Tags: Database, NoSQL, MongoDB
MongoDB https://github.com/mongodb/mongo
mongodb是一种开源的文档数据库，高性能，高可用性，自动裁剪．
mongodb的database和关系数据库中的database一样．
mongodb将BSON(mongo的JSON)文档存储在集合(collections)中，集合相当于关系数据库中的表table．
mongodb的collections中的域(field)，相当于关系数据库中的字段column.
mongodb的collections中的文档(document)，相当于关系数据库中的记录行row.
mongodb也支持index索引和primary key主键，但是不支持table joins表连接．
ubuntu安装:
1 2 3 4  $ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv0C49F3730359A14518585931BC711F9BA15703C6 $ echo &amp;#34;deb http://repo.mongodb.org/apt/ubuntu trusty/mongodb-org/3.4multiverse&amp;#34; | sudo tee /etc/apt/sources.list.d/mongodb-org-3.4.list $ sudo apt-get update $ sudo apt-get install -y mongodb-org   ubuntu启动:
1  $ sudo service mongod start   安装完成默认的数据库是test.另外db, admin, local是保留的数据库名称．
mongod的默认端口是27017.
mongo web-gui:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/monitoring/</guid>
      <description> Title: Database Monitoring Date: 2016-04-03 14:46:14 Tags: Database, Monitoring
Monitoring MSSQL https://github.com/Microsoft/mssql-monitoring
https://blogs.msdn.microsoft.com/sqlcat/2017/07/03/how-the-sqlcat-customer-lab-is-monitoring-sql-on-linux/
https://docs.microsoft.com/zh-cn/sql/relational-databases/system-dynamic-management-views/system-dynamic-management-views?view=sql-server-2017
https://docs.microsoft.com/zh-cn/sql/relational-databases/system-dynamic-management-views/sql-server-operating-system-related-dynamic-management-views-transact-sql?view=sql-server-2017
参考telegraf/inputs/sqlserver.
Mysql Oracle Postgresql Redis 通过redis-cli&amp;gt; info查看
1 2 3 4 5 6 7 8  其它指标参考grafana dashboard. Redis_mode: cluster/standalone &amp;gt;&amp;gt;&amp;gt; replication (master/slave) Connected_slaves: 连接的slave实例个数 &amp;gt;&amp;gt;&amp;gt; persistence （rdb和aof的持久化信息）   Mongo 通过mongo&amp;gt; serverStatus()查看
1  其它指标参考grafana dashboard.  </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/mysql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/mysql/</guid>
      <description>Title: Mysql Date: 2016-05-25 12:14:59 Tags: Database, Mysql
Mysql 安装mysql服务器
1 2 3 4 5  $ sudo apt-get install mysql-server $ sudo yum install mysql-community-server $ sudo vim /etc/mysql/mysql.conf.d/mysqld.cnf # 注意mysql的/etc/mysql/my.cnf和相关文件如果设置了bind-address = 127.0.0.1就无法远程访问，需要注释掉．   安装mysql客户端
1 2  $ sudo apt-get install mysql-client $ sudo yum install mysql-community-client   安装开发工具：
1  $ sudo apt-get install libmysqlclient-dev   CLI工具： mysql
GUI工具： mysql workbench
安装完成默认的数据库是 mysql。</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/nosql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/nosql/</guid>
      <description> Title: NoSQL Date: 2016-04-03 14:46:14 Tags: Database, NoSQL
NoSQL NoSQL: Not only SQL.
非关系型数据库。
memcached(cache) redis(cache) mongodb hbase(hadoop) cassandra(hadoop) rethinkdb </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/oracle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/oracle/</guid>
      <description>Title: Oracle Date: 2016-06-01 22:40:22 Tags: Database, Oracle
Oracle oracle的GUI： 1. oracle sql developer(officer) 2. pl/sql 3. toad
oracle的CLI： 1. sqlplus
Oracle命令 sys是oracle默认管理员权限
1  $ sqlplus / as sysdba   system是oracle的默认最高权限，默认密码是manager，需要sys授权才能登陆
1 2 3 4  $ sqlplus / as sysdba &amp;gt; alter user system account unlock; &amp;gt; alter user system identified by manager; &amp;gt; conn system/manager   scott是oracle的默热你的普通用户，默认密码是tiger，需要sys授权才能登陆
1 2 3 4  $ sqlplus / as sysdba &amp;gt; alter user scott account unlock; &amp;gt; alter user scott identified by tiger; &amp;gt; conn scott/tiger   本地命令行执行sql语句：</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/postgre/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/postgre/</guid>
      <description>Title: Postgre Date: 2016-04-03 14:46:14 Tags: Database, Postgre
PostgreSQL 安装postgresql：
1  $ sudo apt-get install postgresql   安装第三方库：
1  $ sudo apt-get install postgresql-contrib-9.3 libpg-dev postgresql-server-dev-9.3   GUI工具： pgAdminIII
CLI工具： psql
postgresql的端口是5432．
postgresql命令 安装完成后默认的admin就是postgres, postgres里有默认数据库postgres.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  $passwd postgres # 修改默认管理员用户postgres的密码 $su - postgres # 切换到默认的postgres用户 $ psql [OPTION]... [DBNAME [USERNAME]] $createuser &amp;lt;username&amp;gt; -P # 在命令行添加用户 $dropuser &amp;lt;username&amp;gt; # 在命令行删除用户 $createdb &amp;lt;database&amp;gt; -O &amp;lt;username&amp;gt; # 在命令行添加数据库 $dropdb &amp;lt;database&amp;gt; # 在命令行删除数据库 # 交互式: $ psql -U [username] [database] # 非交互式： $ PGPASSWORD=&amp;#39;password&amp;#39;;psql -h &amp;lt;host&amp;gt; -p &amp;lt;port&amp;gt; -U &amp;lt;username&amp;gt; -d [database] -c &amp;#34;[psql command]&amp;#34;   导出数据：</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/rdbms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/rdbms/</guid>
      <description>Title: RDBMS Date: 2016-04-03 14:46:14 Tags: Database, RDBMS
RDBMS 关系数据库管理系统。
SQLite Oracle MSSQL Mysql Postgre c 安装ODBC一般能访问所有数据库。
python 安装相应的数据库的python库。
JavaScript go dataset https://github.com/pudo/dataset
1 2 3 4  import dataset db = dataset.connect(&amp;#39;sqlite:///mydatabase.db&amp;#39;) db = dataset.connect(&amp;#39;mysql://user:password@localhost/mydatabase&amp;#39;) db = dataset.connect(&amp;#39;postgresql://scott:tiger@localhost:5432/mydatabase&amp;#39;)   pyodbc https://github.com/mkleehammer/pyodbc
1 2 3 4 5  import pyodbc cnxn = pyodbc.connect(&amp;#39;DRIVER={MySQL};DATABASE=test;SOCKET=/var/lib/mysql/mysql.sock&amp;#39;) cnxn = pyodbc.connect(&amp;#39;DRIVER=MyOracle;DBQ=x.x.x.x:1521/orcl;UID=myuid;PWD=mypwd&amp;#39;) cnxn = pyodbc.connect(&amp;#39;DSN=MySQLServerDatabase;UID=myuid;PWD=mypwd&amp;#39;) # from linux/unix cnxn = pyodbc.connect(r&amp;#39;DRIVER={SQL Server Native Client 11.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/redis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/redis/</guid>
      <description>Title: Redis Date: 2017-05-03 14:46:14 Tags: Database, NoSQL, Redis
Redis http://redisdoc.com/
redis在key-value存储上性能比memcached更好．
安装：
1 2  # redis-cli, redis-sentinel, redis-server $ sudo apt-get install redis-server   只安装redis-cli:
1  $ sudo apt-get install redis-tools   redis-server监听端口6379.
redis-sentinel端口26379.
redis gui:
https://github.com/uglide/RedisDesktopManager
redis的命令 server:
1  redis-server   client:
1  redis-client   test:
1  redis-benchmark   sentinel:
1  redis-sentinel   CLI redis-cli 进入命令行模式</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/sql/</guid>
      <description>Title: SQL Date: 2016-05-25 22:06:13 Tags: Database, SQL
SQL sql是结构化查询语言。
sql是一种标准，几乎所有关系型数据库都遵守。
但是不同的数据库又有自己的扩展。
SQL分为两部分，DML和DDL。
SQL大小写敏感，文本使用单引号，数值不需要引号。
sql语法 sql注释:
1 2 3 4 5 6 7 8 9 10 11 12  # 多行注释 /* comment multi lines in a sql file. */ # 单行注释 /* comment single line */ # 单行注释还可以直接用 -- 表示 select * from table -- where condition; -- select * from table where condition;   DDL DDL: 数据定义语言</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/sqlite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/sqlite/</guid>
      <description> Title: SQLite Date: 2016-05-25 12:14:59 Tags: Database, SQLite
SQLite </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/database/tsdb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/database/tsdb/</guid>
      <description> Title: TSDB Date: 2017-01-03 14:46:14 Tags: Database, TSDB
TSDB Time series database.
时序数据库
influxdb rrdtool graphite opentsdb premetheus </description>
    </item>
    
  </channel>
</rss>