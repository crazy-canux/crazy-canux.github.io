<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Networks on Canux&#39;s Blog</title>
    <link>http://canuxcheng.com/network/</link>
    <description>Recent content in Networks on Canux&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 25 Sep 2017 09:41:39 +0000</lastBuildDate>
    
	<atom:link href="http://canuxcheng.com/network/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Amqp</title>
      <link>http://canuxcheng.com/network/amqp/</link>
      <pubDate>Mon, 25 Sep 2017 09:41:39 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/amqp/</guid>
      <description>AMQP AMQP: Advanced Message Queue Protocol. AMQP是高级消息队列协议．是异步消息传递所使用的应用层协议规范． 常用的开源AMQP框架： https://github.com/rabbitmq https://github.com/apache/kafka https://github.com/apache/activemq</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/command/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/command/</guid>
      <description>Title: Network Command Date: 2019-03-31 21:51:25 Tags: Network, Linux, Windows
telnet 1  telnet   nc/netcat 1 2  nc -z IP PORT # 查看指定tcp://ip:port是否监听 nc -zu IP PORT # 查看udp://ip:port是否监听   ping 1 2  $ sudo apt-get install iputils-ping ping # 用于确定网络的连通性   ifconfig 1 2 3 4  $ sudo apt-get install net-tools ifconfig # 查看up的interface ifconfig -a # 查看所有的interface ifconfig &amp;lt;bridge&amp;gt;/&amp;lt;interface&amp;gt; up/down   brctl 1 2 3 4 5 6  $ sudo apt-get install bridge-utils brctl show brctl addbr &amp;lt;bridge&amp;gt; # 添加bridge brctl delbr &amp;lt;bridge&amp;gt; # 删除bridge brctl addif &amp;lt;bridge&amp;gt; &amp;lt;interface&amp;gt; # 绑定interface到bridge brctl delif &amp;lt;bridge&amp;gt; &amp;lt;interface&amp;gt; # 删除bridge上的interface   ip 1  ip link   route 1  route # 操作路由表的命令：   arp 1  arp # 用于确定IP地址的网卡物理地址   nslookup 1  nslookup # 查询IP地址和对应的域名   ethtool 1  ethtool # 查询网络设备信息   netstat 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  netstat -a, --all, --listening # 显示所有socket, 默认只显示connected -l, --listening # 显示listening -n, --numeric -p, --programs # 显示pid或程序名称 # socket选项: -t, --tcp -u, --udp -w, --raw -x, --unix --ax25 --ipx --netrom # 常用 netstat -anp # 查看哪些端口是打开的． sudo netstat -anp | grep port # 查看端口是否被使用 sudo netstat -tulnp # 查看tcp&amp;amp;udp端口是否被监听   iftop 查看网络流量</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/dns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/dns/</guid>
      <description>Title: DNS Date: 2018-05-03 14:46:19 Tags: Network, DNS
DNS Domain Name System: 域名系统</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/ftp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/ftp/</guid>
      <description> Title: FTP Date: 2016-07-28 16:08:54 Tags: Network, FTP
FTP ftp服务器有很多：
 vsftpd proftpd pyftpdlib  vsftpd 安装vsftpd:
1  $ sudo apt-get install vsftpd   windows开启ftp服务和建立IIS站点即可。
linux配置：
1 2 3 4 5 6 7  $ vim /etc/vsftpd.conf local_root=/home/canux/FTP anon_root=/home/canux/FTP local_enable=YES anonymous_enable=YES chroot_local_user=YES $ sudo service vsftpd restart   ftp的网页浏览格式：
1 2  ftp://host/path ftp://username:password@host:port/path   ftp命令 ftp 1  $ ftp [-46pinegvd] [host [port]]   python的FTP标准库 ftplib </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/haproxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/haproxy/</guid>
      <description> Title: HAProxy Date: 2018-07-28 16:08:54 Tags: Network, HAProxy
HAProxy https://www.haproxy.com/
安装:
1  $ sudo apt-get install haproxy   配置:
1  $ sudo vim /etc/haproxy/haproxy.cfg  </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/http/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/http/</guid>
      <description>Title: HTTP Date: 2016-09-13 01:39:34 Tags: Network, http, https, url, html, xml
HTTP/HTTPS http port: 80
https port: 443
http/https的请求方式：
1 2 3 4 5 6 7  get # 从服务器取出资源 post # 在服务器新建资源 put # 在服务器更新资源，客户端提供改变后的完整资源 delete # 从服务器删除资源 patch # 在服务器更新资源，客户端提供改变的属性 head # 获取资源的源数据 options # 获取资源的哪些信息是客户端可以改变的信息   URL: Uniform Resource Locator
URI: Universal Resource Identifier
1 2 3 4 5 6 7  &amp;lt;scheme&amp;gt;://&amp;lt;netloc&amp;gt;/&amp;lt;path&amp;gt;;&amp;lt;params&amp;gt;?&amp;lt;query&amp;gt;#&amp;lt;fragment&amp;gt; scheme: http/https/ftp/file netloc: username:password@host:port path: /path/to/path params: options arguments query: connector&amp;amp;key-value fragment:   http命令 curl 1  $ curl [options] [URL.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/keepalived/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/keepalived/</guid>
      <description>Title: Keepalived Date: 2018-07-28 16:08:54 Tags: Network, Keepalived
Keepalived http://www.keepalived.org/
https://github.com/acassen/keepalived
安装:
配置:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/ldap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/ldap/</guid>
      <description>Title: LDAP Date: 2016-07-28 16:08:54 Tags: Network, LDAP
LDAP LDAP占用tcp和udp的389端口。
使用SSL的LDAP占用tcp和udp的636端口。
Lightweight Directory Access Protocol.
http://www.openldap.org/
LDAP的windows工具：LDAPSoft LDAP Browser</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/monitoring/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/monitoring/</guid>
      <description>Title: Network Monitoring Date: 2016-04-03 14:46:19 Tags: Network, Monitoring
Monitoring network usage:
1 2  bytes_sent(out) bytes_recv(in)   packets:
1 2  packets_sent(out) packets_recv(in)   error_in/out:
1 2 3 4  SELECT non_negative_derivative(mean(&amp;#34;err_in&amp;#34;), 1s) AS &amp;#34;recv&amp;#34;, non_negative_derivative(mean(&amp;#34;err_out&amp;#34;), 1s) AS &amp;#34;send&amp;#34; FROM &amp;#34;net&amp;#34; WHERE &amp;#34;interface&amp;#34; =~ /^(vlan|eth|ens|bond).*/ AND $timeFilter GROUP BY time($__interval), &amp;#34;host&amp;#34;, &amp;#34;interface&amp;#34; fill(none)   drop_in/out:
1 2 3 4  SELECT non_negative_derivative(mean(&amp;#34;drop_in&amp;#34;), 1s) AS &amp;#34;recv&amp;#34;, non_negative_derivative(mean(&amp;#34;drop_out&amp;#34;), 1s) AS &amp;#34;send&amp;#34; FROM &amp;#34;net&amp;#34; WHERE &amp;#34;interface&amp;#34; =~ /^(vlan|eth|ens|bond).</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/nfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/nfs/</guid>
      <description>Title: NFS Date: 2016-07-28 16:08:54 Tags: Network, NFS
NFS NFS: Network File System
安装：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  # 在nfs服务器安装nfs服务 $ sudo apt-get install nfs-kernel-server # 添加共享目录并授权 $ sudo vim /etc/exports /home/user/share *(rw,no_root_squash) $ sudo service nfs-kernel-server restart # 在nfs客户端安装nfs客户端 $ sudo apt-get install nfs-common # 自动挂载 $ sudo vim /etc/fstab nfs-server-ip:/home/user/share /home/user1/share nfs auto 0 0 $ sudo mount -a # 手动挂载 $ sudo mount -t nfs nfs-server-ip:/home/user/share /home/user1/share   nfs-server 配置/etc/exports</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/ntp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/ntp/</guid>
      <description>Title: NTP Date: 2016-07-28 16:08:54 Tags: Network, NTP
NTP NFS: Network Time Protocol
UTC: Coordinated Universal Time, 世界统一时间
GMT: Greenwich Mean Time, 格林尼治标准时间, = UTC
CET: Central European Time, 欧洲中部时间, = UTC+1, 下令时=UTC+2
CST: Chinese Standard Time, 中国标准时间, = UTC+8
时区管理 1 2 3 4  $ timedatectl list-timezones # 查看所有时区 $ sudo timedatectl set-timezone Asia/Shanghai # 设置时区 $ sudo timedatectl set-timezone Etc/UTC $ ls -l /etc/localtime # 应该是一个链接   ntp 安装:</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/network/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/network/</guid>
      <description>Title: Network Date: 2016-04-03 14:46:19 Tags: Network
网络基础 小端： 低字节在起始地址，高字节在高地址
大端： 高字节在起始地址，低字节在高地址
linux一般是小端，unix一般是大端
网络模型 OSI七层模型:
 应用层 表示层 会话层
 传输层
 网络层
 数据链路层
 物理层
  TCP/IP四层模型：
 应用层 传输层 网络互联层 主机到网络层  应用层 0-1024是系统保留端口, 1024-65535是可用自定义端口
https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml
基于TCP的应用层
1 2 3 4 5 6 7 8 9 10 11 12 13  FTP: 21, SSH: 22, Telnet: 23, SMTP: 25, DNS: 53, HTTP: 80, HTTPS: 443, POP3: 110, POP3 SSL: 995 IMAP: 143, IMAP SSL: 993, NNTP: 119, NNTP SSL: 563,   基于UDP的应用层</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/rest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/rest/</guid>
      <description>Title: REST Date: 2018-07-07 16:43:15 Tags: WEB, REST
REST REST: REpresentational State Transfer．
restclient 一个是firefox的插件．
https://github.com/chao/RESTClient
另一个是java开发的application.
https://github.com/wiztools/rest-client
postman postman是一个application,同时也可以从chrome启动.
https://github.com/postmanlabs
soupui 一个用于SOAP和REST的application.
https://github.com/SmartBear/soapui</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/rpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/rpc/</guid>
      <description>Title: RPC Date: 2017-09-03 14:46:19 Tags: Network, RPC
RPC Remote Procedure Call Protocol: 远程过程调用.
google的rpc框架，支持多语言:
https://github.com/grpc/grpc
facebook的rpc框架，贡献给了apache, 支持多语言:
https://github.com/apache/thrift</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/rabbitmq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/rabbitmq/</guid>
      <description>Title: RabbitMQ Date: 2017-09-25 09:41:39 Tags: Network, Rabbitmq
Rabbitmq https://github.com/rabbitmq
RabbitMQ是一个erlang开发的AMQP的开源项目．
rabbitmq-server也叫broker server
rabbitmq的三个组件：
 exchange,　交换器，发送消息的实体 binding, 绑定器，连接交换器和队列，并且封装消息的路由信息 queue,　队列，接受消息的实体  workflow:
1 2 3 4 5  producer(publish-message) =&amp;gt; rabbitmq-server =&amp;gt; exchange -&amp;gt; binding -&amp;gt; queue =&amp;gt; =&amp;gt; comsumer   producer: 生产message并且publish到rabbitmq-server.
consumer: 连接到rabbitmq-server并且subscribe一些queue.
connection: producer和consumer都是通过tcp连接到rabbitmq-server.
channels: 建立在tcp连接中的虚拟连接，用于处理数据流动.
queue:　生产者和消费者都应该创建queue.(只能通过exchange接收message)
exchanges类型:
 fanout: 所有绑定到此exchange的queue都可以接收消息 direct: 通过routingKey和exchange决定的那个唯一的queue可以接收消息 topic：所有符合routingKey(此时可以是一个表达式)的routingKey所bind的queue可以接收消息  message类型:
 messages: 生产者产生的总消息数． messages_ready: 等待deliver给消费者的消息． messages_unack: 已经被consumer处理，但是没有被ack的消息．  virtual hosts: 本质就是一个rabbitmq server,拥有独立的exchange,queue.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/smtp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/smtp/</guid>
      <description>Title: SMTP Date: 2017-04-26 09:56:04 Tags: Network, EMAIL, SMTP
Email MTA: Mail Transfer Agent
MUA: Mail User Agent
python邮件服务器MTA：smtp协议
python客户端MUA：本地协议pop3, 远程协议imap
mailutils: mailutils默认安装postfix,如果已经安装其它MTA就使用已经安装的．
1  $ sudo apt-get install mailutils   非交互安装mailutils:
1 2 3 4  # 这里不用配置任何参数． $ sudo debconf-set-selections &amp;lt;&amp;lt;&amp;lt; &amp;#34;postfix postfix/mailname string &amp;#34; $ sudo debconf-set-selections &amp;lt;&amp;lt;&amp;lt; &amp;#34;postfix postfix/main_mailer_type string &amp;#39;Internet Site&amp;#39;&amp;#34; $ sudo apt-get install -y mailutils   测试：
1  $ echo &amp;#34;test mail body&amp;#34; | mail -s &amp;#34;test mail title&amp;#34; canuxcheng@gmail.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/snmp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/snmp/</guid>
      <description> Title: SNMP Date: 2016-04-26 09:56:04 Tags: Network, SNMP
SNMP Simple Network Management Protocol, 简单网络管理协议
MIB
SMI
安装和配置snmp:
1  $sudo apt-get install snmp snmpd snmp-mibs-downloader   snmp命令 </description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/ssh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/ssh/</guid>
      <description>Title: SSH Date: 2016-07-28 15:53:34 Tags: Network, SSH
OpenSSH http://www.openssh.com/
windows上支持ssh协议的客户端：
 putty xshell MobaXterm secureCRT  安装：
1  $ sudo apt-get install openssh-server   SSH命令 ssh是openssh协议的客户端．
远程操作的命令包括ssh, scp, sftp.
ssh
1 2 3  $ ssh # 远程执行命令需要用双引号，不能用单引号 $ ssh username@host &amp;#34;command/script&amp;#34;   scp
1  $ scp   sftp
1  $ sftp   常用选项：
1 2 3 4  -C compression # 不需要输入yes来交互, 或者修改/etc/ssh/ssh_config -o StrictHostKeyChecking=no -o UserKnownHostsFile /dev/null   ssh也包括一些密钥管理的命令.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/samba/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/samba/</guid>
      <description>Title: Samba Date: 2016-04-03 14:46:19 Tags: Network, Samba
SMB/CIFS SMB/CIFS占用TCP和UDP的139和445端口。
SMB: server message block.
CIFS: common internet file system, 是SMB的升级版本。
Samba Samba: Linux/Unix上的SBM/CIFS,用于跨平台的共享。
安装:
1  $ sudo apt-get insall samba   配置：
1 2 3 4 5 6 7 8 9  $ vim /etc/samba/smb.conf [shared] comment = share this folder path = /home/canux/Share public = yes guest ok = yes browsable = yes writable = no read only = yes   重启：</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/webhook/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/webhook/</guid>
      <description>Title: WebHook Date: 2018-07-07 16:43:15 Tags: Network, WebHook
WebHook 用于server和server之间通讯．</description>
    </item>
    
    <item>
      <title></title>
      <link>http://canuxcheng.com/network/websocket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://canuxcheng.com/network/websocket/</guid>
      <description>Title: WebSocket Date: 2018-04-03 14:46:19 Tags: Network, WebSocket
WebSocket websocket用于server和browser之间通讯．
websocket采用特殊报头，使得浏览器和服务器只需要做一个握手的动作．
通讯数据以\x00开头，以\xFF结尾．
url:
1 2  ws:// wss://   一个客户端只建立一个tcp连接
服务端可以推送/push数据到web客户端
有更加亲量级的头，减少数据传送．</description>
    </item>
    
  </channel>
</rss>